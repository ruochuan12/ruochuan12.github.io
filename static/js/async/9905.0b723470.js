"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["9905"],{47904:function(e,n,i){i.r(n),i.d(n,{default:()=>l});var t=i(52676),a=i(40453),s=i(20713);function r(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",blockquote:"blockquote",ul:"ul",li:"li",input:"input",pre:"pre",h3:"h3",hr:"hr",strong:"strong"},(0,a.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"taro-源码揭秘12-taro-如何编译成小程序文件的",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#taro-源码揭秘12-taro-如何编译成小程序文件的",children:"#"}),"Taro 源码揭秘：12. Taro 如何编译成小程序文件的"]}),"\n",(0,t.jsx)(s.Z,{defaultLocale:"zh-CN"}),"\n",(0,t.jsxs)(n.h2,{id:"1-前言",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,t.jsxs)(n.p,{children:["大家好，我是",(0,t.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，欢迎关注我的",(0,t.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MacNfeTPODNMLLFdzrULow",rel:"noopener noreferrer",target:"_blank",children:"公众号：若川视野"}),"。从 2021 年 8 月起，我持续组织了好几年的",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习 200 行左右的源码共读活动"}),"，感兴趣的可以",(0,t.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,t.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,t.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（6k+人）第一的专栏，写有几十篇源码文章。"]}),"\n",(0,t.jsxs)(n.p,{children:["截至目前（",(0,t.jsx)(n.code,{children:"2025-04-16"}),"），目前最新是 ",(0,t.jsx)(n.a,{href:"https://github.com/NervJS/taro/releases/tag/v4.0.12",rel:"noopener noreferrer",target:"_blank",children:(0,t.jsx)(n.code,{children:"4.0.12"})}),"，官方",(0,t.jsx)(n.code,{children:"4.0"}),"正式版本的介绍文章暂未发布。官方之前发过",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7330792655125463067",rel:"noopener noreferrer",target:"_blank",children:"Taro 4.0 Beta 发布：支持开发鸿蒙应用、小程序编译模式、Vite 编译等"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["计划写一个 Taro 源码揭秘系列，博客地址：",(0,t.jsx)(n.a,{href:"https://ruochuan12.github.io/taro",rel:"noopener noreferrer",target:"_blank",children:"https://ruochuan12.github.io/taro"})," 可以加入书签，持续关注",(0,t.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"时隔 3 个月才继续写第 11 篇，我会继续持续写下去，争取做全网最新最全的 Taro 源码系列。"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7378363694939783178",rel:"noopener noreferrer",target:"_blank",children:"1. 揭开整个架构的入口 CLI => taro init 初始化项目的秘密"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7380195796208205824",rel:"noopener noreferrer",target:"_blank",children:"2. 揭开整个架构的插件系统的秘密"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7390335741586931738",rel:"noopener noreferrer",target:"_blank",children:"3. 每次创建新的 taro 项目（taro init）的背后原理是什么"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7403193330271682612",rel:"noopener noreferrer",target:"_blank",children:"4. 每次 npm run dev:weapp 开发小程序，build 编译打包是如何实现的？"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7403915119448915977",rel:"noopener noreferrer",target:"_blank",children:"5. 高手都在用的发布订阅机制 Events 在 Taro 中是如何实现的？"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7407648740926291968",rel:"noopener noreferrer",target:"_blank",children:"6. 为什么通过 Taro.xxx 能调用各个小程序平台的 API，如何设计实现的?"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7415911762128797696",rel:"noopener noreferrer",target:"_blank",children:"7. Taro.request 和请求响应拦截器是如何实现的"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7434175547784020031",rel:"noopener noreferrer",target:"_blank",children:"8. Taro 是如何使用 webpack 打包构建小程序的？"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7439743635161710604",rel:"noopener noreferrer",target:"_blank",children:"9. Taro 是如何生成 webpack 配置进行构建小程序的？"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7452329275561279529",rel:"noopener noreferrer",target:"_blank",children:"10. Taro 到底是怎样转换成小程序文件的？"})]}),"\n",(0,t.jsxs)(n.li,{className:"task-list-item",children:[(0,t.jsx)(n.input,{type:"checkbox",disabled:!0})," ","等等"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"前面 4 篇文章都是讲述编译相关的，CLI、插件机制、初始化项目、编译构建流程。"}),"\n",(0,t.jsx)(n.p,{children:"第 5-7 篇讲述的是运行时相关的 Events、API、request 等。"}),"\n",(0,t.jsx)(n.p,{children:"第 10 篇接着继续追随第 4 篇和第 8、9 篇的脚步，分析 TaroMiniPlugin webpack 的插件实现（全流程讲述）。"}),"\n",(0,t.jsx)(n.p,{children:"第 11 篇，我们继续分析 TaroMiniPlugin webpack 的插件实现。分析 Taro 是如何解析入口文件和页面的？"}),"\n",(0,t.jsxs)(n.p,{children:["关于克隆项目、环境准备、如何调试代码等，参考",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7378363694939783178#heading-1",rel:"noopener noreferrer",target:"_blank",children:"第 1 篇文章-准备工作、调试"}),"和",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7403193330271682612#heading-2",rel:"noopener noreferrer",target:"_blank",children:"第 4 篇 npm run dev:weapp（本文以这篇文章中的调试为例）"}),"。后续文章基本不再过多赘述。"]}),"\n",(0,t.jsx)(n.p,{children:"学完本文，你将学到："}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"1. Taro 是如何解析入口文件和页面的？\n等等\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// packages/taro-webpack5-runner/src/plugins/MiniPlugin.ts\ncompilation.hooks.processAssets.tapAsync(\n	{\n		name: PLUGIN_NAME,\n		stage: PROCESS_ASSETS_STAGE_ADDITIONAL,\n	},\n	this.tryAsync<any>(async () => {\n		// 如果是子编译器，证明是编译独立分包，进行单独的处理\n		if ((compilation as any).__tag === CHILD_COMPILER_TAG) {\n			await this.generateIndependentMiniFiles(compilation, compiler);\n		} else {\n			await this.generateMiniFiles(compilation, compiler);\n		}\n	})\n);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// packages/taro-webpack5-runner/src/plugins/MiniPlugin.ts\n/** 生成小程序相关文件 */\nasync generateMiniFiles (compilation: Compilation, compiler: Compiler) {\n//  compilation.assets[xxx] = xxx;\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"这个函数特别长，简单来说就是以下这几项"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"生成 XS 文件 generateXSFile"}),"\n",(0,t.jsx)(n.li,{children:"生成配置文件 generateConfigFile"}),"\n",(0,t.jsx)(n.li,{children:"生成模板文件 generateTemplateFile"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["最终通过 ",(0,t.jsx)(n.code,{children:"compilation.assets[xxx] = xxx;"})," 赋值语句生成文件。"]}),"\n",(0,t.jsx)(n.p,{children:"我们来看下具体实现。"}),"\n",(0,t.jsxs)(n.h2,{id:"generateminifiles-生成小程序文件",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generateminifiles-生成小程序文件",children:"#"}),"generateMiniFiles 生成小程序文件"]}),"\n",(0,t.jsx)(n.p,{children:"是 TaroMiniPlugin 类中用于生成小程序相关产物（如模板、配置、样式、资源等）的核心方法。它的主要职责是根据收集到的页面、组件、配置等信息，生成最终小程序所需的各种文件，并写入到 webpack 的 compilation.assets 中。其主要流程如下："}),"\n",(0,t.jsx)(n.p,{children:"处理样式文件名重复问题\n首先遍历所有产物，如果发现样式文件名重复（如 .wxss.wxss），则去重，保证产物中只有一个正确的样式文件名。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"// packages/taro-webpack5-runner/src/plugins/MiniPlugin.ts\n/** 生成小程序相关文件 */\n  async generateMiniFiles (compilation: Compilation, compiler: Compiler) {\n    const { RawSource } = compiler.webpack.sources\n    const { template, combination, isBuildPlugin, sourceDir } = this.options\n    const { modifyMiniConfigs } = combination.config\n    const baseTemplateName = 'base'\n    const isUsingCustomWrapper = componentConfig.thirdPartyComponents.has('custom-wrapper')\n\n    /**\n     * 与原生小程序混写时解析模板与样式\n     */\n    compilation.getAssets().forEach(({ name: assetPath }) => {\n      const styleExt = this.options.fileType.style\n      if (new RegExp(`${styleExt}${styleExt}$`).test(assetPath)) {\n        const assetObj = compilation.assets[assetPath]\n        const newAssetPath = assetPath.replace(styleExt, '')\n        compilation.assets[newAssetPath] = assetObj\n      }\n    })\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"自定义配置处理\n如果配置中定义了 modifyMiniConfigs 钩子，则调用该钩子允许用户自定义修改所有页面、组件的配置内容。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'if (typeof modifyMiniConfigs === "function") {\n	await modifyMiniConfigs(this.filesConfig);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"生成 app 配置文件\n在非 blended 模式且不是插件构建时，生成主包的 app 配置文件（如 app.json），内容来自 this.filesConfig。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'if ((!this.options.blended || !this.options.newBlended) && !isBuildPlugin) {\n	const appConfigPath = this.getConfigFilePath(this.appEntry);\n	const appConfigName = path\n		.basename(appConfigPath)\n		.replace(path.extname(appConfigPath), "");\n	this.generateConfigFile(\n		compilation,\n		compiler,\n		this.appEntry,\n		this.filesConfig[appConfigName].content\n	);\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"生成基础组件模板和配置\n如果当前模板不支持递归（如微信、QQ 小程序），则生成基础组件（comp）和自定义包装器（custom-wrapper）的模板和配置文件。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'if (!template.isSupportRecursive) {\n	// 如微信、QQ 不支持递归模版的小程序，需要使用自定义组件协助递归\n	this.generateTemplateFile(\n		compilation,\n		compiler,\n		baseCompName,\n		template.buildBaseComponentTemplate,\n		this.options.fileType.templ\n	);\n\n	const baseCompConfig = {\n		component: true,\n		styleIsolation: "apply-shared",\n		usingComponents: {\n			[baseCompName]: `./${baseCompName}`,\n		},\n	} as Config & {\n		component?: boolean;\n		usingComponents: Record<string, string>;\n	};\n\n	if (isUsingCustomWrapper) {\n		baseCompConfig.usingComponents[\n			customWrapperName\n		] = `./${customWrapperName}`;\n		this.generateConfigFile(compilation, compiler, customWrapperName, {\n			component: true,\n			styleIsolation: "apply-shared",\n			usingComponents: {\n				[baseCompName]: `./${baseCompName}`,\n				[customWrapperName]: `./${customWrapperName}`,\n			},\n		});\n	}\n\n	this.generateConfigFile(\n		compilation,\n		compiler,\n		baseCompName,\n		baseCompConfig\n	);\n} else {\n	if (isUsingCustomWrapper) {\n		this.generateConfigFile(compilation, compiler, customWrapperName, {\n			component: true,\n			styleIsolation: "apply-shared",\n			usingComponents: {\n				[customWrapperName]: `./${customWrapperName}`,\n			},\n		});\n	}\n}\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"this.generateTemplateFile(\n	compilation,\n	compiler,\n	baseTemplateName,\n	template.buildTemplate,\n	componentConfig\n);\nisUsingCustomWrapper &&\n	this.generateTemplateFile(\n		compilation,\n		compiler,\n		customWrapperName,\n		template.buildCustomComponentTemplate,\n		this.options.fileType.templ\n	);\n"})}),"\n",(0,t.jsx)(n.p,{children:"生成全局模板和自定义包装器模板\n生成全局的 base 模板和 custom-wrapper 模板（如 base.wxml、custom-wrapper.wxml），并根据配置决定是否压缩 XML。"}),"\n",(0,t.jsx)(n.p,{children:"生成全局 XS 脚本\n如果平台支持 XS 脚本，则生成 utils 脚本文件。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'this.generateXSFile(compilation, compiler, "utils");\n'})}),"\n",(0,t.jsx)(n.p,{children:"生成所有组件的配置和模板\n遍历所有组件，为每个组件生成配置文件和模板文件（非原生组件才生成模板）。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'this.components.forEach((component) => {\n	const importBaseTemplatePath = promoteRelativePath(\n		path.relative(\n			component.path,\n			path.join(\n				sourceDir,\n				isBuildPlugin ? "plugin" : "",\n				this.getTemplatePath(baseTemplateName)\n			)\n		)\n	);\n	const config = this.filesConfig[this.getConfigFilePath(component.name)];\n	if (config) {\n		this.generateConfigFile(\n			compilation,\n			compiler,\n			component.path,\n			config.content\n		);\n	}\n	if (!component.isNative) {\n		this.generateTemplateFile(\n			compilation,\n			compiler,\n			component.path,\n			template.buildPageTemplate,\n			importBaseTemplatePath\n		);\n	}\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"生成所有页面的配置和模板\n遍历所有页面，为每个页面生成配置文件和模板文件（非原生页面才生成模板），并处理分包页面的过滤。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'this.pages.forEach((page) => {\n	const importBaseTemplatePath = promoteRelativePath(\n		path.relative(\n			page.path,\n			path.join(\n				sourceDir,\n				isBuildPlugin ? "plugin" : "",\n				this.getTemplatePath(baseTemplateName)\n			)\n		)\n	);\n	const config = this.filesConfig[this.getConfigFilePath(page.name)];\n	// pages 里面会混合独立分包的，在这里需要过滤一下，避免重复生成 assets\n	const isIndependent = !!this.getIndependentPackage(page.path);\n\n	if (isIndependent) return;\n\n	// 生成页面模板需要在生成页面配置之前，因为会依赖到页面配置的部分内容\n	if (!page.isNative) {\n		this.generateTemplateFile(\n			compilation,\n			compiler,\n			page.path,\n			template.buildPageTemplate,\n			importBaseTemplatePath,\n			config\n		);\n	}\n\n	if (config) {\n		const importBaseCompPath = promoteRelativePath(\n			path.relative(\n				page.path,\n				path.join(\n					sourceDir,\n					isBuildPlugin ? "plugin" : "",\n					this.getTargetFilePath(baseCompName, "")\n				)\n			)\n		);\n		const importCustomWrapperPath = promoteRelativePath(\n			path.relative(\n				page.path,\n				path.join(\n					sourceDir,\n					isBuildPlugin ? "plugin" : "",\n					this.getTargetFilePath(customWrapperName, "")\n				)\n			)\n		);\n		config.content.usingComponents = {\n			...config.content.usingComponents,\n		};\n\n		if (isUsingCustomWrapper) {\n			config.content.usingComponents[customWrapperName] =\n				importCustomWrapperPath;\n		}\n		if (!template.isSupportRecursive && !page.isNative) {\n			config.content.usingComponents[baseCompName] = importBaseCompPath;\n		}\n		this.generateConfigFile(\n			compilation,\n			compiler,\n			page.path,\n			config.content\n		);\n	}\n});\n'})}),"\n",(0,t.jsx)(n.p,{children:"生成 tabbar 图标资源\n调用 generateTabBarFiles 方法，将 tabbar 所需的图片资源写入产物。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"this.generateTabBarFiles(compilation, compiler);\n"})}),"\n",(0,t.jsx)(n.p,{children:"注入公共样式\n调用 injectCommonStyles 方法，将公共样式自动引入到 app 和各页面样式文件中。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"this.injectCommonStyles(compilation, compiler);\n"})}),"\n",(0,t.jsx)(n.p,{children:"生成暗黑模式主题文件\n如果配置了暗黑模式主题，则输出对应的主题文件。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"if (this.themeLocation) {\n	this.generateDarkModeFile(compilation, compiler);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"插件模式下生成 plugin.json\n如果是插件构建，自动生成并写入 plugin.json 文件。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'if (isBuildPlugin) {\n	const pluginJSONPath = path.join(sourceDir, "plugin", "plugin.json");\n	if (fs.existsSync(pluginJSONPath)) {\n		const pluginJSON = fs.readJSONSync(pluginJSONPath);\n		this.modifyPluginJSON(pluginJSON);\n		compilation.assets["plugin.json"] = new RawSource(\n			JSON.stringify(pluginJSON)\n		);\n	}\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"generateconfigfile",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generateconfigfile",children:"#"}),"generateConfigFile"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"generateConfigFile (compilation: Compilation, compiler: Compiler, filePath: string, config: Config & { component?: boolean }) {\n    const { RawSource } = compiler.webpack.sources\n    const fileConfigName = this.getConfigPath(this.getComponentName(filePath))\n\n    const unofficialConfigs = ['enableShareAppMessage', 'enableShareTimeline', 'enablePageMeta', 'components']\n    unofficialConfigs.forEach(item => {\n      delete config[item]\n    })\n\n    this.adjustConfigContent(config)\n\n    const fileConfigStr = JSON.stringify(config)\n    compilation.assets[fileConfigName] = new RawSource(fileConfigStr)\n  }\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"generatetemplatefile-生成模板文件",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generatetemplatefile-生成模板文件",children:"#"}),"generateTemplateFile 生成模板文件"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"generateTemplateFile (compilation: Compilation, compiler: Compiler, filePath: string, templateFn: (...args) => string, ...options) {\n    const { RawSource } = compiler.webpack.sources\n    let templStr = templateFn(...options)\n    const fileTemplName = this.getTemplatePath(this.getComponentName(filePath))\n\n    if (this.options.combination.config.minifyXML?.collapseWhitespace) {\n      const minify = require('html-minifier').minify\n      templStr = minify(templStr, {\n        collapseWhitespace: true,\n        keepClosingSlash: true\n      })\n    }\n\n    compilation.assets[fileTemplName] = new RawSource(templStr)\n  }\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"generatexsfile-生产-xs-文件",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generatexsfile-生产-xs-文件",children:"#"}),"generateXSFile 生产 xs 文件"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"generateXSFile (compilation: Compilation, compiler: Compiler, xsPath) {\n    const { RawSource } = compiler.webpack.sources\n    const ext = this.options.fileType.xs\n    const isUseXS = this.options.template.isUseXS\n\n    if (ext == null || !isUseXS) {\n      return\n    }\n\n    const xs = this.options.template.buildXScript()\n    const fileXsName = this.getTargetFilePath(xsPath, ext)\n    const filePath = fileXsName\n    compilation.assets[filePath] = new RawSource(xs)\n  }\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"generatetabbarfiles-输出-tabbar-icons-文件",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#generatetabbarfiles-输出-tabbar-icons-文件",children:"#"}),"generateTabBarFiles 输出 tabbar icons 文件"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"/**\n * 输出 tabbar icons 文件\n */\ngenerateTabBarFiles (compilation: Compilation, { webpack }: Compiler) {\n  const { RawSource } = webpack.sources\n  this.tabBarIcons.forEach(icon => {\n    const iconPath = path.resolve(this.options.sourceDir, icon)\n    if (fs.existsSync(iconPath)) {\n      const iconSource = fs.readFileSync(iconPath)\n      compilation.assets[icon] = new RawSource(iconSource)\n    }\n  })\n}\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"总结",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"}),"总结"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"generateMiniFiles"})," 负责将 Taro 编译期收集到的所有页面、组件、配置、资源等，最终生成小程序平台所需的所有产物文件，并写入 webpack 的产物集合。它是 Taro 小程序端产物生成的关键环节，确保了最终产物的完整性和平台兼容性。"]}),"\n",(0,t.jsx)(n.p,{children:"启发：Taro 是非常知名的跨端框架，我们在使用它，享受它带来便利的同时，有余力也可以多为其做出一些贡献。比如帮忙解答一些 issue 或者提 pr 修改 bug 等。\n在这个过程，我们会不断学习，促使我们去解决问题，带来的好处则是不断拓展知识深度和知识广度。\n有些时候还是需要深入学习源码，理解源码才能更好的针对项目做相应的优化。"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"如果看完有收获，欢迎点赞、评论、分享、收藏支持。你的支持和肯定，是我写作的动力。也欢迎提建议和交流讨论"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["作者：常以",(0,t.jsx)(n.strong,{children:"若川"}),"为名混迹于江湖。所知甚少，唯善学。",(0,t.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川的博客"}),"，",(0,t.jsx)(n.a,{href:"https://github.com/ruochuan12/blog",rel:"noopener noreferrer",target:"_blank",children:"github blog"}),"，可以点个 ",(0,t.jsx)(n.code,{children:"star"})," 鼓励下持续创作。"]}),"\n",(0,t.jsxs)(n.p,{children:["最后可以持续关注我",(0,t.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"@若川"}),"，欢迎关注我的",(0,t.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MacNfeTPODNMLLFdzrULow",rel:"noopener noreferrer",target:"_blank",children:"公众号：若川视野"}),"。从 2021 年 8 月起，我持续组织了好几年的",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习 200 行左右的源码共读活动"}),"，感兴趣的可以",(0,t.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,t.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,t.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（6k+人）第一的专栏，写有几十篇源码文章。"]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(r,e)})):r(e)}let l=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["taro%2Fmini-plugin-3%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"generateminifiles-生成小程序文件",text:"generateMiniFiles 生成小程序文件",depth:2},{id:"generateconfigfile",text:"generateConfigFile",depth:3},{id:"generatetemplatefile-生成模板文件",text:"generateTemplateFile 生成模板文件",depth:3},{id:"generatexsfile-生产-xs-文件",text:"generateXSFile 生产 xs 文件",depth:3},{id:"generatetabbarfiles-输出-tabbar-icons-文件",text:"generateTabBarFiles 输出 tabbar icons 文件",depth:3},{id:"总结",text:"总结",depth:2}],title:"Taro 源码揭秘：12. Taro 如何编译成小程序文件的",headingTitle:"Taro 源码揭秘：12. Taro 如何编译成小程序文件的",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,i){i.d(n,{Z:()=>l});var t=i(52676),a=i(75271),s=i(92815);i(18544);let r={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function o(e,n,i){let t=Object.keys(r).includes(n)?n:i;return r[t](e)}let l=e=>{let{defaultLocale:n="en-US"}=e,i=(0,s.Vi)().page.readingTimeData,r=(0,s.Jr)(),l=(0,s.e7)(),[c,p]=(0,a.useState)(o(i,r,n));return(0,a.useEffect)(()=>{p(o(i,r,n))},[r,i]),(0,t.jsx)("span",{"data-dark":String(l),className:"rp-reading-time",children:c})}}}]);