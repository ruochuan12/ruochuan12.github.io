"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["8123"],{88008:function(e,n,t){t.r(n),t.d(n,{default:()=>s});var r=t(52676),i=t(40453),a=t(20713);function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",pre:"pre",code:"code"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"webpack-源码系列",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webpack-源码系列",children:"#"}),"webpack 源码系列"]}),"\n",(0,r.jsx)(a.Z,{defaultLocale:"zh-CN"}),"\n",(0,r.jsxs)(n.h2,{id:"调试",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#调试",children:"#"}),"调试"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'{\n "main": "lib/index.js",\n  "bin": {\n    "webpack": "bin/webpack.js"\n  },\n}\n'})}),"\n",(0,r.jsxs)(n.h1,{id:"libindexjs",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#libindexjs",children:"#"}),"lib/index.js"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'/*\n	MIT License http://www.opensource.org/licenses/mit-license.php\n	Author Tobias Koppers @sokra\n*/\n\n"use strict";\n\nconst util = require("util");\nconst memoize = require("./util/memoize");\n\n/** @typedef {import("../declarations/WebpackOptions").Entry} Entry */\n/** @typedef {import("../declarations/WebpackOptions").EntryNormalized} EntryNormalized */\n/** @typedef {import("../declarations/WebpackOptions").EntryObject} EntryObject */\n/** @typedef {import("../declarations/WebpackOptions").ExternalItemFunctionData} ExternalItemFunctionData */\n/** @typedef {import("../declarations/WebpackOptions").ExternalItemObjectKnown} ExternalItemObjectKnown */\n/** @typedef {import("../declarations/WebpackOptions").ExternalItemObjectUnknown} ExternalItemObjectUnknown */\n/** @typedef {import("../declarations/WebpackOptions").ExternalItemValue} ExternalItemValue */\n/** @typedef {import("../declarations/WebpackOptions").Externals} Externals */\n/** @typedef {import("../declarations/WebpackOptions").FileCacheOptions} FileCacheOptions */\n/** @typedef {import("../declarations/WebpackOptions").LibraryOptions} LibraryOptions */\n/** @typedef {import("../declarations/WebpackOptions").MemoryCacheOptions} MemoryCacheOptions */\n/** @typedef {import("../declarations/WebpackOptions").ModuleOptions} ModuleOptions */\n/** @typedef {import("../declarations/WebpackOptions").ResolveOptions} ResolveOptions */\n/** @typedef {import("../declarations/WebpackOptions").RuleSetCondition} RuleSetCondition */\n/** @typedef {import("../declarations/WebpackOptions").RuleSetConditionAbsolute} RuleSetConditionAbsolute */\n/** @typedef {import("../declarations/WebpackOptions").RuleSetRule} RuleSetRule */\n/** @typedef {import("../declarations/WebpackOptions").RuleSetUse} RuleSetUse */\n/** @typedef {import("../declarations/WebpackOptions").RuleSetUseItem} RuleSetUseItem */\n/** @typedef {import("../declarations/WebpackOptions").StatsOptions} StatsOptions */\n/** @typedef {import("../declarations/WebpackOptions").WebpackOptions} Configuration */\n/** @typedef {import("../declarations/WebpackOptions").WebpackOptionsNormalized} WebpackOptionsNormalized */\n/** @typedef {import("../declarations/WebpackOptions").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import("../declarations/WebpackOptions").WebpackPluginInstance} WebpackPluginInstance */\n/** @typedef {import("./ChunkGroup")} ChunkGroup */\n/** @typedef {import("./Compilation").Asset} Asset */\n/** @typedef {import("./Compilation").AssetInfo} AssetInfo */\n/** @typedef {import("./Compilation").EntryOptions} EntryOptions */\n/** @typedef {import("./Compilation").PathData} PathData */\n/** @typedef {import("./Compiler").AssetEmittedInfo} AssetEmittedInfo */\n/** @typedef {import("./MultiCompiler").MultiCompilerOptions} MultiCompilerOptions */\n/** @typedef {import("./MultiStats")} MultiStats */\n/** @typedef {import("./NormalModuleFactory").ResolveData} ResolveData */\n/** @typedef {import("./Parser").ParserState} ParserState */\n/** @typedef {import("./ResolverFactory").ResolvePluginInstance} ResolvePluginInstance */\n/** @typedef {import("./ResolverFactory").Resolver} Resolver */\n/** @typedef {import("./Watching")} Watching */\n/** @typedef {import("./cli").Argument} Argument */\n/** @typedef {import("./cli").Problem} Problem */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsAsset} StatsAsset */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsChunk} StatsChunk */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsChunkGroup} StatsChunkGroup */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsChunkOrigin} StatsChunkOrigin */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsCompilation} StatsCompilation */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsError} StatsError */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsLogging} StatsLogging */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsLoggingEntry} StatsLoggingEntry */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsModule} StatsModule */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsModuleIssuer} StatsModuleIssuer */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsModuleReason} StatsModuleReason */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsModuleTraceDependency} StatsModuleTraceDependency */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsModuleTraceItem} StatsModuleTraceItem */\n/** @typedef {import("./stats/DefaultStatsFactoryPlugin").StatsProfile} StatsProfile */\n/** @typedef {import("./util/fs").InputFileSystem} InputFileSystem */\n/** @typedef {import("./util/fs").OutputFileSystem} OutputFileSystem */\n\n/**\n * @template {Function} T\n * @param {function(): T} factory factory function\n * @returns {T} function\n */\nconst lazyFunction = factory => {\n	const fac = memoize(factory);\n	const f = /** @type {any} */ ((...args) => fac()(...args));\n	return /** @type {T} */ (f);\n};\n\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\nconst mergeExports = (obj, exports) => {\n	const descriptors = Object.getOwnPropertyDescriptors(exports);\n	for (const name of Object.keys(descriptors)) {\n		const descriptor = descriptors[name];\n		if (descriptor.get) {\n			const fn = descriptor.get;\n			Object.defineProperty(obj, name, {\n				configurable: false,\n				enumerable: true,\n				get: memoize(fn)\n			});\n		} else if (typeof descriptor.value === "object") {\n			Object.defineProperty(obj, name, {\n				configurable: false,\n				enumerable: true,\n				writable: false,\n				value: mergeExports({}, descriptor.value)\n			});\n		} else {\n			throw new Error(\n				"Exposed values must be either a getter or an nested object"\n			);\n		}\n	}\n	return /** @type {A & B} */ (Object.freeze(obj));\n};\n\nconst fn = lazyFunction(() => require("./webpack"));\nmodule.exports = mergeExports(fn, {\n	get webpack() {\n		return require("./webpack");\n	},\n	get validate() {\n		const webpackOptionsSchemaCheck = require("../schemas/WebpackOptions.check.js");\n		const getRealValidate = memoize(() => {\n			const validateSchema = require("./validateSchema");\n			const webpackOptionsSchema = require("../schemas/WebpackOptions.json");\n			return options => validateSchema(webpackOptionsSchema, options);\n		});\n		return options => {\n			if (!webpackOptionsSchemaCheck(options)) getRealValidate()(options);\n		};\n	},\n	get validateSchema() {\n		const validateSchema = require("./validateSchema");\n		return validateSchema;\n	},\n	get version() {\n		return /** @type {string} */ (require("../package.json").version);\n	},\n\n	get cli() {\n		return require("./cli");\n	},\n	get AutomaticPrefetchPlugin() {\n		return require("./AutomaticPrefetchPlugin");\n	},\n	get AsyncDependenciesBlock() {\n		return require("./AsyncDependenciesBlock");\n	},\n	get BannerPlugin() {\n		return require("./BannerPlugin");\n	},\n	get Cache() {\n		return require("./Cache");\n	},\n	get Chunk() {\n		return require("./Chunk");\n	},\n	get ChunkGraph() {\n		return require("./ChunkGraph");\n	},\n	get CleanPlugin() {\n		return require("./CleanPlugin");\n	},\n	get Compilation() {\n		return require("./Compilation");\n	},\n	get Compiler() {\n		return require("./Compiler");\n	},\n	get ConcatenationScope() {\n		return require("./ConcatenationScope");\n	},\n	get ContextExclusionPlugin() {\n		return require("./ContextExclusionPlugin");\n	},\n	get ContextReplacementPlugin() {\n		return require("./ContextReplacementPlugin");\n	},\n	get DefinePlugin() {\n		return require("./DefinePlugin");\n	},\n	get DelegatedPlugin() {\n		return require("./DelegatedPlugin");\n	},\n	get Dependency() {\n		return require("./Dependency");\n	},\n	get DllPlugin() {\n		return require("./DllPlugin");\n	},\n	get DllReferencePlugin() {\n		return require("./DllReferencePlugin");\n	},\n	get DynamicEntryPlugin() {\n		return require("./DynamicEntryPlugin");\n	},\n	get EntryOptionPlugin() {\n		return require("./EntryOptionPlugin");\n	},\n	get EntryPlugin() {\n		return require("./EntryPlugin");\n	},\n	get EnvironmentPlugin() {\n		return require("./EnvironmentPlugin");\n	},\n	get EvalDevToolModulePlugin() {\n		return require("./EvalDevToolModulePlugin");\n	},\n	get EvalSourceMapDevToolPlugin() {\n		return require("./EvalSourceMapDevToolPlugin");\n	},\n	get ExternalModule() {\n		return require("./ExternalModule");\n	},\n	get ExternalsPlugin() {\n		return require("./ExternalsPlugin");\n	},\n	get Generator() {\n		return require("./Generator");\n	},\n	get HotUpdateChunk() {\n		return require("./HotUpdateChunk");\n	},\n	get HotModuleReplacementPlugin() {\n		return require("./HotModuleReplacementPlugin");\n	},\n	get InitFragment() {\n		return require("./InitFragment");\n	},\n	get IgnorePlugin() {\n		return require("./IgnorePlugin");\n	},\n	get JavascriptModulesPlugin() {\n		return util.deprecate(\n			() => require("./javascript/JavascriptModulesPlugin"),\n			"webpack.JavascriptModulesPlugin has moved to webpack.javascript.JavascriptModulesPlugin",\n			"DEP_WEBPACK_JAVASCRIPT_MODULES_PLUGIN"\n		)();\n	},\n	get LibManifestPlugin() {\n		return require("./LibManifestPlugin");\n	},\n	get LibraryTemplatePlugin() {\n		return util.deprecate(\n			() => require("./LibraryTemplatePlugin"),\n			"webpack.LibraryTemplatePlugin is deprecated and has been replaced by compilation.outputOptions.library or compilation.addEntry + passing a library option",\n			"DEP_WEBPACK_LIBRARY_TEMPLATE_PLUGIN"\n		)();\n	},\n	get LoaderOptionsPlugin() {\n		return require("./LoaderOptionsPlugin");\n	},\n	get LoaderTargetPlugin() {\n		return require("./LoaderTargetPlugin");\n	},\n	get Module() {\n		return require("./Module");\n	},\n	get ModuleFilenameHelpers() {\n		return require("./ModuleFilenameHelpers");\n	},\n	get ModuleGraph() {\n		return require("./ModuleGraph");\n	},\n	get ModuleGraphConnection() {\n		return require("./ModuleGraphConnection");\n	},\n	get NoEmitOnErrorsPlugin() {\n		return require("./NoEmitOnErrorsPlugin");\n	},\n	get NormalModule() {\n		return require("./NormalModule");\n	},\n	get NormalModuleReplacementPlugin() {\n		return require("./NormalModuleReplacementPlugin");\n	},\n	get MultiCompiler() {\n		return require("./MultiCompiler");\n	},\n	get OptimizationStages() {\n		return require("./OptimizationStages");\n	},\n	get Parser() {\n		return require("./Parser");\n	},\n	get PlatformPlugin() {\n		return require("./PlatformPlugin");\n	},\n	get PrefetchPlugin() {\n		return require("./PrefetchPlugin");\n	},\n	get ProgressPlugin() {\n		return require("./ProgressPlugin");\n	},\n	get ProvidePlugin() {\n		return require("./ProvidePlugin");\n	},\n	get RuntimeGlobals() {\n		return require("./RuntimeGlobals");\n	},\n	get RuntimeModule() {\n		return require("./RuntimeModule");\n	},\n	get SingleEntryPlugin() {\n		return util.deprecate(\n			() => require("./EntryPlugin"),\n			"SingleEntryPlugin was renamed to EntryPlugin",\n			"DEP_WEBPACK_SINGLE_ENTRY_PLUGIN"\n		)();\n	},\n	get SourceMapDevToolPlugin() {\n		return require("./SourceMapDevToolPlugin");\n	},\n	get Stats() {\n		return require("./Stats");\n	},\n	get Template() {\n		return require("./Template");\n	},\n	get UsageState() {\n		return require("./ExportsInfo").UsageState;\n	},\n	get WatchIgnorePlugin() {\n		return require("./WatchIgnorePlugin");\n	},\n	get WebpackError() {\n		return require("./WebpackError");\n	},\n	get WebpackOptionsApply() {\n		return require("./WebpackOptionsApply");\n	},\n	get WebpackOptionsDefaulter() {\n		return util.deprecate(\n			() => require("./WebpackOptionsDefaulter"),\n			"webpack.WebpackOptionsDefaulter is deprecated and has been replaced by webpack.config.getNormalizedWebpackOptions and webpack.config.applyWebpackOptionsDefaults",\n			"DEP_WEBPACK_OPTIONS_DEFAULTER"\n		)();\n	},\n	// TODO webpack 6 deprecate\n	get WebpackOptionsValidationError() {\n		return require("schema-utils").ValidationError;\n	},\n	get ValidationError() {\n		return require("schema-utils").ValidationError;\n	},\n\n	cache: {\n		get MemoryCachePlugin() {\n			return require("./cache/MemoryCachePlugin");\n		}\n	},\n\n	config: {\n		get getNormalizedWebpackOptions() {\n			return require("./config/normalization").getNormalizedWebpackOptions;\n		},\n		get applyWebpackOptionsDefaults() {\n			return require("./config/defaults").applyWebpackOptionsDefaults;\n		}\n	},\n\n	dependencies: {\n		get ModuleDependency() {\n			return require("./dependencies/ModuleDependency");\n		},\n		get HarmonyImportDependency() {\n			return require("./dependencies/HarmonyImportDependency");\n		},\n		get ConstDependency() {\n			return require("./dependencies/ConstDependency");\n		},\n		get NullDependency() {\n			return require("./dependencies/NullDependency");\n		}\n	},\n\n	ids: {\n		get ChunkModuleIdRangePlugin() {\n			return require("./ids/ChunkModuleIdRangePlugin");\n		},\n		get NaturalModuleIdsPlugin() {\n			return require("./ids/NaturalModuleIdsPlugin");\n		},\n		get OccurrenceModuleIdsPlugin() {\n			return require("./ids/OccurrenceModuleIdsPlugin");\n		},\n		get NamedModuleIdsPlugin() {\n			return require("./ids/NamedModuleIdsPlugin");\n		},\n		get DeterministicChunkIdsPlugin() {\n			return require("./ids/DeterministicChunkIdsPlugin");\n		},\n		get DeterministicModuleIdsPlugin() {\n			return require("./ids/DeterministicModuleIdsPlugin");\n		},\n		get NamedChunkIdsPlugin() {\n			return require("./ids/NamedChunkIdsPlugin");\n		},\n		get OccurrenceChunkIdsPlugin() {\n			return require("./ids/OccurrenceChunkIdsPlugin");\n		},\n		get HashedModuleIdsPlugin() {\n			return require("./ids/HashedModuleIdsPlugin");\n		}\n	},\n\n	javascript: {\n		get EnableChunkLoadingPlugin() {\n			return require("./javascript/EnableChunkLoadingPlugin");\n		},\n		get JavascriptModulesPlugin() {\n			return require("./javascript/JavascriptModulesPlugin");\n		},\n		get JavascriptParser() {\n			return require("./javascript/JavascriptParser");\n		}\n	},\n\n	optimize: {\n		get AggressiveMergingPlugin() {\n			return require("./optimize/AggressiveMergingPlugin");\n		},\n		get AggressiveSplittingPlugin() {\n			return util.deprecate(\n				() => require("./optimize/AggressiveSplittingPlugin"),\n				"AggressiveSplittingPlugin is deprecated in favor of SplitChunksPlugin",\n				"DEP_WEBPACK_AGGRESSIVE_SPLITTING_PLUGIN"\n			)();\n		},\n		get InnerGraph() {\n			return require("./optimize/InnerGraph");\n		},\n		get LimitChunkCountPlugin() {\n			return require("./optimize/LimitChunkCountPlugin");\n		},\n		get MinChunkSizePlugin() {\n			return require("./optimize/MinChunkSizePlugin");\n		},\n		get ModuleConcatenationPlugin() {\n			return require("./optimize/ModuleConcatenationPlugin");\n		},\n		get RealContentHashPlugin() {\n			return require("./optimize/RealContentHashPlugin");\n		},\n		get RuntimeChunkPlugin() {\n			return require("./optimize/RuntimeChunkPlugin");\n		},\n		get SideEffectsFlagPlugin() {\n			return require("./optimize/SideEffectsFlagPlugin");\n		},\n		get SplitChunksPlugin() {\n			return require("./optimize/SplitChunksPlugin");\n		}\n	},\n\n	runtime: {\n		get GetChunkFilenameRuntimeModule() {\n			return require("./runtime/GetChunkFilenameRuntimeModule");\n		},\n		get LoadScriptRuntimeModule() {\n			return require("./runtime/LoadScriptRuntimeModule");\n		}\n	},\n\n	prefetch: {\n		get ChunkPrefetchPreloadPlugin() {\n			return require("./prefetch/ChunkPrefetchPreloadPlugin");\n		}\n	},\n\n	web: {\n		get FetchCompileAsyncWasmPlugin() {\n			return require("./web/FetchCompileAsyncWasmPlugin");\n		},\n		get FetchCompileWasmPlugin() {\n			return require("./web/FetchCompileWasmPlugin");\n		},\n		get JsonpChunkLoadingRuntimeModule() {\n			return require("./web/JsonpChunkLoadingRuntimeModule");\n		},\n		get JsonpTemplatePlugin() {\n			return require("./web/JsonpTemplatePlugin");\n		}\n	},\n\n	webworker: {\n		get WebWorkerTemplatePlugin() {\n			return require("./webworker/WebWorkerTemplatePlugin");\n		}\n	},\n\n	node: {\n		get NodeEnvironmentPlugin() {\n			return require("./node/NodeEnvironmentPlugin");\n		},\n		get NodeSourcePlugin() {\n			return require("./node/NodeSourcePlugin");\n		},\n		get NodeTargetPlugin() {\n			return require("./node/NodeTargetPlugin");\n		},\n		get NodeTemplatePlugin() {\n			return require("./node/NodeTemplatePlugin");\n		},\n		get ReadFileCompileWasmPlugin() {\n			return require("./node/ReadFileCompileWasmPlugin");\n		}\n	},\n\n	electron: {\n		get ElectronTargetPlugin() {\n			return require("./electron/ElectronTargetPlugin");\n		}\n	},\n\n	wasm: {\n		get AsyncWebAssemblyModulesPlugin() {\n			return require("./wasm-async/AsyncWebAssemblyModulesPlugin");\n		},\n		get EnableWasmLoadingPlugin() {\n			return require("./wasm/EnableWasmLoadingPlugin");\n		}\n	},\n\n	library: {\n		get AbstractLibraryPlugin() {\n			return require("./library/AbstractLibraryPlugin");\n		},\n		get EnableLibraryPlugin() {\n			return require("./library/EnableLibraryPlugin");\n		}\n	},\n\n	container: {\n		get ContainerPlugin() {\n			return require("./container/ContainerPlugin");\n		},\n		get ContainerReferencePlugin() {\n			return require("./container/ContainerReferencePlugin");\n		},\n		get ModuleFederationPlugin() {\n			return require("./container/ModuleFederationPlugin");\n		},\n		get scope() {\n			return require("./container/options").scope;\n		}\n	},\n\n	sharing: {\n		get ConsumeSharedPlugin() {\n			return require("./sharing/ConsumeSharedPlugin");\n		},\n		get ProvideSharedPlugin() {\n			return require("./sharing/ProvideSharedPlugin");\n		},\n		get SharePlugin() {\n			return require("./sharing/SharePlugin");\n		},\n		get scope() {\n			return require("./container/options").scope;\n		}\n	},\n\n	debug: {\n		get ProfilingPlugin() {\n			return require("./debug/ProfilingPlugin");\n		}\n	},\n\n	util: {\n		get createHash() {\n			return require("./util/createHash");\n		},\n		get comparators() {\n			return require("./util/comparators");\n		},\n		get runtime() {\n			return require("./util/runtime");\n		},\n		get serialization() {\n			return require("./util/serialization");\n		},\n		get cleverMerge() {\n			return require("./util/cleverMerge").cachedCleverMerge;\n		},\n		get LazySet() {\n			return require("./util/LazySet");\n		},\n		get compileBooleanMatcher() {\n			return require("./util/compileBooleanMatcher");\n		}\n	},\n\n	get sources() {\n		return require("webpack-sources");\n	},\n\n	experiments: {\n		schemes: {\n			get HttpUriPlugin() {\n				return require("./schemes/HttpUriPlugin");\n			}\n		},\n		ids: {\n			get SyncModuleIdsPlugin() {\n				return require("./ids/SyncModuleIdsPlugin");\n			}\n		}\n	}\n});\n\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"binwebpackjs",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#binwebpackjs",children:"#"}),"bin/webpack.js"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'#!/usr/bin/env node\n\n/**\n * @param {string} command process to run\n * @param {string[]} args command line arguments\n * @returns {Promise<void>} promise\n */\nconst runCommand = (command, args) => {\n	const cp = require("child_process");\n	return new Promise((resolve, reject) => {\n		const executedCommand = cp.spawn(command, args, {\n			stdio: "inherit",\n			shell: true\n		});\n\n		executedCommand.on("error", error => {\n			reject(error);\n		});\n\n		executedCommand.on("exit", code => {\n			if (code === 0) {\n				resolve();\n			} else {\n				reject();\n			}\n		});\n	});\n};\n\n/**\n * @param {string} packageName name of the package\n * @returns {boolean} is the package installed?\n */\nconst isInstalled = packageName => {\n	if (process.versions.pnp) {\n		return true;\n	}\n\n	const path = require("path");\n	const fs = require("graceful-fs");\n\n	let dir = __dirname;\n\n	do {\n		try {\n			if (\n				fs.statSync(path.join(dir, "node_modules", packageName)).isDirectory()\n			) {\n				return true;\n			}\n		} catch (_error) {\n			// Nothing\n		}\n	} while (dir !== (dir = path.dirname(dir)));\n\n	// https://github.com/nodejs/node/blob/v18.9.1/lib/internal/modules/cjs/loader.js#L1274\n	// eslint-disable-next-line no-warning-comments\n	// @ts-ignore\n	for (const internalPath of require("module").globalPaths) {\n		try {\n			if (fs.statSync(path.join(internalPath, packageName)).isDirectory()) {\n				return true;\n			}\n		} catch (_error) {\n			// Nothing\n		}\n	}\n\n	return false;\n};\n\n/**\n * @param {CliOption} cli options\n * @returns {void}\n */\nconst runCli = cli => {\n	const path = require("path");\n	const pkgPath = require.resolve(`${cli.package}/package.json`);\n	const pkg = require(pkgPath);\n\n	if (pkg.type === "module" || /\\.mjs/i.test(pkg.bin[cli.binName])) {\n		import(path.resolve(path.dirname(pkgPath), pkg.bin[cli.binName])).catch(\n			err => {\n				console.error(err);\n				process.exitCode = 1;\n			}\n		);\n	} else {\n		require(path.resolve(path.dirname(pkgPath), pkg.bin[cli.binName]));\n	}\n};\n\n/**\n * @typedef {object} CliOption\n * @property {string} name display name\n * @property {string} package npm package name\n * @property {string} binName name of the executable file\n * @property {boolean} installed currently installed?\n * @property {string} url homepage\n */\n\n/** @type {CliOption} */\nconst cli = {\n	name: "webpack-cli",\n	package: "webpack-cli",\n	binName: "webpack-cli",\n	installed: isInstalled("webpack-cli"),\n	url: "https://github.com/webpack/webpack-cli"\n};\n\nif (!cli.installed) {\n	const path = require("path");\n	const fs = require("graceful-fs");\n	const readLine = require("readline");\n\n	const notify = `CLI for webpack must be installed.\\n  ${cli.name} (${cli.url})\\n`;\n\n	console.error(notify);\n\n	/** @type {string | undefined} */\n	let packageManager;\n\n	if (fs.existsSync(path.resolve(process.cwd(), "yarn.lock"))) {\n		packageManager = "yarn";\n	} else if (fs.existsSync(path.resolve(process.cwd(), "pnpm-lock.yaml"))) {\n		packageManager = "pnpm";\n	} else {\n		packageManager = "npm";\n	}\n\n	const installOptions = [packageManager === "yarn" ? "add" : "install", "-D"];\n\n	console.error(\n		`We will use "${packageManager}" to install the CLI via "${packageManager} ${installOptions.join(\n			" "\n		)} ${cli.package}".`\n	);\n\n	const question = "Do you want to install \'webpack-cli\' (yes/no): ";\n\n	const questionInterface = readLine.createInterface({\n		input: process.stdin,\n		output: process.stderr\n	});\n\n	// In certain scenarios (e.g. when STDIN is not in terminal mode), the callback function will not be\n	// executed. Setting the exit code here to ensure the script exits correctly in those cases. The callback\n	// function is responsible for clearing the exit code if the user wishes to install webpack-cli.\n	process.exitCode = 1;\n	questionInterface.question(question, answer => {\n		questionInterface.close();\n\n		const normalizedAnswer = answer.toLowerCase().startsWith("y");\n\n		if (!normalizedAnswer) {\n			console.error(\n				"You need to install \'webpack-cli\' to use webpack via CLI.\\n" +\n					"You can also install the CLI manually."\n			);\n\n			return;\n		}\n		process.exitCode = 0;\n\n		console.log(\n			`Installing \'${\n				cli.package\n			}\' (running \'${packageManager} ${installOptions.join(" ")} ${\n				cli.package\n			}\')...`\n		);\n\n		runCommand(\n			/** @type {string} */ (packageManager),\n			installOptions.concat(cli.package)\n		)\n			.then(() => {\n				runCli(cli);\n			})\n			.catch(err => {\n				console.error(err);\n				process.exitCode = 1;\n			});\n	});\n} else {\n	runCli(cli);\n}\n\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"webpack-入口",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webpack-入口",children:"#"}),"webpack 入口"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'/*\n	MIT License http://www.opensource.org/licenses/mit-license.php\n	Author Tobias Koppers @sokra\n*/\n\n"use strict";\n\nconst util = require("util");\nconst webpackOptionsSchemaCheck = require("../schemas/WebpackOptions.check.js");\nconst webpackOptionsSchema = require("../schemas/WebpackOptions.json");\nconst Compiler = require("./Compiler");\nconst MultiCompiler = require("./MultiCompiler");\nconst WebpackOptionsApply = require("./WebpackOptionsApply");\nconst {\n	applyWebpackOptionsDefaults,\n	applyWebpackOptionsBaseDefaults\n} = require("./config/defaults");\nconst { getNormalizedWebpackOptions } = require("./config/normalization");\nconst NodeEnvironmentPlugin = require("./node/NodeEnvironmentPlugin");\nconst memoize = require("./util/memoize");\n\n/** @typedef {import("../declarations/WebpackOptions").WebpackOptions} WebpackOptions */\n/** @typedef {import("../declarations/WebpackOptions").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import("./Compiler").WatchOptions} WatchOptions */\n/** @typedef {import("./MultiCompiler").MultiCompilerOptions} MultiCompilerOptions */\n/** @typedef {import("./MultiStats")} MultiStats */\n/** @typedef {import("./Stats")} Stats */\n\nconst getValidateSchema = memoize(() => require("./validateSchema"));\n\n/**\n * @template T\n * @callback Callback\n * @param {Error | null} err\n * @param {T=} stats\n * @returns {void}\n */\n\n/**\n * @param {ReadonlyArray<WebpackOptions>} childOptions options array\n * @param {MultiCompilerOptions} options options\n * @returns {MultiCompiler} a multi-compiler\n */\nconst createMultiCompiler = (childOptions, options) => {\n	const compilers = childOptions.map((options, index) =>\n		createCompiler(options, index)\n	);\n	const compiler = new MultiCompiler(compilers, options);\n	for (const childCompiler of compilers) {\n		if (childCompiler.options.dependencies) {\n			compiler.setDependencies(\n				childCompiler,\n				childCompiler.options.dependencies\n			);\n		}\n	}\n	return compiler;\n};\n\n/**\n * @param {WebpackOptions} rawOptions options object\n * @param {number} [compilerIndex] index of compiler\n * @returns {Compiler} a compiler\n */\nconst createCompiler = (rawOptions, compilerIndex) => {\n	const options = getNormalizedWebpackOptions(rawOptions);\n	applyWebpackOptionsBaseDefaults(options);\n	const compiler = new Compiler(\n		/** @type {string} */ (options.context),\n		options\n	);\n	new NodeEnvironmentPlugin({\n		infrastructureLogging: options.infrastructureLogging\n	}).apply(compiler);\n	if (Array.isArray(options.plugins)) {\n		for (const plugin of options.plugins) {\n			if (typeof plugin === "function") {\n				/** @type {WebpackPluginFunction} */\n				(plugin).call(compiler, compiler);\n			} else if (plugin) {\n				plugin.apply(compiler);\n			}\n		}\n	}\n	const resolvedDefaultOptions = applyWebpackOptionsDefaults(\n		options,\n		compilerIndex\n	);\n	if (resolvedDefaultOptions.platform) {\n		compiler.platform = resolvedDefaultOptions.platform;\n	}\n	compiler.hooks.environment.call();\n	compiler.hooks.afterEnvironment.call();\n	new WebpackOptionsApply().process(options, compiler);\n	compiler.hooks.initialize.call();\n	return compiler;\n};\n\n/**\n * @callback WebpackFunctionSingle\n * @param {WebpackOptions} options options object\n * @param {Callback<Stats>=} callback callback\n * @returns {Compiler} the compiler object\n */\n\n/**\n * @callback WebpackFunctionMulti\n * @param {ReadonlyArray<WebpackOptions> & MultiCompilerOptions} options options objects\n * @param {Callback<MultiStats>=} callback callback\n * @returns {MultiCompiler} the multi compiler object\n */\n\n/**\n * @template T\n * @param {Array<T> | T} options options\n * @returns {Array<T>} array of options\n */\nconst asArray = options =>\n	Array.isArray(options) ? Array.from(options) : [options];\n\nconst webpack = /** @type {WebpackFunctionSingle & WebpackFunctionMulti} */ (\n	/**\n	 * @param {WebpackOptions | (ReadonlyArray<WebpackOptions> & MultiCompilerOptions)} options options\n	 * @param {Callback<Stats> & Callback<MultiStats>=} callback callback\n	 * @returns {Compiler | MultiCompiler | null} Compiler or MultiCompiler\n	 */\n	(options, callback) => {\n		const create = () => {\n			if (!asArray(options).every(webpackOptionsSchemaCheck)) {\n				getValidateSchema()(webpackOptionsSchema, options);\n				util.deprecate(\n					() => {},\n					"webpack bug: Pre-compiled schema reports error while real schema is happy. This has performance drawbacks.",\n					"DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID"\n				)();\n			}\n			/** @type {MultiCompiler|Compiler} */\n			let compiler;\n			/** @type {boolean | undefined} */\n			let watch = false;\n			/** @type {WatchOptions|WatchOptions[]} */\n			let watchOptions;\n			if (Array.isArray(options)) {\n				/** @type {MultiCompiler} */\n				compiler = createMultiCompiler(\n					options,\n					/** @type {MultiCompilerOptions} */ (options)\n				);\n				watch = options.some(options => options.watch);\n				watchOptions = options.map(options => options.watchOptions || {});\n			} else {\n				const webpackOptions = /** @type {WebpackOptions} */ (options);\n				/** @type {Compiler} */\n				compiler = createCompiler(webpackOptions);\n				watch = webpackOptions.watch;\n				watchOptions = webpackOptions.watchOptions || {};\n			}\n			return { compiler, watch, watchOptions };\n		};\n		if (callback) {\n			try {\n				const { compiler, watch, watchOptions } = create();\n				if (watch) {\n					compiler.watch(watchOptions, callback);\n				} else {\n					compiler.run((err, stats) => {\n						compiler.close(err2 => {\n							callback(\n								err || err2,\n								/** @type {options extends WebpackOptions ? Stats : MultiStats} */\n								(stats)\n							);\n						});\n					});\n				}\n				return compiler;\n			} catch (err) {\n				process.nextTick(() => callback(/** @type {Error} */ (err)));\n				return null;\n			}\n		} else {\n			const { compiler, watch } = create();\n			if (watch) {\n				util.deprecate(\n					() => {},\n					"A \'callback\' argument needs to be provided to the \'webpack(options, callback)\' function when the \'watch\' option is set. There is no way to handle the \'watch\' option without a callback.",\n					"DEP_WEBPACK_WATCH_WITHOUT_CALLBACK"\n				)();\n			}\n			return compiler;\n		}\n	}\n);\n\nmodule.exports = webpack;\n\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"总结",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#总结",children:"#"}),"总结"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(o,e)})):o(e)}let s=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["webpack%2Fcli%2Findex.md"]={toc:[{id:"调试",text:"调试",depth:2},{id:"binwebpackjs",text:"bin/webpack.js",depth:2},{id:"webpack-入口",text:"webpack 入口",depth:2},{id:"总结",text:"总结",depth:2}],title:"webpack 源码系列",headingTitle:"webpack 源码系列",frontmatter:{}}},20713:function(e,n,t){t.d(n,{Z:()=>s});var r=t(52676),i=t(75271),a=t(92815);t(18544);let o={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function l(e,n,t){let r=Object.keys(o).includes(n)?n:t;return o[r](e)}let s=e=>{let{defaultLocale:n="en-US"}=e,t=(0,a.Vi)().page.readingTimeData,o=(0,a.Jr)(),s=(0,a.e7)(),[u,p]=(0,i.useState)(l(t,o,n));return(0,i.useEffect)(()=>{p(l(t,o,n))},[o,t]),(0,r.jsx)("span",{"data-dark":String(s),className:"rp-reading-time",children:u})}}}]);