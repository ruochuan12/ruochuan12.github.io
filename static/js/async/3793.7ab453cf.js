"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["3793"],{97886:function(e,n,r){r.r(n),r.d(n,{default:()=>p});var t=r(52676),i=r(40453),s=r(20713);let c=r.p+"static/image/debugger.1a8ebe8f.png",a=r.p+"static/image/output.b59777d7.png",d=r.p+"static/image/vite-preject.10c04806.png",l=r.p+"static/image/template.1c654f8c.png";function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",pre:"pre",img:"img",h3:"h3",h4:"h4",hr:"hr"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"vite-30-都发布了经常初始化-vite-项目却不知-create-vite-原理揭秘",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vite-30-都发布了经常初始化-vite-项目却不知-create-vite-原理揭秘",children:"#"}),"vite 3.0 都发布了，经常初始化 vite 项目，却不知 create-vite 原理？揭秘！"]}),"\n",(0,t.jsx)(s.Z,{defaultLocale:"zh-CN"}),"\n",(0,t.jsxs)(n.h2,{id:"1-前言",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["大家好，我是",(0,t.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。",(0,t.jsx)(n.strong,{children:"为了能帮助到更多对源码感兴趣、想学会看源码、提升自己前端技术能力的同学"}),"。我倾力持续组织了一年",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,t.jsx)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:"点此扫码加我微信 ruochuan02 参与"}),"。"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["想学源码，极力推荐关注我写的专栏（目前是掘金专栏关注人数第一，3.6K+人）",(0,t.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,t.jsx)(n.code,{children:"jQuery"}),"、",(0,t.jsx)(n.code,{children:"underscore"}),"、",(0,t.jsx)(n.code,{children:"lodash"}),"、",(0,t.jsx)(n.code,{children:"vuex"}),"、",(0,t.jsx)(n.code,{children:"sentry"}),"、",(0,t.jsx)(n.code,{children:"axios"}),"、",(0,t.jsx)(n.code,{children:"redux"}),"、",(0,t.jsx)(n.code,{children:"koa"}),"、",(0,t.jsx)(n.code,{children:"vue-devtools"}),"、",(0,t.jsx)(n.code,{children:"vuex4"}),"、",(0,t.jsx)(n.code,{children:"koa-compose"}),"、",(0,t.jsx)(n.code,{children:"vue 3.2 发布"}),"、",(0,t.jsx)(n.code,{children:"vue-this"}),"、",(0,t.jsx)(n.code,{children:"create-vue"}),"、",(0,t.jsx)(n.code,{children:"玩具vite"}),"等20余篇源码文章。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["本文项目，欢迎 ",(0,t.jsx)(n.code,{children:"star"})," 和克隆调试学习。",(0,t.jsx)(n.a,{href:"https://github.com/ruochuan12/vite-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"git clone https://github.com/ruochuan12/vite-analysis.git"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["早在2021年10月，我写了",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7018344866811740173",rel:"noopener noreferrer",target:"_blank",children:"Vue 团队公开快如闪电的全新脚手架工具 create-vue，未来将替代 Vue-CLI，才300余行代码，学它！"}),"，备受好评。当时 ",(0,t.jsx)(n.a,{href:"https://github.com/vuejs/create-vue",rel:"noopener noreferrer",target:"_blank",children:"create-vue"})," 还没有配置 ",(0,t.jsx)(n.code,{children:"eslint"})," 等，现在已经比较完善了。"]}),"\n",(0,t.jsxs)(n.p,{children:["这是",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读中第九期"}),"。有读者写了",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7116886758427459621",rel:"noopener noreferrer",target:"_blank",children:"最新 create-vue 的源码解读"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["我们知道 ",(0,t.jsx)(n.code,{children:"vite 3.0"})," 发布了。什么？你不知道？想起有好友问：如何关注前端新技术、新热点等，我的回答是关注相关的 ",(0,t.jsx)(n.code,{children:"Github"})," 和 ",(0,t.jsx)(n.code,{children:"Twitter"}),"，或者关注我的【公众号@若川视野】也可以啊。"]}),"\n",(0,t.jsxs)(n.p,{children:["你一般会很开心的 ",(0,t.jsx)(n.code,{children:"npm create vite@latest"})," 初始化一个 ",(0,t.jsx)(n.code,{children:"vite"})," 项目。"]}),"\n",(0,t.jsx)(n.p,{children:"那么你知道它的原理是什么吗？"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"今天这篇文章就来带领大家一起学习其原理，源码400行不到。"})}),"\n",(0,t.jsxs)(n.h2,{id:"2-npm-init--npm-create",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-npm-init--npm-create",children:"#"}),"2. npm init && npm create"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v8/commands/npm-init",rel:"noopener noreferrer",target:"_blank",children:"npm init 文档"}),"有写。",(0,t.jsx)(n.code,{children:"create"})," 其实就是 ",(0,t.jsx)(n.code,{children:"init"})," 的一个别名。"]}),"\n",(0,t.jsxs)(n.p,{children:["也就是说 ",(0,t.jsx)(n.code,{children:"npm create vite@latest"})," 相当于 => ",(0,t.jsx)(n.code,{children:"npx create-vite@latest"}),"，",(0,t.jsx)(n.code,{children:"latest"})," 是版本号，目前最新版本可以通过以下命令查看。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm dist-tag ls create-vite\n# 输出\n# latest: 3.0.0\n"})}),"\n",(0,t.jsxs)(n.p,{children:["接着我们克隆 ",(0,t.jsx)(n.code,{children:"vite"})," 项目，调试 ",(0,t.jsx)(n.code,{children:"packages/create-vite"}),"，分析其源码实现。"]}),"\n",(0,t.jsxs)(n.h2,{id:"3-克隆项目--调试源码",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-克隆项目--调试源码",children:"#"}),"3. 克隆项目 && 调试源码"]}),"\n",(0,t.jsxs)(n.p,{children:["之前文章写过，",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7030584939020042254",rel:"noopener noreferrer",target:"_blank",children:"新手向：前端程序员必学基本技能——调试JS代码"}),"，这里就不赘述。"]}),"\n",(0,t.jsxs)(n.p,{children:["可以直接克隆我的项目调试。同时欢迎 ",(0,t.jsx)(n.code,{children:"star"})," 一下。\n看开源项目，一般先看 ",(0,t.jsx)(n.a,{href:"https://github.com/vitejs/vite/blob/main/README.md",rel:"noopener noreferrer",target:"_blank",children:"README.md"})," 和相应的 ",(0,t.jsx)(n.a,{href:"https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md",rel:"noopener noreferrer",target:"_blank",children:"CONTRIBUTING.md"}),"。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"git clone https://github.com/ruochuan12/vite-analysis.git\ncd vite-analysis/vite2\n# npm i -g pnpm\npnpm install\n# 在这个 index.js 文件中断点\n# 在命令行终端调试\nnode vite2/packages/create-vite/index.js\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/vitejs/vite/blob/main/CONTRIBUTING.md",rel:"noopener noreferrer",target:"_blank",children:"贡献文档"}),"中也详细写了",(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/docs/editor/debugging",rel:"noopener noreferrer",target:"_blank",children:"如何调试"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["调试截图：\n",(0,t.jsx)(n.img,{alt:"调试截图",src:c})]}),"\n",(0,t.jsxs)(n.p,{children:["控制台输出：\n",(0,t.jsx)(n.img,{alt:"控制台输出",src:a})]}),"\n",(0,t.jsxs)(n.p,{children:["最终生成的文件：\n",(0,t.jsx)(n.img,{alt:"最终生成的文件",src:d})]}),"\n",(0,t.jsxs)(n.p,{children:["顺便提下我是如何保持 ",(0,t.jsx)(n.code,{children:"vite"})," 记录的，其实用的",(0,t.jsx)(n.code,{children:"git subtree"}),"。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# 创建\ngit subtree add --prefix=vite2 https://github.com/vitejs/vite.git main\n# 更新\ngit subtree pull --prefix=vite2 https://github.com/vitejs/vite.git main\n"})}),"\n",(0,t.jsxs)(n.p,{children:["找到路径，",(0,t.jsx)(n.code,{children:"packages/create-vite"})," 看 ",(0,t.jsx)(n.code,{children:"package.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "create-vite",\n  "version": "3.0.0",\n  "type": "module",\n  "bin": {\n    "create-vite": "index.js",\n    "cva": "index.js"\n  },\n  "main": "index.js",\n  "engines": {\n    "node": "^14.18.0 || >=16.0.0"\n  },\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"type"})," 类型指定为 ",(0,t.jsx)(n.code,{children:"module"})," 说明是 ",(0,t.jsx)(n.code,{children:"ES Module"}),"。\n",(0,t.jsx)(n.code,{children:"bin"})," 可执行命令为 ",(0,t.jsx)(n.code,{children:"create-vite"})," 或 别名 ",(0,t.jsx)(n.code,{children:"cva"}),"。\n我们可以知道主文件 ",(0,t.jsx)(n.code,{children:"index.js"}),"。\n代码限制了较高版本的",(0,t.jsx)(n.code,{children:"Nodejs"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["接着我们调试来看这个 ",(0,t.jsx)(n.code,{children:"index.js"})," 文件。"]}),"\n",(0,t.jsxs)(n.h2,{id:"4-主流程-init-函数拆分",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-主流程-init-函数拆分",children:"#"}),"4. 主流程 init 函数拆分"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// 高版本的node支持，node 前缀\nimport fs from 'node:fs'\nimport path from 'node:path'\nimport { fileURLToPath } from 'node:url'\n\n// 解析命令行的参数 链接：https://npm.im/minimist\nimport minimist from 'minimist'\n// 询问选择之类的  链接：https://npm.im/prompts\nimport prompts from 'prompts'\n// 终端颜色输出的库 链接：https://npm.im/kolorist\nimport {\n  blue,\n  cyan,\n  green,\n  lightRed,\n  magenta,\n  red,\n  reset,\n  yellow\n} from 'kolorist'\n\n// Avoids autoconversion to number of the project name by defining that the args\n// non associated with an option ( _ ) needs to be parsed as a string. See #4606\nconst argv = minimist(process.argv.slice(2), { string: ['_'] })\n// 当前 Nodejs 的执行目录\nconst cwd = process.cwd()\n\n// 主函数内容省略，后文讲述\nasync function init() {}\ninit().catch((e) => {\n  console.error(e)\n})\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"41-输出的目标路径",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-输出的目标路径",children:"#"}),"4.1 输出的目标路径"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// 命令行第一个参数，替换反斜杠 / 为空字符串\nlet targetDir = formatTargetDir(argv._[0])\n\n// 命令行参数 --template 或者 -t\nlet template = argv.template || argv.t\n\nconst defaultTargetDir = 'vite-project'\n// 获取项目名\nconst getProjectName = () =>\ntargetDir === '.' ? path.basename(path.resolve()) : targetDir\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"411-延伸函数-formattargetdir",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#411-延伸函数-formattargetdir",children:"#"}),"4.1.1 延伸函数 formatTargetDir"]}),"\n",(0,t.jsxs)(n.p,{children:["替换反斜杠 ",(0,t.jsx)(n.code,{children:"/"})," 为空字符串。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function formatTargetDir(targetDir) {\n  return targetDir?.trim().replace(/\\/+$/g, '')\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"42-prompts-询问项目名选择框架选择框架变体等",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-prompts-询问项目名选择框架选择框架变体等",children:"#"}),"4.2 prompts 询问项目名、选择框架，选择框架变体等"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://npm.im/prompts",rel:"noopener noreferrer",target:"_blank",children:"prompts"})," 根据用户输入选择，代码有删减。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"let result = {}\ntry {\n    result = await prompts(\n      [\n        {\n          type: targetDir ? null : 'text',\n          name: 'projectName',\n          message: reset('Project name:'),\n          initial: defaultTargetDir,\n          onState: (state) => {\n            targetDir = formatTargetDir(state.value) || defaultTargetDir\n          }\n        },\n        // 省略若干\n      ],\n      {\n        onCancel: () => {\n          throw new Error(red('✖') + ' Operation cancelled')\n        }\n      }\n      )\n} catch (cancelled) {\n    console.log(cancelled.message)\n    return\n}\n// user choice associated with prompts\n// framework 框架\n// overwrite 已有目录，是否重写\n// packageName 输入的项目名\n// variant 变体， 比如 react => react-ts\nconst { framework, overwrite, packageName, variant } = result\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"43-重写已有目录或者创建不存在的目录",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-重写已有目录或者创建不存在的目录",children:"#"}),"4.3 重写已有目录/或者创建不存在的目录"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// user choice associated with prompts\nconst { framework, overwrite, packageName, variant } = result\n\n// 目录\nconst root = path.join(cwd, targetDir)\n\nif (overwrite) {\n    // 删除文件夹\n    emptyDir(root)\n} else if (!fs.existsSync(root)) {\n    // 新建文件夹\n    fs.mkdirSync(root, { recursive: true })\n}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"431-延伸函数-emptydir",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#431-延伸函数-emptydir",children:"#"}),"4.3.1 延伸函数 emptyDir"]}),"\n",(0,t.jsxs)(n.p,{children:["递归删除文件夹，相当于 ",(0,t.jsx)(n.code,{children:"rm -rf xxx"}),"。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function emptyDir(dir) {\n  if (!fs.existsSync(dir)) {\n    return\n  }\n  for (const file of fs.readdirSync(dir)) {\n    fs.rmSync(path.resolve(dir, file), { recursive: true, force: true })\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"44-获取模板路径",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-获取模板路径",children:"#"}),"4.4 获取模板路径"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"有这些模板目录",src:l})}),"\n",(0,t.jsxs)(n.p,{children:["从模板里可以看出，目前还算是相对简陋的。比如没有配置 ",(0,t.jsx)(n.code,{children:"eslint"})," ",(0,t.jsx)(n.code,{children:"prettier"})," 等。如果你想为多个的 ",(0,t.jsx)(n.code,{children:"vite"})," 项目，自动添加 ",(0,t.jsx)(n.code,{children:"eslint"})," ",(0,t.jsx)(n.code,{children:"prettier"}),"。这里推荐",(0,t.jsx)(n.a,{href:"https://github.com/tzsk/vite-pretty-lint",rel:"noopener noreferrer",target:"_blank",children:"vite-pretty-lint"}),"，为这个库我出了的",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7113563466211786783",rel:"noopener noreferrer",target:"_blank",children:"源码共读第35期"}),"，还有别人参与后写的不错的文章",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7115206210701230088",rel:"noopener noreferrer",target:"_blank",children:"如何为前端项目一键自动添加eslint和prettier的支持"}),"。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// determine template\ntemplate = variant || framework || template\n\nconsole.log(`\\nScaffolding project in ${root}...`)\n\nconst templateDir = path.resolve(\n    fileURLToPath(import.meta.url),\n    '..',\n    `template-${template}`\n)\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"45-写入文件函数",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#45-写入文件函数",children:"#"}),"4.5 写入文件函数"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const write = (file, content) => {\n    // renameFile\n    const targetPath = renameFiles[file]\n        ? path.join(root, renameFiles[file])\n        : path.join(root, file)\n    if (content) {\n        fs.writeFileSync(targetPath, content)\n    } else {\n        copy(path.join(templateDir, file), targetPath)\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["这里的 ",(0,t.jsx)(n.code,{children:"renameFiles"}),"，是因为在某些编辑器或者电脑上不支持",(0,t.jsx)(n.code,{children:".gitignore"}),"。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const renameFiles = {\n  _gitignore: '.gitignore'\n}\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"451-延伸函数-copy--copydir",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#451-延伸函数-copy--copydir",children:"#"}),"4.5.1 延伸函数 copy && copyDir"]}),"\n",(0,t.jsx)(n.p,{children:"如果是文件夹用 copyDir 拷贝"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"function copy(src, dest) {\n  const stat = fs.statSync(src)\n  if (stat.isDirectory()) {\n    copyDir(src, dest)\n  } else {\n    fs.copyFileSync(src, dest)\n  }\n}\n\n/**\n * @param {string} srcDir\n * @param {string} destDir\n */\nfunction copyDir(srcDir, destDir) {\n  fs.mkdirSync(destDir, { recursive: true })\n  for (const file of fs.readdirSync(srcDir)) {\n    const srcFile = path.resolve(srcDir, file)\n    const destFile = path.resolve(destDir, file)\n    copy(srcFile, destFile)\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"46-根据模板路径的文件写入目标路径",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#46-根据模板路径的文件写入目标路径",children:"#"}),"4.6 根据模板路径的文件写入目标路径"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"package.json"})," 文件单独处理。\n它的名字为输入的 ",(0,t.jsx)(n.code,{children:"packageName"})," 或者获取。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const files = fs.readdirSync(templateDir)\nfor (const file of files.filter((f) => f !== 'package.json')) {\n    write(file)\n}\n\nconst pkg = JSON.parse(\n    fs.readFileSync(path.join(templateDir, `package.json`), 'utf-8')\n)\n\npkg.name = packageName || getProjectName()\n\nwrite('package.json', JSON.stringify(pkg, null, 2))\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"47-打印安装完成后的信息",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#47-打印安装完成后的信息",children:"#"}),"4.7 打印安装完成后的信息"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const pkgInfo = pkgFromUserAgent(process.env.npm_config_user_agent)\nconst pkgManager = pkgInfo ? pkgInfo.name : 'npm'\n\nconsole.log(`\\nDone. Now run:\\n`)\nif (root !== cwd) {\n    console.log(`  cd ${path.relative(cwd, root)}`)\n}\nswitch (pkgManager) {\n    case 'yarn':\n        console.log('  yarn')\n        console.log('  yarn dev')\n        break\n    default:\n        console.log(`  ${pkgManager} install`)\n        console.log(`  ${pkgManager} run dev`)\n        break\n}\nconsole.log()\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"471-延伸的-pkgfromuseragent-函数",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#471-延伸的-pkgfromuseragent-函数",children:"#"}),"4.7.1 延伸的 pkgFromUserAgent 函数"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"/**\n * @param {string | undefined} userAgent process.env.npm_config_user_agent\n * @returns object | undefined\n */\nfunction pkgFromUserAgent(userAgent) {\n  if (!userAgent) return undefined\n  const pkgSpec = userAgent.split(' ')[0]\n  const pkgSpecArr = pkgSpec.split('/')\n  return {\n    name: pkgSpecArr[0],\n    version: pkgSpecArr[1]\n  }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["第一句 ",(0,t.jsx)(n.code,{children:"pkgFromUserAgent"}),"函数，是从使用了什么包管理器创建项目，那么就输出 ",(0,t.jsx)(n.code,{children:"npm/yarn/pnpm"})," 相应的命令。"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm create vite@latest\nyarn create vite\npnpm create vite\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"5-总结",children:[(0,t.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,t.jsxs)(n.p,{children:["再来回顾下控制台输出：\n",(0,t.jsx)(n.img,{alt:"控制台输出",src:a})]}),"\n",(0,t.jsx)(n.p,{children:"到此我们就分析完了整体的流程。总体代码行数不多，不到400行。"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "name": "create-vite",\n  "version": "3.0.0",\n  "type": "module",\n  "engines": {\n    "node": "^14.18.0 || >=16.0.0"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["从 ",(0,t.jsx)(n.code,{children:"package.json"})," 中看到，代码限制了较高版本的",(0,t.jsx)(n.code,{children:"Nodejs"}),"，采用 ",(0,t.jsx)(n.code,{children:"ES Module"}),"，目前未涉及打包编译。"]}),"\n",(0,t.jsxs)(n.p,{children:["为了保证轻量快速，源码中很多函数都是自己写的。比如校验项目名，有比较出名的 ",(0,t.jsx)(n.a,{href:"https://github.com/npm/validate-npm-package-name",rel:"noopener noreferrer",target:"_blank",children:"validate-npm-package-name"}),"，vue-cli、create-react-app 中就是用的它。比如删除文件和文件夹，也是自己实现。"]}),"\n",(0,t.jsxs)(n.p,{children:["依赖包很少。只依赖了三个包。\n",(0,t.jsx)(n.a,{href:"https://npm.im/minimist",rel:"noopener noreferrer",target:"_blank",children:"解析命令行的参数 minimist"}),"、\n",(0,t.jsx)(n.a,{href:"https://npm.im/prompts",rel:"noopener noreferrer",target:"_blank",children:"询问选择之类的 prompts"}),"、\n",(0,t.jsx)(n.a,{href:"https://npm.im/kolorist",rel:"noopener noreferrer",target:"_blank",children:"终端颜色输出的库 kolorist"})]}),"\n",(0,t.jsxs)(n.p,{children:["测试用例本文未涉及，感兴趣的小伙伴可以看，路径：",(0,t.jsxs)(n.a,{href:"https://github.com/vitejs/vite/blob/main/packages/create-vite/__tests__/cli.spec.ts",rel:"noopener noreferrer",target:"_blank",children:["vite/packages/create-vite/",(0,t.jsx)(n.strong,{children:"tests"}),"/cli.spec.ts"]}),"，采用的是 ",(0,t.jsx)(n.a,{href:"https://github.com/vitest-dev/vitest",rel:"noopener noreferrer",target:"_blank",children:"vitest"}),"。"]}),"\n",(0,t.jsxs)(n.p,{children:["读完本文，你会发现日常使用 ",(0,t.jsx)(n.code,{children:"npm create vite"})," 初始化 ",(0,t.jsx)(n.code,{children:"vite"})," 项目，",(0,t.jsx)(n.code,{children:"create-vite"})," 才不到400行源码。"]}),"\n",(0,t.jsx)(n.p,{children:"我们也可以根据公司相关业务，开发属于自己的脚手架工具。"}),"\n",(0,t.jsxs)(n.p,{children:["如果觉得 Vite 项目模板不够，还可以自行修改添加，比如",(0,t.jsx)(n.a,{href:"https://github.com/tzsk/vite-pretty-lint",rel:"noopener noreferrer",target:"_blank",children:"vite-pretty-lint"}),"这个库，就是一键为多个 ",(0,t.jsx)(n.code,{children:"vite"})," 项目自动添加 ",(0,t.jsx)(n.code,{children:"eslint"}),"、",(0,t.jsx)(n.code,{children:"prettier"}),"。"]}),"\n",(0,t.jsx)(n.p,{children:"有时我们容易局限于公司项目无法自拔，不曾看看开源世界，而且开源项目源码就在那里，如果真的有心愿意学，是能学会很多的。"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"很多源码不是我们想象中的那么高深莫测。源码不应该成为我们的拦路虎，而应该是我们的良师益友"}),"。这也可以说是我持续组织",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"的原因之一。"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["本文项目，欢迎 ",(0,t.jsx)(n.code,{children:"star"})," 和克隆调试学习。",(0,t.jsx)(n.a,{href:"https://github.com/ruochuan12/vite-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"git clone https://github.com/ruochuan12/vite-analysis.git"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"如果看完有收获，欢迎点赞、评论、分享支持。你的支持和肯定，是我写作的动力"}),"~"]}),"\n",(0,t.jsxs)(n.p,{children:["最后可以持续关注我@若川。关注我的公众号@若川视野。欢迎",(0,t.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,t.jsx)(n.code,{children:"ruochuan02"})]})," 交流，参加",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"由公众号@若川视野发起的，每周大家一起学习200行左右的源码共读活动"}),"，共同进步。"]}),"\n",(0,t.jsxs)(n.p,{children:["我正在参与掘金技术社区创作者签约计划招募活动，",(0,t.jsx)(n.a,{href:"https://juejin.cn/post/7112770927082864653",rel:"noopener noreferrer",target:"_blank",children:"点击链接报名投稿"}),"。"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(o,e)})):o(e)}let p=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["create-vite%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-npm-init--npm-create",text:"2. npm init && npm create",depth:2},{id:"3-克隆项目--调试源码",text:"3. 克隆项目 && 调试源码",depth:2},{id:"4-主流程-init-函数拆分",text:"4. 主流程 init 函数拆分",depth:2},{id:"41-输出的目标路径",text:"4.1 输出的目标路径",depth:3},{id:"411-延伸函数-formattargetdir",text:"4.1.1 延伸函数 formatTargetDir",depth:4},{id:"42-prompts-询问项目名选择框架选择框架变体等",text:"4.2 prompts 询问项目名、选择框架，选择框架变体等",depth:3},{id:"43-重写已有目录或者创建不存在的目录",text:"4.3 重写已有目录/或者创建不存在的目录",depth:3},{id:"431-延伸函数-emptydir",text:"4.3.1 延伸函数 emptyDir",depth:4},{id:"44-获取模板路径",text:"4.4 获取模板路径",depth:3},{id:"45-写入文件函数",text:"4.5 写入文件函数",depth:3},{id:"451-延伸函数-copy--copydir",text:"4.5.1 延伸函数 copy && copyDir",depth:4},{id:"46-根据模板路径的文件写入目标路径",text:"4.6 根据模板路径的文件写入目标路径",depth:3},{id:"47-打印安装完成后的信息",text:"4.7 打印安装完成后的信息",depth:3},{id:"471-延伸的-pkgfromuseragent-函数",text:"4.7.1 延伸的 pkgFromUserAgent 函数",depth:4},{id:"5-总结",text:"5. 总结",depth:2}],title:"vite 3.0 都发布了，经常初始化 vite 项目，却不知 create-vite 原理？揭秘！",headingTitle:"vite 3.0 都发布了，经常初始化 vite 项目，却不知 create-vite 原理？揭秘！",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,r){r.d(n,{Z:()=>d});var t=r(52676),i=r(75271),s=r(92815);r(18544);let c={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function a(e,n,r){let t=Object.keys(c).includes(n)?n:r;return c[t](e)}let d=e=>{let{defaultLocale:n="en-US"}=e,r=(0,s.Vi)().page.readingTimeData,c=(0,s.Jr)(),d=(0,s.e7)(),[l,o]=(0,i.useState)(a(r,c,n));return(0,i.useEffect)(()=>{o(a(r,c,n))},[c,r]),(0,t.jsx)("span",{"data-dark":String(d),className:"rp-reading-time",children:l})}}}]);