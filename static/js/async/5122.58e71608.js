"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["5122"],{61584:function(n,e,r){r.r(e),r.d(e,{default:()=>o});var s=r(52676),i=r(40453),a=r(20713);let c=r.p+"static/image/terminal-debugger-v2.1b5ac634.png",t=r.p+"static/image/vscode-debugger.fad9f633.png",l=r.p+"static/image/node.js-debugger.438b9662.jpg";function d(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",ul:"ul",li:"li",pre:"pre",img:"img",del:"del",h3:"h3"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"尤雨溪推荐神器-ni-能替代-npmyarnpnpm-简单好用源码揭秘",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#尤雨溪推荐神器-ni-能替代-npmyarnpnpm-简单好用源码揭秘",children:"#"}),"尤雨溪推荐神器 ni ，能替代 npm/yarn/pnpm ？简单好用！源码揭秘！"]}),"\n",(0,s.jsx)(a.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(e.h2,{id:"1-前言",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["大家好，我是",(0,s.jsx)(e.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。欢迎关注我的",(0,s.jsx)(e.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"公众号若川视野"}),"，最近组织了",(0,s.jsx)(e.a,{href:"https://www.yuque.com/ruochuan12",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(e.strong,{children:"源码共读活动"})}),"，感兴趣的可以加我微信 ",(0,s.jsx)(e.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与，已进行两个多月，大家一起交流学习，共同进步，很多人都表示收获颇丰。"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["想学源码，极力推荐之前我写的",(0,s.jsx)(e.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,s.jsx)(e.code,{children:"jQuery"}),"、",(0,s.jsx)(e.code,{children:"underscore"}),"、",(0,s.jsx)(e.code,{children:"lodash"}),"、",(0,s.jsx)(e.code,{children:"vuex"}),"、",(0,s.jsx)(e.code,{children:"sentry"}),"、",(0,s.jsx)(e.code,{children:"axios"}),"、",(0,s.jsx)(e.code,{children:"redux"}),"、",(0,s.jsx)(e.code,{children:"koa"}),"、",(0,s.jsx)(e.code,{children:"vue-devtools"}),"、",(0,s.jsx)(e.code,{children:"vuex4"}),"、",(0,s.jsx)(e.code,{children:"koa-compose"}),"、",(0,s.jsx)(e.code,{children:"vue-next-release"}),"、",(0,s.jsx)(e.code,{children:"vue-this"}),"、",(0,s.jsx)(e.code,{children:"create-vue"}),"、",(0,s.jsx)(e.code,{children:"玩具vite"}),"等10余篇源码文章。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/ruochuan12/ni-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库 ni-analysis，求个star^_^"})}),"\n",(0,s.jsxs)(e.p,{children:["最近组织了",(0,s.jsx)(e.a,{href:"https://www.yuque.com/ruochuan12",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，大家一起学习源码。于是搜寻各种值得我们学习，且代码行数不多的源码。"]}),"\n",(0,s.jsxs)(e.p,{children:["之前写了 ",(0,s.jsx)(e.code,{children:"Vue3"})," 相关的两篇文章。"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://juejin.cn/post/6994976281053888519",rel:"noopener noreferrer",target:"_blank",children:"初学者也能看懂的 Vue3 源码中那些实用的基础工具函数"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://juejin.cn/post/6997943192851054606",rel:"noopener noreferrer",target:"_blank",children:"Vue 3.2 发布了，那尤雨溪是怎么发布 Vue.js 的？"})}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["文章里都是写的使用 ",(0,s.jsx)(e.code,{children:"yarn"})," 。参加源码共读的小伙伴按照我的文章，却拉取的最新仓库代码，发现 ",(0,s.jsx)(e.code,{children:"yarn install"})," 安装不了依赖，向我反馈报错。于是我去 ",(0,s.jsx)(e.code,{children:"github仓库"})," 一看，发现尤雨溪把 ",(0,s.jsx)(e.code,{children:"Vue3仓库"})," 从 ",(0,s.jsx)(e.code,{children:"yarn"})," 换成了 ",(0,s.jsx)(e.a,{href:"https://github.com/vuejs/vue-next/pull/4766/files",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(e.code,{children:"pnpm"})}),"。",(0,s.jsx)(e.a,{href:"https://github.com/vuejs/vue-next/blob/master/.github/contributing.md#development-setup",rel:"noopener noreferrer",target:"_blank",children:"贡献文档"}),"中有一句话。"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["We also recommend installing ",(0,s.jsx)(e.a,{href:"https://github.com/antfu/ni",rel:"noopener noreferrer",target:"_blank",children:"ni"})," to help switching between repos using different package managers. ",(0,s.jsx)(e.code,{children:"ni"})," also provides the handy ",(0,s.jsx)(e.code,{children:"nr"})," command which running npm scripts easier."]}),"\n"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["我们还建议安装 ",(0,s.jsx)(e.a,{href:"https://github.com/antfu/ni",rel:"noopener noreferrer",target:"_blank",children:"ni"})," 以帮助使用不同的包管理器在 repos 之间切换。 ",(0,s.jsx)(e.code,{children:"ni"})," 还提供了方便的 ",(0,s.jsx)(e.code,{children:"nr"})," 命令，可以更轻松地运行 npm 脚本。"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["这个 ",(0,s.jsx)(e.code,{children:"ni"})," 项目源码虽然是 ",(0,s.jsx)(e.code,{children:"ts"}),"，没用过 ",(0,s.jsx)(e.code,{children:"ts"})," 小伙伴也是很好理解的，而且主文件其实不到 ",(0,s.jsx)(e.code,{children:"100行"}),"，非常适合我们学习。"]}),"\n",(0,s.jsx)(e.p,{children:"阅读本文，你将学到："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"1. 学会 ni 使用和理解其原理\n2. 学会调试学习源码\n3. 可以在日常工作中也使用 ni\n4. 等等\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"2-原理",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-原理",children:"#"}),"2. 原理"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://github.com/antfu/ni#how",rel:"noopener noreferrer",target:"_blank",children:"github 仓库 ni#how"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"ni"})," 假设您使用锁文件（并且您应该）"]}),"\n",(0,s.jsxs)(e.p,{children:["在它运行之前，它会检测你的 ",(0,s.jsx)(e.code,{children:"yarn.lock"})," / ",(0,s.jsx)(e.code,{children:"pnpm-lock.yaml"})," / ",(0,s.jsx)(e.code,{children:"package-lock.json"})," 以了解当前的包管理器，并运行相应的命令。"]}),"\n",(0,s.jsx)(e.p,{children:"单从这句话中可能有些不好理解，还是不知道它是个什么。我解释一下。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"使用 `ni` 在项目中安装依赖时：\n   假设你的项目中有锁文件 `yarn.lock`，那么它最终会执行 `yarn install` 命令。\n   假设你的项目中有锁文件 `pnpm-lock.yaml`，那么它最终会执行 `pnpm i` 命令。\n   假设你的项目中有锁文件 `package-lock.json`，那么它最终会执行 `npm i` 命令。\n\n使用 `ni -g vue-cli` 安装全局依赖时\n    默认使用 `npm i -g vue-cli`\n\n当然不只有 `ni` 安装依赖。\n    还有 `nr` - run\n    `nx` - execute\n    `nu` - upgrade\n    `nci` - clean install\n    `nrm` - remove\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsxs)(e.strong,{children:["我看源码发现：",(0,s.jsx)(e.code,{children:"ni"}),"相关的命令，都可以在末尾追加",(0,s.jsx)(e.code,{children:"\\?"}),"，表示只打印，不是真正执行"]}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["所以全局安装 ",(0,s.jsx)(e.code,{children:"ni"})," 后，可以尽情测试，比如 ",(0,s.jsx)(e.code,{children:"ni \\?"}),"，",(0,s.jsx)(e.code,{children:"nr dev --port=3000 \\?"}),"，因为打印，所以可以在各种目录下执行，有助于理解 ",(0,s.jsx)(e.code,{children:"ni"})," 源码。我测试了如下图所示："]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"命令测试图示",src:c})}),"\n",(0,s.jsxs)(e.p,{children:["假设项目目录下没有锁文件，默认就会让用户从",(0,s.jsx)(e.code,{children:"npm、yarn、pnpm"}),"选择，然后执行相应的命令。\n但如果在",(0,s.jsx)(e.code,{children:"~/.nirc"}),"文件中，设置了全局默认的配置，则使用默认配置执行对应命令。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Config"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ini",children:'; ~/.nirc\n\n; fallback when no lock found\ndefaultAgent=npm # default "prompt"\n\n; for global installs\nglobalAgent=npm\n'})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"因此，我们可以得知这个工具必然要做三件事"}),"："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"1. 根据锁文件猜测用哪个包管理器 npm/yarn/pnpm\n2. 抹平不同的包管理器的命令差异\n3. 最终运行相应的脚本\n"})}),"\n",(0,s.jsxs)(e.p,{children:["接着继续看看 ",(0,s.jsx)(e.code,{children:"README"})," 其他命令的使用，就会好理解。"]}),"\n",(0,s.jsxs)(e.h2,{id:"3-使用",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-使用",children:"#"}),"3. 使用"]}),"\n",(0,s.jsxs)(e.p,{children:["看 ",(0,s.jsx)(e.a,{href:"https://github.com/antfu/ni",rel:"noopener noreferrer",target:"_blank",children:"ni github文档"}),"。"]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.del,{children:"npm i in a yarn project, again? F**k!"})}),"\n",(0,s.jsx)(e.p,{children:"ni - use the right package manager"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"全局安装。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm i -g @antfu/ni\n"})}),"\n",(0,s.jsxs)(e.p,{children:["如果全局安装遭遇冲突，我们可以加上 ",(0,s.jsx)(e.code,{children:"--force"})," 参数强制安装。"]}),"\n",(0,s.jsx)(e.p,{children:"举几个常用的例子。"}),"\n",(0,s.jsxs)(e.h3,{id:"31-ni---install",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#31-ni---install",children:"#"}),"3.1 ni - install"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ni\n\n# npm install\n# yarn install\n# pnpm install\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"ni axios\n\n# npm i axios\n# yarn add axios\n# pnpm i axios\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"32-nr---run",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#32-nr---run",children:"#"}),"3.2 nr - run"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"nr dev --port=3000\n\n# npm run dev -- --port=3000\n# yarn run dev --port=3000\n# pnpm run dev -- --port=3000\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"nr\n# 交互式选择命令去执行\n# interactively select the script to run\n# supports https://www.npmjs.com/package/npm-scripts-info convention\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"nr -\n\n# 重新执行最后一次执行的命令\n# rerun the last command\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"33-nx---execute",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#33-nx---execute",children:"#"}),"3.3 nx - execute"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"nx jest\n\n# npx jest\n# yarn dlx jest\n# pnpm dlx jest\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"4-阅读源码前的准备工作",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4-阅读源码前的准备工作",children:"#"}),"4. 阅读源码前的准备工作"]}),"\n",(0,s.jsxs)(e.h3,{id:"41-克隆",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#41-克隆",children:"#"}),"4.1 克隆"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-sh",children:"# 推荐克隆我的仓库（我的保证对应文章版本）\ngit clone https://github.com/ruochuan12/ni-analysis.git\ncd ni-analysis/ni\n# npm i -g pnpm\n# 安装依赖\npnpm i\n# 当然也可以直接用 ni\n\n# 或者克隆官方仓库\ngit clone https://github.com/antfu/ni.git\ncd ni\n# npm i -g pnpm\n# 安装依赖\npnpm i\n# 当然也可以直接用 ni\n"})}),"\n",(0,s.jsx)(e.p,{children:"众所周知，看一个开源项目，先从 package.json 文件开始看起。"}),"\n",(0,s.jsxs)(e.h3,{id:"42-packagejson-文件",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42-packagejson-文件",children:"#"}),"4.2 package.json 文件"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:'{\n    "name": "@antfu/ni",\n    "version": "0.10.0",\n    "description": "Use the right package manager",\n    // 暴露了六个命令\n    "bin": {\n        "ni": "bin/ni.js",\n        "nci": "bin/nci.js",\n        "nr": "bin/nr.js",\n        "nu": "bin/nu.js",\n        "nx": "bin/nx.js",\n        "nrm": "bin/nrm.js"\n    },\n    "scripts": {\n        // 省略了其他的命令 用 esno 执行 ts 文件\n        // 可以加上 ? 便于调试，也可以不加\n        // 或者是终端 npm run dev \\?\n        "dev": "esno src/ni.ts ?"\n    },\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["根据 ",(0,s.jsx)(e.code,{children:"dev"})," 命令，我们找到主入口文件 ",(0,s.jsx)(e.code,{children:"src/ni.ts"}),"。"]}),"\n",(0,s.jsxs)(e.h3,{id:"43-从源码主入口开始调试",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#43-从源码主入口开始调试",children:"#"}),"4.3 从源码主入口开始调试"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/ni.ts\nimport { parseNi } from './commands'\nimport { runCli } from './runner'\n\n// 我们可以在这里断点\nrunCli(parseNi)\n"})}),"\n",(0,s.jsxs)(e.p,{children:["找到 ",(0,s.jsx)(e.code,{children:"ni/package.json"})," 的 ",(0,s.jsx)(e.code,{children:"scripts"}),"，把鼠标移动到 ",(0,s.jsx)(e.code,{children:"dev"})," 命令上，会出现",(0,s.jsx)(e.code,{children:"运行脚本"}),"和",(0,s.jsx)(e.code,{children:"调试脚本"}),"命令。如下图所示，选择调试脚本。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"VSCode 调试",src:t})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"VSCode 调试 Node.js 说明",src:l})}),"\n",(0,s.jsxs)(e.h2,{id:"5-主流程-runner---runcli-函数",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#5-主流程-runner---runcli-函数",children:"#"}),"5. 主流程 runner - runCli 函数"]}),"\n",(0,s.jsxs)(e.p,{children:["这个函数就是对终端传入的命令行参数做一次解析。最终还是执行的 ",(0,s.jsx)(e.code,{children:"run"})," 函数。"]}),"\n",(0,s.jsxs)(e.p,{children:["对于 ",(0,s.jsx)(e.code,{children:"process"})," 不了解的读者，可以看",(0,s.jsx)(e.a,{href:"http://javascript.ruanyifeng.com/nodejs/process.html",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师写的 process 对象"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/runner.ts\nexport async function runCli(fn: Runner, options: DetectOptions = {}) {\n  // process.argv：返回一个数组，成员是当前进程的所有命令行参数。\n  // 其中 process.argv 的第一和第二个元素是Node可执行文件和被执行JavaScript文件的完全限定的文件系统路径，无论你是否这样输入他们。\n  const args = process.argv.slice(2).filter(Boolean)\n  try {\n    await run(fn, args, options)\n  }\n  catch (error) {\n    // process.exit方法用来退出当前进程。它可以接受一个数值参数，如果参数大于0，表示执行失败；如果等于0表示执行成功。\n    process.exit(1)\n  }\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["我们接着来看，",(0,s.jsx)(e.code,{children:"run"})," 函数。"]}),"\n",(0,s.jsxs)(e.h2,{id:"6-主流程-runner---run-主函数",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#6-主流程-runner---run-主函数",children:"#"}),"6. 主流程 runner - run 主函数"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"这个函数主要做了三件事"}),"："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"1. 根据锁文件猜测用哪个包管理器 npm/yarn/pnpm - detect 函数\n2. 抹平不同的包管理器的命令差异 - parseNi 函数\n3. 最终运行相应的脚本 - execa 工具\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/runner.ts\n// 源码有删减\nimport execa from 'execa'\nconst DEBUG_SIGN = '?'\nexport async function run(fn: Runner, args: string[], options: DetectOptions = {}) {\n  // 命令参数包含 问号? 则是调试模式，不执行脚本\n  const debug = args.includes(DEBUG_SIGN)\n  if (debug)\n    // 调试模式下，删除这个问号\n    remove(args, DEBUG_SIGN)\n\n  // cwd 方法返回进程的当前目录（绝对路径）\n  let cwd = process.cwd()\n  let command\n\n  // 支持指定 文件目录\n  // ni -C packages/foo vite\n  // nr -C playground dev\n  if (args[0] === '-C') {\n    cwd = resolve(cwd, args[1])\n    // 删掉这两个参数 -C packages/foo\n    args.splice(0, 2)\n  }\n\n  // 如果是全局安装，那么实用全局的包管理器\n  const isGlobal = args.includes('-g')\n  if (isGlobal) {\n    command = await fn(getGlobalAgent(), args)\n  }\n  else {\n    let agent = await detect({ ...options, cwd }) || getDefaultAgent()\n    // 猜测使用哪个包管理器，如果没有发现锁文件，会返回 null，则调用 getDefaultAgent 函数，默认返回是让用户选择 prompt\n    if (agent === 'prompt') {\n      agent = (await prompts({\n        name: 'agent',\n        type: 'select',\n        message: 'Choose the agent',\n        choices: agents.map(value => ({ title: value, value })),\n      })).agent\n      if (!agent)\n        return\n    }\n    // 这里的 fn 是 传入解析代码的函数\n    command = await fn(agent as Agent, args, {\n      hasLock: Boolean(agent),\n      cwd,\n    })\n  }\n\n  // 如果没有命令，直接返回，上一个 runCli 函数报错，退出进程\n  if (!command)\n    return\n\n  // 如果是调试模式，那么直接打印出命令。调试非常有用。\n  if (debug) {\n    // eslint-disable-next-line no-console\n    console.log(command)\n    return\n  }\n\n  // 最终用 execa 执行命令，比如 npm i\n  // https://github.com/sindresorhus/execa\n  // 介绍：Process execution for humans\n\n  await execa.command(command, { stdio: 'inherit', encoding: 'utf-8', cwd })\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["我们学习完主流程，接着来看两个重要的函数：",(0,s.jsx)(e.code,{children:"detect"})," 函数、",(0,s.jsx)(e.code,{children:"parseNi"})," 函数。"]}),"\n",(0,s.jsx)(e.p,{children:"根据入口我们可以知道。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"runCli(parseNi)\n\nrun(fn)\n\n这里 fn 则是 parseNi\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"61-根据锁文件猜测用哪个包管理器npmyarnpnpm---detect-函数",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#61-根据锁文件猜测用哪个包管理器npmyarnpnpm---detect-函数",children:"#"}),"6.1 根据锁文件猜测用哪个包管理器（npm/yarn/pnpm） - detect 函数"]}),"\n",(0,s.jsx)(e.p,{children:"代码相对不多，我就全部放出来了。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"主要就做了三件事情\n\n1. 找到项目根路径下的锁文件。返回对应的包管理器 `npm/yarn/pnpm`。\n2. 如果没找到，那就返回 `null`。\n3. 如果找到了，但是用户电脑没有这个命令，则询问用户是否自动安装。\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// ni/src/agents.ts\nexport const LOCKS: Record<string, Agent> = {\n  'pnpm-lock.yaml': 'pnpm',\n  'yarn.lock': 'yarn',\n  'package-lock.json': 'npm',\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/detect.ts\nexport async function detect({ autoInstall, cwd }: DetectOptions) {\n  const result = await findUp(Object.keys(LOCKS), { cwd })\n  const agent = (result ? LOCKS[path.basename(result)] : null)\n\n  if (agent && !cmdExists(agent)) {\n    if (!autoInstall) {\n      console.warn(`Detected ${agent} but it doesn't seem to be installed.\\n`)\n\n      if (process.env.CI)\n        process.exit(1)\n\n      const link = terminalLink(agent, INSTALL_PAGE[agent])\n      const { tryInstall } = await prompts({\n        name: 'tryInstall',\n        type: 'confirm',\n        message: `Would you like to globally install ${link}?`,\n      })\n      if (!tryInstall)\n        process.exit(1)\n    }\n\n    await execa.command(`npm i -g ${agent}`, { stdio: 'inherit', cwd })\n  }\n\n  return agent\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:["接着我们来看 ",(0,s.jsx)(e.code,{children:"parseNi"})," 函数。"]}),"\n",(0,s.jsxs)(e.h3,{id:"62-抹平不同的包管理器的命令差异---parseni-函数",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#62-抹平不同的包管理器的命令差异---parseni-函数",children:"#"}),"6.2 抹平不同的包管理器的命令差异 - parseNi 函数"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/commands.ts\nexport const parseNi = <Runner>((agent, args, ctx) => {\n  // ni -v 输出版本号\n  if (args.length === 1 && args[0] === '-v') {\n    // eslint-disable-next-line no-console\n    console.log(`@antfu/ni v${version}`)\n    process.exit(0)\n  }\n\n  if (args.length === 0)\n    return getCommand(agent, 'install')\n  // 省略一些代码\n})\n"})}),"\n",(0,s.jsxs)(e.p,{children:["通过 ",(0,s.jsx)(e.code,{children:"getCommand"})," 获取命令。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/agents.ts\n// 有删减\n// 一份配置，写个这三种包管理器中的命令。\n\nexport const AGENTS = {\n  npm: {\n    'install': 'npm i'\n  },\n  yarn: {\n    'install': 'yarn install'\n  },\n  pnpm: {\n    'install': 'pnpm i'\n  },\n}\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// ni/src/commands.ts\nexport function getCommand(\n  agent: Agent,\n  command: Command,\n  args: string[] = [],\n) {\n  // 包管理器不在 AGENTS 中则报错\n  // 比如 npm 不在\n  if (!(agent in AGENTS))\n    throw new Error(`Unsupported agent \"${agent}\"`)\n\n  // 获取命令 安装则对应 npm install\n  const c = AGENTS[agent][command]\n\n  // 如果是函数，则执行函数。\n  if (typeof c === 'function')\n    return c(args)\n\n  // 命令 没找到，则报错\n  if (!c)\n    throw new Error(`Command \"${command}\" is not support by agent \"${agent}\"`)\n  // 最终拼接成命令字符串\n  return c.replace('{0}', args.join(' ')).trim()\n}\n"})}),"\n",(0,s.jsxs)(e.h3,{id:"63-最终运行相应的脚本",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#63-最终运行相应的脚本",children:"#"}),"6.3 最终运行相应的脚本"]}),"\n",(0,s.jsxs)(e.p,{children:["得到相应的命令，比如是 ",(0,s.jsx)(e.code,{children:"npm i"}),"，最终用这个工具 ",(0,s.jsx)(e.a,{href:"https://github.com/sindresorhus/execa",rel:"noopener noreferrer",target:"_blank",children:"execa"})," 执行最终得到的相应的脚本。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"await execa.command(command, { stdio: 'inherit', encoding: 'utf-8', cwd })\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"7-总结",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#7-总结",children:"#"}),"7. 总结"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsxs)(e.strong,{children:["我们看完源码，可以知道这个神器 ",(0,s.jsx)(e.code,{children:"ni"})," 主要做了三件事"]}),"："]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"1. 根据锁文件猜测用哪个包管理器 npm/yarn/pnpm - detect 函数\n2. 抹平不同的包管理器的命令差异 - parseNi 函数\n3. 最终运行相应的脚本 - execa 工具\n"})}),"\n",(0,s.jsxs)(e.p,{children:["我们日常开发中，可能容易 ",(0,s.jsx)(e.code,{children:"npm"}),"、",(0,s.jsx)(e.code,{children:"yarn"}),"、",(0,s.jsx)(e.code,{children:"pnpm"})," 混用。有了 ",(0,s.jsx)(e.code,{children:"ni"})," 后，可以用于日常开发使用。",(0,s.jsx)(e.code,{children:"Vue"})," 核心成员 ",(0,s.jsx)(e.a,{href:"https://antfu.me",rel:"noopener noreferrer",target:"_blank",children:"Anthony Fu"})," 发现问题，最终开发了一个工具 ",(0,s.jsx)(e.a,{href:"https://github.com/antfu/ni",rel:"noopener noreferrer",target:"_blank",children:"ni"})," 解决问题。而这种发现问题、解决问题的能力正是我们前端开发工程师所需要的。"]}),"\n",(0,s.jsxs)(e.p,{children:["另外，我发现 ",(0,s.jsx)(e.code,{children:"Vue"})," 生态很多基本都切换成了使用 ",(0,s.jsx)(e.a,{href:"https://pnpm.io",rel:"noopener noreferrer",target:"_blank",children:"pnpm"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["因为文章不宜过长，所以未全面展开讲述源码中所有细节。非常建议读者朋友按照文中方法使用",(0,s.jsx)(e.code,{children:"VSCode"}),"调试 ",(0,s.jsx)(e.code,{children:"ni"})," 源码。",(0,s.jsx)(e.strong,{children:"学会调试源码后，源码并没有想象中的那么难"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["最后可以持续关注我@若川。欢迎加我微信 ",(0,s.jsx)(e.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,s.jsx)(e.a,{href:"https://www.yuque.com/ruochuan12",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，大家一起学习源码，共同进步。"]})]})}function h(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(d,n)})):d(n)}let o=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["ni%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-原理",text:"2. 原理",depth:2},{id:"3-使用",text:"3. 使用",depth:2},{id:"31-ni---install",text:"3.1 ni - install",depth:3},{id:"32-nr---run",text:"3.2 nr - run",depth:3},{id:"33-nx---execute",text:"3.3 nx - execute",depth:3},{id:"4-阅读源码前的准备工作",text:"4. 阅读源码前的准备工作",depth:2},{id:"41-克隆",text:"4.1 克隆",depth:3},{id:"42-packagejson-文件",text:"4.2 package.json 文件",depth:3},{id:"43-从源码主入口开始调试",text:"4.3 从源码主入口开始调试",depth:3},{id:"5-主流程-runner---runcli-函数",text:"5. 主流程 runner - runCli 函数",depth:2},{id:"6-主流程-runner---run-主函数",text:"6. 主流程 runner - run 主函数",depth:2},{id:"61-根据锁文件猜测用哪个包管理器npmyarnpnpm---detect-函数",text:"6.1 根据锁文件猜测用哪个包管理器（npm/yarn/pnpm） - detect 函数",depth:3},{id:"62-抹平不同的包管理器的命令差异---parseni-函数",text:"6.2 抹平不同的包管理器的命令差异 - parseNi 函数",depth:3},{id:"63-最终运行相应的脚本",text:"6.3 最终运行相应的脚本",depth:3},{id:"7-总结",text:"7. 总结",depth:2}],title:"尤雨溪推荐神器 ni ，能替代 npm/yarn/pnpm ？简单好用！源码揭秘！",headingTitle:"尤雨溪推荐神器 ni ，能替代 npm/yarn/pnpm ？简单好用！源码揭秘！",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(n,e,r){r.d(e,{Z:()=>l});var s=r(52676),i=r(75271),a=r(92815);r(18544);let c={"zh-CN":n=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${n.minutes>=1?`${Math.ceil(n.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function t(n,e,r){let s=Object.keys(c).includes(e)?e:r;return c[s](n)}let l=n=>{let{defaultLocale:e="en-US"}=n,r=(0,a.Vi)().page.readingTimeData,c=(0,a.Jr)(),l=(0,a.e7)(),[d,h]=(0,i.useState)(t(r,c,e));return(0,i.useEffect)(()=>{h(t(r,c,e))},[c,r]),(0,s.jsx)("span",{"data-dark":String(l),className:"rp-reading-time",children:d})}}}]);