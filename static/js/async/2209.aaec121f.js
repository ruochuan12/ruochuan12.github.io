"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["2209"],{59730:function(e,n,r){r.r(n),r.d(n,{default:()=>h});var s=r(52676),t=r(40453),a=r(20713);let c=r.p+"static/image/npm-init-vue@next.bd252c2d.png",i=r.p+"static/image/init-page.dbdbcab6.png",d=r.p+"static/image/npx-vue-cli.5932f63c.png";function o(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",pre:"pre",img:"img",h3:"h3",ul:"ul",li:"li"},(0,t.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"vue-团队公开快如闪电的全新脚手架工具-create-vue未来将替代-vue-cli才300余行代码学它",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#vue-团队公开快如闪电的全新脚手架工具-create-vue未来将替代-vue-cli才300余行代码学它",children:"#"}),"Vue 团队公开快如闪电的全新脚手架工具 create-vue，未来将替代 Vue-CLI，才300余行代码，学它！"]}),"\n",(0,s.jsx)(a.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["大家好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。欢迎关注我的",(0,s.jsx)(n.a,{href:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/13/16efe57ddc7c9eb3~tplv-t2oaga2asx-image.image",title:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/13/16efe57ddc7c9eb3~tplv-t2oaga2asx-image.image",rel:"noopener noreferrer",target:"_blank",children:"公众号若川视野"}),"，最近组织了",(0,s.jsx)(n.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.strong,{children:"源码共读活动"})}),"，感兴趣的可以加我微信 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与，已进行两个多月，大家一起交流学习，共同进步。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["想学源码，极力推荐之前我写的",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,s.jsx)(n.code,{children:"jQuery"}),"、",(0,s.jsx)(n.code,{children:"underscore"}),"、",(0,s.jsx)(n.code,{children:"lodash"}),"、",(0,s.jsx)(n.code,{children:"vuex"}),"、",(0,s.jsx)(n.code,{children:"sentry"}),"、",(0,s.jsx)(n.code,{children:"axios"}),"、",(0,s.jsx)(n.code,{children:"redux"}),"、",(0,s.jsx)(n.code,{children:"koa"}),"、",(0,s.jsx)(n.code,{children:"vue-devtools"}),"、",(0,s.jsx)(n.code,{children:"vuex4"}),"、",(0,s.jsx)(n.code,{children:"koa-compose"}),"、",(0,s.jsx)(n.code,{children:"vue-next-release"}),"、",(0,s.jsx)(n.code,{children:"vue-this"}),"等十余篇源码文章。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["美国时间 2021 年 10 月 7 日早晨，Vue 团队等主要贡献者举办了一个 ",(0,s.jsx)(n.code,{children:"Vue Contributor Days"})," 在线会议，",(0,s.jsx)(n.a,{href:"https://github.com/sodatea",rel:"noopener noreferrer",target:"_blank",children:"蒋豪群"}),"（",(0,s.jsx)(n.a,{href:"https://www.zhihu.com/people/sodatea",rel:"noopener noreferrer",target:"_blank",children:"知乎胖茶"}),"，Vue.js 官方团队成员，Vue-CLI 核心开发），在会上公开了",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/create-vue",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"create-vue"})}),"，一个全新的脚手架工具。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"create-vue"}),"使用",(0,s.jsx)(n.code,{children:"npm init vue@next"}),"一行命令，就能",(0,s.jsx)(n.code,{children:"快如闪电般"}),"初始化好基于",(0,s.jsx)(n.code,{children:"vite"}),"的",(0,s.jsx)(n.code,{children:"Vue3"}),"项目。"]}),"\n",(0,s.jsx)(n.p,{children:"本文就是通过调试和大家一起学习这个300余行的源码。"}),"\n",(0,s.jsx)(n.p,{children:"阅读本文，你将学到："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"1. 学会全新的官方脚手架工具 create-vue 的使用和原理\n2. 学会使用 VSCode 直接打开 github 项目\n3. 学会使用测试用例调试源码\n4. 学以致用，为公司初始化项目写脚手架工具。\n5. 等等\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"2-使用-npm-init-vuenext-初始化-vue3-项目",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-使用-npm-init-vuenext-初始化-vue3-项目",children:"#"}),"2. 使用 npm init vue@next 初始化 vue3 项目"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/vuejs/create-vue",rel:"noopener noreferrer",target:"_blank",children:"create-vue github README"}),"上写着，",(0,s.jsx)(n.code,{children:"An easy way to start a Vue project"}),"。一种简单的初始化vue项目的方式。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm init vue@next\n"})}),"\n",(0,s.jsxs)(n.p,{children:["估计大多数读者，第一反应是",(0,s.jsx)(n.strong,{children:"这样竟然也可以，这么简单快捷？"})]}),"\n",(0,s.jsx)(n.p,{children:"忍不住想动手在控制台输出命令，我在终端试过，见下图。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"npm init vue@next",src:c})}),"\n",(0,s.jsxs)(n.p,{children:["最终",(0,s.jsx)(n.code,{children:"cd vue3-project"}),"、",(0,s.jsx)(n.code,{children:"npm install"})," 、",(0,s.jsx)(n.code,{children:"npm run dev"}),"打开页面",(0,s.jsx)(n.a,{href:"http://localhost:3000",rel:"noopener noreferrer",target:"_blank",children:"http://localhost:3000"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"初始化页面",src:i})}),"\n",(0,s.jsxs)(n.h3,{id:"21-npm-init--npx",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-npm-init--npx",children:"#"}),"2.1 npm init && npx"]}),"\n",(0,s.jsxs)(n.p,{children:["为啥 ",(0,s.jsx)(n.code,{children:"npm init"})," 也可以直接初始化一个项目，带着疑问，我们翻看 ",(0,s.jsx)(n.code,{children:"npm"})," 文档。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.npmjs.com/cli/v6/commands/npm-init",rel:"noopener noreferrer",target:"_blank",children:"npm init"})}),"\n",(0,s.jsx)(n.p,{children:"npm init 用法："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm init [--force|-f|--yes|-y|--scope]\nnpm init <@scope> (same as `npx <@scope>/create`)\nnpm init [<@scope>/]<name> (same as `npx [<@scope>/]create-<name>`)\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"npm init <initializer>"})," 时转换成",(0,s.jsx)(n.code,{children:"npx"}),"命令："]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"npm init foo -> npx create-foo"}),"\n",(0,s.jsx)(n.li,{children:"npm init @usr/foo -> npx @usr/create-foo"}),"\n",(0,s.jsx)(n.li,{children:"npm init @usr -> npx @usr/create"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"看完文档，我们也就理解了："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 运行\nnpm init vue@next\n# 相当于\nnpx create-vue@next\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们可以在这里",(0,s.jsx)(n.a,{href:"https://registry.npmjs.org/create-vue",rel:"noopener noreferrer",target:"_blank",children:"create-vue"}),"，找到一些信息。或者在",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/create-vue",rel:"noopener noreferrer",target:"_blank",children:"npm create-vue"}),"找到版本等信息。"]}),"\n",(0,s.jsxs)(n.p,{children:["其中",(0,s.jsx)(n.code,{children:"@next"}),"是指定版本，通过",(0,s.jsx)(n.code,{children:"npm dist-tag ls create-vue"}),"命令可以看出，",(0,s.jsx)(n.code,{children:"next"}),"版本目前对应的是",(0,s.jsx)(n.code,{children:"3.0.0-beta.6"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm dist-tag ls create-vue\n- latest: 3.0.0-beta.6\n- next: 3.0.0-beta.6\n"})}),"\n",(0,s.jsxs)(n.p,{children:["发布时 ",(0,s.jsx)(n.code,{children:"npm publish --tag next"})," 这种写法指定 ",(0,s.jsx)(n.code,{children:"tag"}),"。默认标签是",(0,s.jsx)(n.code,{children:"latest"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["可能有读者对 ",(0,s.jsx)(n.code,{children:"npx"})," 不熟悉，这时找到",(0,s.jsx)(n.a,{href:"http://www.ruanyifeng.com/blog/2019/02/npx.html",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师博客 npx 介绍"}),"、",(0,s.jsx)(n.a,{href:"http://nodejs.cn/learn/the-npx-nodejs-package-runner",rel:"noopener noreferrer",target:"_blank",children:"nodejs.cn npx"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"npx 是一个非常强大的命令，从 npm 的 5.2 版本（发布于 2017 年 7 月）开始可用。"})}),"\n",(0,s.jsxs)(n.p,{children:["简单说下容易忽略且常用的场景，",(0,s.jsx)(n.code,{children:"npx"}),"有点类似小程序提出的随用随走。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"轻松地运行本地命令"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'node_modules/.bin/vite -v\n# vite/2.6.5 linux-x64 node-v14.16.0\n\n# 等同于\n# package.json script: "vite -v"\n# npm run vite\n\nnpx vite -v\n# vite/2.6.5 linux-x64 node-v14.16.0\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"使用不同的 Node.js 版本运行代码"}),"\n某些场景下可以临时切换 ",(0,s.jsx)(n.code,{children:"node"})," 版本，有时比 ",(0,s.jsx)(n.code,{children:"nvm"})," 包管理方便些。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npx node@14 -v\n# v14.18.0\n\nnpx -p node@14 node -v\n# v14.18.0\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"无需安装的命令执行"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 启动本地静态服务\nnpx http-server\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 无需全局安装\nnpx @vue/cli create vue-project\n# @vue/cli 相比 npm init vue@next npx create-vue@next 很慢。\n\n# 全局安装\nnpm i -g @vue/cli\nvue create vue-project\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"npx vue-cli",src:d})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"npm init vue@next"})," （",(0,s.jsx)(n.code,{children:"npx create-vue@next"}),"） 快的原因，主要在于依赖少（能不依赖包就不依赖），源码行数少，目前",(0,s.jsx)(n.code,{children:"index.js"}),"只有300余行。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-配置环境调试源码",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-配置环境调试源码",children:"#"}),"3. 配置环境调试源码"]}),"\n",(0,s.jsxs)(n.h3,{id:"31-克隆-create-vue-项目",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-克隆-create-vue-项目",children:"#"}),"3.1 克隆 create-vue 项目"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/create-vue-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库地址 create-vue-analysis"}),"，求个",(0,s.jsx)(n.code,{children:"star"}),"~"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 可以直接克隆我的仓库，我的仓库保留的 create-vue 仓库的 git 记录\ngit clone https://github.com/ruochuan12/create-vue-analysis.git\ncd create-vue-analysis/create-vue\nnpm i\n"})}),"\n",(0,s.jsxs)(n.p,{children:["当然不克隆也可以直接用 ",(0,s.jsx)(n.code,{children:"VSCode"})," 打开我的仓库\n",(0,s.jsx)(n.a,{href:"https://open.vscode.dev/lxchuan12/create-vue-analysis",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.img,{src:"https://open.vscode.dev/badges/open-in-vscode.svg",alt:"Open in Visual Studio Code"})})]}),"\n",(0,s.jsxs)(n.p,{children:["顺带说下：我是怎么保留 ",(0,s.jsx)(n.code,{children:"create-vue"})," 仓库的 ",(0,s.jsx)(n.code,{children:"git"})," 记录的。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 在 github 上新建一个仓库 `create-vue-analysis` 克隆下来\ngit clone https://github.com/ruochuan12/create-vue-analysis.git\ncd create-vue-analysis\ngit subtree add --prefix=create-vue https://github.com/vuejs/create-vue.git main\n# 这样就把 create-vue 文件夹克隆到自己的 git 仓库了。且保留的 git 记录\n"})}),"\n",(0,s.jsxs)(n.p,{children:["关于更多 ",(0,s.jsx)(n.code,{children:"git subtree"}),"，可以看",(0,s.jsx)(n.a,{href:"https://segmentfault.com/a/1190000003969060",rel:"noopener noreferrer",target:"_blank",children:"Git Subtree 简明使用手册"})]}),"\n",(0,s.jsxs)(n.h3,{id:"32-packagejson-分析",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-packagejson-分析",children:"#"}),"3.2 package.json 分析"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// create-vue/package.json\n{\n  "name": "create-vue",\n  "version": "3.0.0-beta.6",\n  "description": "An easy way to start a Vue project",\n  "type": "module",\n  "bin": {\n    "create-vue": "outfile.cjs"\n  },\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"bin"}),"指定可执行脚本。也就是我们可以使用 ",(0,s.jsx)(n.code,{children:"npx create-vue"})," 的原因。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"outfile.cjs"})," 是打包输出的",(0,s.jsx)(n.code,{children:"JS"}),"文件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n  "scripts": {\n    "build": "esbuild --bundle index.js --format=cjs --platform=node --outfile=outfile.cjs",\n    "snapshot": "node snapshot.js",\n    "pretest": "run-s build snapshot",\n    "test": "node test.js"\n  },\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["执行 ",(0,s.jsx)(n.code,{children:"npm run test"})," 时，会先执行钩子函数 ",(0,s.jsx)(n.code,{children:"pretest"}),"。",(0,s.jsx)(n.code,{children:"run-s"})," 是 ",(0,s.jsx)(n.a,{href:"https://github.com/mysticatea/npm-run-all/blob/HEAD/docs/run-s.md",rel:"noopener noreferrer",target:"_blank",children:"npm-run-all"})," 提供的命令。",(0,s.jsx)(n.code,{children:"run-s build snapshot"})," 命令相当于 ",(0,s.jsx)(n.code,{children:"npm run build && npm run snapshot"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["根据脚本提示，我们来看 ",(0,s.jsx)(n.code,{children:"snapshot.js"})," 文件。"]}),"\n",(0,s.jsxs)(n.h3,{id:"33-生成快照-snapshotjs",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-生成快照-snapshotjs",children:"#"}),"3.3 生成快照 snapshot.js"]}),"\n",(0,s.jsxs)(n.p,{children:["这个文件主要作用是根据",(0,s.jsx)(n.code,{children:"const featureFlags = ['typescript', 'jsx', 'router', 'vuex', 'with-tests']"})," 组合生成",(0,s.jsx)(n.code,{children:"31种"}),"加上 ",(0,s.jsx)(n.code,{children:"default"})," 共计 ",(0,s.jsx)(n.code,{children:"32种"})," 组合，生成快照在 ",(0,s.jsx)(n.code,{children:"playground"}),"目录。"]}),"\n",(0,s.jsxs)(n.p,{children:["因为打包生成的 ",(0,s.jsx)(n.code,{children:"outfile.cjs"})," 代码有做一些处理，不方便调试，我们可以修改为",(0,s.jsx)(n.code,{children:"index.js"}),"便于调试。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 路径 create-vue/snapshot.js\nconst bin = path.resolve(__dirname, './outfile.cjs')\n// 改成 index.js 便于调试\nconst bin = path.resolve(__dirname, './index.js')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们可以在",(0,s.jsx)(n.code,{children:"for"}),"和 ",(0,s.jsx)(n.code,{children:"createProjectWithFeatureFlags"})," 打上断点。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"createProjectWithFeatureFlags"}),"其实类似在终端输入如下执行这样的命令"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"node ./index.js --xxx --xxx --force\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function createProjectWithFeatureFlags(flags) {\n  const projectName = flags.join('-')\n  console.log(`Creating project ${projectName}`)\n  const { status } = spawnSync(\n    'node',\n    [bin, projectName, ...flags.map((flag) => `--${flag}`), '--force'],\n    {\n      cwd: playgroundDir,\n      stdio: ['pipe', 'pipe', 'inherit']\n    }\n  )\n\n  if (status !== 0) {\n    process.exit(status)\n  }\n}\n\n// 路径 create-vue/snapshot.js\nfor (const flags of flagCombinations) {\n  createProjectWithFeatureFlags(flags)\n}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"调试"}),"：",(0,s.jsx)(n.code,{children:"VSCode"}),"打开项目，",(0,s.jsx)(n.code,{children:"VSCode"}),"高版本(1.50+)可以在 ",(0,s.jsx)(n.code,{children:"create-vue/package.json"})," => ",(0,s.jsx)(n.code,{children:"scripts"})," => ",(0,s.jsx)(n.code,{children:'"test": "node test.js"'}),"。鼠标悬停在",(0,s.jsx)(n.code,{children:"test"}),"上会有调试脚本提示，选择调试脚本。如果对调试不熟悉，可以看我之前的文章",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io/koa-compose",rel:"noopener noreferrer",target:"_blank",children:"koa-compose"}),"，写的很详细。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["调试时，大概率你会遇到：",(0,s.jsx)(n.code,{children:"create-vue/index.js"})," 文件中，",(0,s.jsx)(n.code,{children:"__dirname"})," 报错问题。可以按照如下方法解决。在 ",(0,s.jsx)(n.code,{children:"import"})," 的语句后，添加如下语句，就能愉快的调试了。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 路径 create-vue/index.js\n// 解决办法和nodejs issues\n// https://stackoverflow.com/questions/64383909/dirname-is-not-defined-in-node-14-version\n// https://github.com/nodejs/help/issues/2907\n\nimport { fileURLToPath } from 'url';\nimport { dirname } from 'path';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n"})}),"\n",(0,s.jsx)(n.p,{children:"接着我们调试 index.js 文件，来学习。"}),"\n",(0,s.jsxs)(n.h2,{id:"4-调试-indexjs-主流程",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-调试-indexjs-主流程",children:"#"}),"4. 调试 index.js 主流程"]}),"\n",(0,s.jsxs)(n.p,{children:["回顾下上文 ",(0,s.jsx)(n.code,{children:"npm init vue@next"})," 初始化项目的。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"npm init vue@next",src:c})}),"\n",(0,s.jsx)(n.p,{children:"单从初始化项目输出图来看。主要是三个步骤。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"1. 输入项目名称，默认值是 vue-project\n2. 询问一些配置 渲染模板等\n3. 完成创建项目，输出运行提示\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"async function init() {\n  // 省略放在后文详细讲述\n}\n\n// async 函数返回的是Promise 可以用 catch 报错\ninit().catch((e) => {\n  console.error(e)\n})\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"41-解析命令行参数",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-解析命令行参数",children:"#"}),"4.1 解析命令行参数"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 返回运行当前脚本的工作目录的路径。\nconst cwd = process.cwd()\n// possible options:\n// --default\n// --typescript / --ts\n// --jsx\n// --router / --vue-router\n// --vuex\n// --with-tests / --tests / --cypress\n// --force (for force overwriting)\nconst argv = minimist(process.argv.slice(2), {\n    alias: {\n        typescript: ['ts'],\n        'with-tests': ['tests', 'cypress'],\n        router: ['vue-router']\n    },\n    // all arguments are treated as booleans\n    boolean: true\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/substack/minimist",rel:"noopener noreferrer",target:"_blank",children:"minimist"})}),"\n",(0,s.jsx)(n.p,{children:"简单说，这个库，就是解析命令行参数的。看例子，我们比较容易看懂传参和解析结果。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: 'boop' }\n"})}),"\n",(0,s.jsx)(n.p,{children:"比如"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm init vue@next --vuex --force\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"42-如果设置了-feature-flags-跳过-prompts-询问",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-如果设置了-feature-flags-跳过-prompts-询问",children:"#"}),"4.2 如果设置了 feature flags 跳过 prompts 询问"]}),"\n",(0,s.jsx)(n.p,{children:"这种写法方便代码测试等。直接跳过交互式询问，同时也可以省时间。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// if any of the feature flags is set, we would skip the feature prompts\n  // use `??` instead of `||` once we drop Node.js 12 support\n  const isFeatureFlagsUsed =\n    typeof (argv.default || argv.ts || argv.jsx || argv.router || argv.vuex || argv.tests) ===\n    'boolean'\n\n// 生成目录\n  let targetDir = argv._[0]\n  // 默认 vue-projects\n  const defaultProjectName = !targetDir ? 'vue-project' : targetDir\n  // 强制重写文件夹，当同名文件夹存在时\n  const forceOverwrite = argv.force\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"43-交互式询问一些配置",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-交互式询问一些配置",children:"#"}),"4.3 交互式询问一些配置"]}),"\n",(0,s.jsxs)(n.p,{children:["如上文",(0,s.jsx)(n.code,{children:"npm init vue@next"})," 初始化的图示"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"输入项目名称"}),"\n",(0,s.jsx)(n.li,{children:"还有是否删除已经存在的同名目录"}),"\n",(0,s.jsx)(n.li,{children:"询问使用需要 JSX Router vuex cypress 等。"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"let result = {}\n\n  try {\n    // Prompts:\n    // - Project name:\n    //   - whether to overwrite the existing directory or not?\n    //   - enter a valid package name for package.json\n    // - Project language: JavaScript / TypeScript\n    // - Add JSX Support?\n    // - Install Vue Router for SPA development?\n    // - Install Vuex for state management? (TODO)\n    // - Add Cypress for testing?\n    result = await prompts(\n      [\n        {\n          name: 'projectName',\n          type: targetDir ? null : 'text',\n          message: 'Project name:',\n          initial: defaultProjectName,\n          onState: (state) => (targetDir = String(state.value).trim() || defaultProjectName)\n        },\n        // 省略若干配置\n        {\n          name: 'needsTests',\n          type: () => (isFeatureFlagsUsed ? null : 'toggle'),\n          message: 'Add Cypress for testing?',\n          initial: false,\n          active: 'Yes',\n          inactive: 'No'\n        }\n      ],\n      {\n        onCancel: () => {\n          throw new Error(red('✖') + ' Operation cancelled')\n        }\n      }\n    ]\n    )\n  } catch (cancelled) {\n    console.log(cancelled.message)\n    // 退出当前进程。\n    process.exit(1)\n  }\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"44-初始化询问用户给到的参数同时也会给到默认值",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-初始化询问用户给到的参数同时也会给到默认值",children:"#"}),"4.4 初始化询问用户给到的参数，同时也会给到默认值"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// `initial` won't take effect if the prompt type is null\n  // so we still have to assign the default values here\n  const {\n    packageName = toValidPackageName(defaultProjectName),\n    shouldOverwrite,\n    needsJsx = argv.jsx,\n    needsTypeScript = argv.typescript,\n    needsRouter = argv.router,\n    needsVuex = argv.vuex,\n    needsTests = argv.tests\n  } = result\n  const root = path.join(cwd, targetDir)\n\n  // 如果需要强制重写，清空文件夹\n\n  if (shouldOverwrite) {\n    emptyDir(root)\n    // 如果不存在文件夹，则创建\n  } else if (!fs.existsSync(root)) {\n    fs.mkdirSync(root)\n  }\n\n  // 脚手架项目目录\n  console.log(`\\nScaffolding project in ${root}...`)\n\n // 生成 package.json 文件\n  const pkg = { name: packageName, version: '0.0.0' }\n  fs.writeFileSync(path.resolve(root, 'package.json'), JSON.stringify(pkg, null, 2))\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"45-根据模板文件生成初始化项目所需文件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#45-根据模板文件生成初始化项目所需文件",children:"#"}),"4.5 根据模板文件生成初始化项目所需文件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"  // todo:\n  // work around the esbuild issue that `import.meta.url` cannot be correctly transpiled\n  // when bundling for node and the format is cjs\n  // const templateRoot = new URL('./template', import.meta.url).pathname\n  const templateRoot = path.resolve(__dirname, 'template')\n  const render = function render(templateName) {\n    const templateDir = path.resolve(templateRoot, templateName)\n    renderTemplate(templateDir, root)\n  }\n\n  // Render base template\n  render('base')\n\n   // 添加配置\n  // Add configs.\n  if (needsJsx) {\n    render('config/jsx')\n  }\n  if (needsRouter) {\n    render('config/router')\n  }\n  if (needsVuex) {\n    render('config/vuex')\n  }\n  if (needsTests) {\n    render('config/cypress')\n  }\n  if (needsTypeScript) {\n    render('config/typescript')\n  }\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"46-渲染生成代码模板",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#46-渲染生成代码模板",children:"#"}),"4.6 渲染生成代码模板"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Render code template.\n  // prettier-ignore\n  const codeTemplate =\n    (needsTypeScript ? 'typescript-' : '') +\n    (needsRouter ? 'router' : 'default')\n  render(`code/${codeTemplate}`)\n\n  // Render entry file (main.js/ts).\n  if (needsVuex && needsRouter) {\n    render('entry/vuex-and-router')\n  } else if (needsVuex) {\n    render('entry/vuex')\n  } else if (needsRouter) {\n    render('entry/router')\n  } else {\n    render('entry/default')\n  }\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"47-如果配置了需要-ts",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#47-如果配置了需要-ts",children:"#"}),"4.7 如果配置了需要 ts"]}),"\n",(0,s.jsxs)(n.p,{children:["重命名所有的 ",(0,s.jsx)(n.code,{children:".js"})," 文件改成 ",(0,s.jsx)(n.code,{children:".ts"}),"。\n重命名 ",(0,s.jsx)(n.code,{children:"jsconfig.json"})," 文件为 ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," 文件。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/docs/languages/jsconfig",rel:"noopener noreferrer",target:"_blank",children:"jsconfig.json"})," 是VSCode的配置文件，可用于配置跳转等。"]}),"\n",(0,s.jsxs)(n.p,{children:["把",(0,s.jsx)(n.code,{children:"index.html"})," 文件里的 ",(0,s.jsx)(n.code,{children:"main.js"})," 重命名为 ",(0,s.jsx)(n.code,{children:"main.ts"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Cleanup.\n\nif (needsTypeScript) {\n    // rename all `.js` files to `.ts`\n    // rename jsconfig.json to tsconfig.json\n    preOrderDirectoryTraverse(\n      root,\n      () => {},\n      (filepath) => {\n        if (filepath.endsWith('.js')) {\n          fs.renameSync(filepath, filepath.replace(/\\.js$/, '.ts'))\n        } else if (path.basename(filepath) === 'jsconfig.json') {\n          fs.renameSync(filepath, filepath.replace(/jsconfig\\.json$/, 'tsconfig.json'))\n        }\n      }\n    )\n\n    // Rename entry in `index.html`\n    const indexHtmlPath = path.resolve(root, 'index.html')\n    const indexHtmlContent = fs.readFileSync(indexHtmlPath, 'utf8')\n    fs.writeFileSync(indexHtmlPath, indexHtmlContent.replace('src/main.js', 'src/main.ts'))\n  }\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"48-配置了不需要测试",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#48-配置了不需要测试",children:"#"}),"4.8 配置了不需要测试"]}),"\n",(0,s.jsxs)(n.p,{children:["因为所有的模板都有测试文件，所以不需要测试时，执行删除 ",(0,s.jsx)(n.code,{children:"cypress"}),"、",(0,s.jsx)(n.code,{children:"/__tests__/"})," 文件夹"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"  if (!needsTests) {\n    // All templates assumes the need of tests.\n    // If the user doesn't need it:\n    // rm -rf cypress **/__tests__/\n    preOrderDirectoryTraverse(\n      root,\n      (dirpath) => {\n        const dirname = path.basename(dirpath)\n\n        if (dirname === 'cypress' || dirname === '__tests__') {\n          emptyDir(dirpath)\n          fs.rmdirSync(dirpath)\n        }\n      },\n      () => {}\n    )\n  }\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"49-根据使用的-npm--yarn--pnpm-生成readmemd-文件给出运行项目的提示",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#49-根据使用的-npm--yarn--pnpm-生成readmemd-文件给出运行项目的提示",children:"#"}),"4.9 根据使用的 npm / yarn / pnpm 生成README.md 文件，给出运行项目的提示"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Instructions:\n  // Supported package managers: pnpm > yarn > npm\n  // Note: until <https://github.com/pnpm/pnpm/issues/3505> is resolved,\n  // it is not possible to tell if the command is called by `pnpm init`.\n  const packageManager = /pnpm/.test(process.env.npm_execpath)\n    ? 'pnpm'\n    : /yarn/.test(process.env.npm_execpath)\n    ? 'yarn'\n    : 'npm'\n\n  // README generation\n  fs.writeFileSync(\n    path.resolve(root, 'README.md'),\n    generateReadme({\n      projectName: result.projectName || defaultProjectName,\n      packageManager,\n      needsTypeScript,\n      needsTests\n    })\n  )\n\n  console.log(`\\nDone. Now run:\\n`)\n  if (root !== cwd) {\n    console.log(`  ${bold(green(`cd ${path.relative(cwd, root)}`))}`)\n  }\n  console.log(`  ${bold(green(getCommand(packageManager, 'install')))}`)\n  console.log(`  ${bold(green(getCommand(packageManager, 'dev')))}`)\n  console.log()\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"5-npm-run-test--node-testjs-测试",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-npm-run-test--node-testjs-测试",children:"#"}),"5. npm run test => node test.js 测试"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// create-vue/test.js\nimport fs from 'fs'\nimport path from 'path'\nimport { fileURLToPath } from 'url'\n\nimport { spawnSync } from 'child_process'\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\nconst playgroundDir = path.resolve(__dirname, './playground/')\n\nfor (const projectName of fs.readdirSync(playgroundDir)) {\n  if (projectName.endsWith('with-tests')) {\n    console.log(`Running unit tests in ${projectName}`)\n    const unitTestResult = spawnSync('pnpm', ['test:unit:ci'], {\n      cwd: path.resolve(playgroundDir, projectName),\n      stdio: 'inherit',\n      shell: true\n    })\n    if (unitTestResult.status !== 0) {\n      throw new Error(`Unit tests failed in ${projectName}`)\n    }\n\n    console.log(`Running e2e tests in ${projectName}`)\n    const e2eTestResult = spawnSync('pnpm', ['test:e2e:ci'], {\n      cwd: path.resolve(playgroundDir, projectName),\n      stdio: 'inherit',\n      shell: true\n    })\n    if (e2eTestResult.status !== 0) {\n      throw new Error(`E2E tests failed in ${projectName}`)\n    }\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["主要对生成快照时生成的在 ",(0,s.jsx)(n.code,{children:"playground"})," 32个文件夹，进行如下测试。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"pnpm test:unit:ci\n\npnpm test:e2e:ci\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"6-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-总结",children:"#"}),"6. 总结"]}),"\n",(0,s.jsxs)(n.p,{children:["我们使用了快如闪电般的",(0,s.jsx)(n.code,{children:"npm init vue@next"}),"，学习",(0,s.jsx)(n.code,{children:"npx"}),"命令了。学会了其原理。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm init vue@next => npx create-vue@next\n"})}),"\n",(0,s.jsxs)(n.p,{children:["快如闪电的原因在于依赖的很少。很多都是自己来实现。如：",(0,s.jsx)(n.code,{children:"Vue-CLI"}),"中 ",(0,s.jsx)(n.code,{children:"vue create vue-project"})," 命令是用官方的",(0,s.jsx)(n.code,{children:"npm"}),"包",(0,s.jsx)(n.a,{href:"https://github.com/npm/validate-npm-package-name",rel:"noopener noreferrer",target:"_blank",children:"validate-npm-package-name"}),"，删除文件夹一般都是使用 ",(0,s.jsx)(n.a,{href:"https://github.com/isaacs/rimraf",rel:"noopener noreferrer",target:"_blank",children:"rimraf"}),"。而 ",(0,s.jsx)(n.code,{children:"create-vue"})," 是自己实现",(0,s.jsx)(n.code,{children:"emptyDir"}),"和",(0,s.jsx)(n.code,{children:"isValidPackageName"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["非常建议读者朋友按照文中方法使用",(0,s.jsx)(n.code,{children:"VSCode"}),"调试 ",(0,s.jsx)(n.code,{children:"create-vue"})," 源码。源码中还有很多细节文中由于篇幅有限，未全面展开讲述。"]}),"\n",(0,s.jsx)(n.p,{children:"学完本文，可以为自己或者公司创建类似初始化脚手架。"}),"\n",(0,s.jsxs)(n.p,{children:["目前版本是",(0,s.jsx)(n.code,{children:"3.0.0-beta.6"}),"。我们持续关注学习它。除了create-vue 之外，我们还可以看看",(0,s.jsx)(n.a,{href:"https://github.com/vitejs/vite/tree/main/packages/create-vite",rel:"noopener noreferrer",target:"_blank",children:"create-vite"}),"、",(0,s.jsx)(n.a,{href:"https://github.com/umijs/create-umi",rel:"noopener noreferrer",target:"_blank",children:"create-umi"})," 的源码实现。"]}),"\n",(0,s.jsxs)(n.p,{children:["最后欢迎加我微信 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,s.jsx)(n.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，大家一起学习源码，共同进步。"]}),"\n",(0,s.jsxs)(n.h2,{id:"7-参考资料",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-参考资料",children:"#"}),"7. 参考资料"]}),"\n",(0,s.jsxs)(n.p,{children:["发现 create-vue 时打算写文章加入到",(0,s.jsx)(n.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:"源码共读"}),"计划中，大家一起学习。而源码共读群里小伙伴",(0,s.jsx)(n.a,{href:"https://github.com/upupming/frontend-learning-map",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"upupming"})}),"比我先写完文章。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650757588&idx=1&sn=c6fb11eb09d5820957bcbece98a24087&chksm=88665a58bf11d34e569a4e1f6de101f8fa7637a620d5d9f7944cb47f41c5c47ab6920920c4ce&token=633613769&lang=zh_CN#rd",rel:"noopener noreferrer",target:"_blank",children:"@upupming  vue-cli 将被 create-vue 替代？初始化基于 vite 的 vue3 项目为何如此简单？"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(o,e)})):o(e)}let h=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["create-vue%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-使用-npm-init-vuenext-初始化-vue3-项目",text:"2. 使用 npm init vue@next 初始化 vue3 项目",depth:2},{id:"21-npm-init--npx",text:"2.1 npm init && npx",depth:3},{id:"3-配置环境调试源码",text:"3. 配置环境调试源码",depth:2},{id:"31-克隆-create-vue-项目",text:"3.1 克隆 create-vue 项目",depth:3},{id:"32-packagejson-分析",text:"3.2 package.json 分析",depth:3},{id:"33-生成快照-snapshotjs",text:"3.3 生成快照 snapshot.js",depth:3},{id:"4-调试-indexjs-主流程",text:"4. 调试 index.js 主流程",depth:2},{id:"41-解析命令行参数",text:"4.1 解析命令行参数",depth:3},{id:"42-如果设置了-feature-flags-跳过-prompts-询问",text:"4.2 如果设置了 feature flags 跳过 prompts 询问",depth:3},{id:"43-交互式询问一些配置",text:"4.3 交互式询问一些配置",depth:3},{id:"44-初始化询问用户给到的参数同时也会给到默认值",text:"4.4 初始化询问用户给到的参数，同时也会给到默认值",depth:3},{id:"45-根据模板文件生成初始化项目所需文件",text:"4.5 根据模板文件生成初始化项目所需文件",depth:3},{id:"46-渲染生成代码模板",text:"4.6 渲染生成代码模板",depth:3},{id:"47-如果配置了需要-ts",text:"4.7 如果配置了需要 ts",depth:3},{id:"48-配置了不需要测试",text:"4.8 配置了不需要测试",depth:3},{id:"49-根据使用的-npm--yarn--pnpm-生成readmemd-文件给出运行项目的提示",text:"4.9 根据使用的 npm / yarn / pnpm 生成README.md 文件，给出运行项目的提示",depth:3},{id:"5-npm-run-test--node-testjs-测试",text:"5. npm run test => node test.js 测试",depth:2},{id:"6-总结",text:"6. 总结",depth:2},{id:"7-参考资料",text:"7. 参考资料",depth:2}],title:"Vue 团队公开快如闪电的全新脚手架工具 create-vue，未来将替代 Vue-CLI，才300余行代码，学它！",headingTitle:"Vue 团队公开快如闪电的全新脚手架工具 create-vue，未来将替代 Vue-CLI，才300余行代码，学它！",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,r){r.d(n,{Z:()=>d});var s=r(52676),t=r(75271),a=r(92815);r(18544);let c={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function i(e,n,r){let s=Object.keys(c).includes(n)?n:r;return c[s](e)}let d=e=>{let{defaultLocale:n="en-US"}=e,r=(0,a.Vi)().page.readingTimeData,c=(0,a.Jr)(),d=(0,a.e7)(),[o,l]=(0,t.useState)(i(r,c,n));return(0,t.useEffect)(()=>{l(i(r,c,n))},[c,r]),(0,s.jsx)("span",{"data-dark":String(d),className:"rp-reading-time",children:o})}}}]);