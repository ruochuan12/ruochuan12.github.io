"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["2670"],{60332:function(n,e,r){n.exports=r.p+"static/image/wechat-official-accounts-mini.44481959.png"},23254:function(n,e,r){r.r(e),r.d(e,{default:()=>a});var t=r(52676),o=r(40453),i=r(20713);let s=r.p+"static/image/demo1.39fb1cdb.png";var c=r(60332);function d(n){let e=Object.assign({h1:"h1",a:"a",blockquote:"blockquote",p:"p",code:"code",h2:"h2",pre:"pre",strong:"strong",img:"img",h3:"h3"},(0,o.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"面试官问能否模拟实现js的bind方法",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#面试官问能否模拟实现js的bind方法",children:"#"}),"面试官问：能否模拟实现JS的bind方法"]}),"\n",(0,t.jsx)(i.Z,{defaultLocale:"zh-CN"}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.code,{children:"写于2018年11月21日"})}),"\n"]}),"\n",(0,t.jsxs)(e.h2,{id:"前言",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#前言",children:"#"}),"前言"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["大家好，我是",(0,t.jsx)(e.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。我倾力持续组织了一年",(0,t.jsx)(e.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,t.jsxs)(e.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,t.jsx)(e.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,t.jsx)(e.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（4.1k+人）第一的专栏，写有20余篇源码文章。"]}),"\n"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["这是面试官问系列的第二篇，旨在帮助读者提升",(0,t.jsx)(e.code,{children:"JS"}),"基础知识，包含",(0,t.jsx)(e.code,{children:"new、call、apply、this、继承"}),"相关知识。","\n",(0,t.jsx)(e.code,{children:"面试官问系列"}),"文章如下：感兴趣的读者可以点击阅读。","\n1.",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5bde7c926fb9a049f66b8b52",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的new操作符"}),"\n2.",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5bec4183f265da616b1044d7",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的bind方法"}),"\n3.",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5bf6c79bf265da6142738b29",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的call和apply方法"}),"\n4.",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5c0c87b35188252e8966c78a",rel:"noopener noreferrer",target:"_blank",children:"面试官问：JS的this指向"}),"\n5.",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5c433e216fb9a049c15f841b",rel:"noopener noreferrer",target:"_blank",children:"面试官问：JS的继承"})]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["用过",(0,t.jsx)(e.code,{children:"React"}),"的同学都知道，经常会使用",(0,t.jsx)(e.code,{children:"bind"}),"来绑定",(0,t.jsx)(e.code,{children:"this"}),"。"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"import React, { Component } from 'react';\nclass TodoItem extends Component{\n    constructor(props){\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n    handleClick(){\n        console.log('handleClick');\n    }\n    render(){\n        return  (\n            <div onClick={this.handleClick}>点击</div>\n        );\n    };\n}\nexport default TodoItem;\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsxs)(e.strong,{children:["那么面试官可能会问是否想过",(0,t.jsx)(e.code,{children:"bind"}),"到底做了什么，怎么模拟实现呢。"]})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["附上之前写文章写过的一段话：已经有很多模拟实现",(0,t.jsx)(e.code,{children:"bind"}),"的文章，为什么自己还要写一遍呢。学习就好比是座大山，人们沿着不同的路登山，分享着自己看到的风景。你不一定能看到别人看到的风景，体会到别人的心情。只有自己去登山，才能看到不一样的风景，体会才更加深刻。"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["先看一下",(0,t.jsx)(e.code,{children:"bind"}),"是什么。从上面的",(0,t.jsx)(e.code,{children:"React"}),"代码中，可以看出",(0,t.jsx)(e.code,{children:"bind"}),"执行后是函数，并且每个函数都可以执行调用它。\n眼见为实，耳听为虚。读者可以在控制台一步步点开",(0,t.jsx)(e.strong,{children:"例子1"}),"中的",(0,t.jsx)(e.code,{children:"obj"}),":"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"var obj = {};\nconsole.log(obj);\nconsole.log(typeof Function.prototype.bind); // function\nconsole.log(typeof Function.prototype.bind());  // function\nconsole.log(Function.prototype.bind.name);  // bind\nconsole.log(Function.prototype.bind().name);  // bound\n"})}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Function.prototype.bind",src:s})}),"\n",(0,t.jsxs)(e.h3,{id:"因此可以得出结论1",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#因此可以得出结论1",children:"#"}),"因此可以得出结论1："]}),"\n",(0,t.jsxs)(e.p,{children:["1、",(0,t.jsx)(e.code,{children:"bind"}),"是",(0,t.jsx)(e.code,{children:"Functoin"}),"原型链中",(0,t.jsx)(e.code,{children:"Function.prototype"}),"的一个属性，每个函数都可以调用它。","\n2、",(0,t.jsx)(e.code,{children:"bind"}),"本身是一个函数名为",(0,t.jsx)(e.code,{children:"bind"}),"的函数，返回值也是函数，函数名是",(0,t.jsx)(e.code,{children:"bound "}),"。（打出来就是",(0,t.jsx)(e.code,{children:"bound加上一个空格"}),"）。\n知道了",(0,t.jsx)(e.code,{children:"bind"}),"是函数，就可以传参，而且返回值",(0,t.jsx)(e.code,{children:"'bound '"}),"也是函数，也可以传参，就很容易写出",(0,t.jsx)(e.strong,{children:"例子2"}),"：","\n后文统一 ",(0,t.jsx)(e.code,{children:"bound"})," 指原函数",(0,t.jsx)(e.code,{children:"original"})," ",(0,t.jsx)(e.code,{children:"bind"}),"之后返回的函数，便于说明。"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"var obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log(this.name);\n    console.log([a, b]);\n    return false;\n}\nvar bound = original.bind(obj, 1);\nvar boundResult = bound(2); // '若川', [1, 2]\nconsole.log(boundResult); // false\nconsole.log(original.bind.name); // 'bind'\nconsole.log(original.bind.length); // 1\nconsole.log(original.bind().length); // 2 返回original函数的形参个数\nconsole.log(bound.name); // 'bound original'\nconsole.log((function(){}).bind().name); // 'bound '\nconsole.log((function(){}).bind().length); // 0\n"})}),"\n",(0,t.jsxs)(e.h3,{id:"由此可以得出结论2",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#由此可以得出结论2",children:"#"}),"由此可以得出结论2："]}),"\n",(0,t.jsxs)(e.p,{children:["1、调用",(0,t.jsx)(e.code,{children:"bind"}),"的函数中的",(0,t.jsx)(e.code,{children:"this"}),"指向",(0,t.jsx)(e.code,{children:"bind()"}),"函数的第一个参数。"]}),"\n",(0,t.jsxs)(e.p,{children:["2、传给",(0,t.jsx)(e.code,{children:"bind()"}),"的其他参数接收处理了，",(0,t.jsx)(e.code,{children:"bind()"}),"之后返回的函数的参数也接收处理了，也就是说合并处理了。"]}),"\n",(0,t.jsxs)(e.p,{children:["3、并且",(0,t.jsx)(e.code,{children:"bind()"}),"后的",(0,t.jsx)(e.code,{children:"name"}),"为",(0,t.jsx)(e.code,{children:"bound + 空格 + 调用bind的函数名"}),"。如果是匿名函数则是",(0,t.jsx)(e.code,{children:"bound + 空格"}),"。"]}),"\n",(0,t.jsxs)(e.p,{children:["4、",(0,t.jsx)(e.code,{children:"bind"}),"后的返回值函数，执行后返回值是原函数（",(0,t.jsx)(e.code,{children:"original"}),"）的返回值。"]}),"\n",(0,t.jsxs)(e.p,{children:["5、",(0,t.jsx)(e.code,{children:"bind"}),"函数形参（即函数的",(0,t.jsx)(e.code,{children:"length"}),"）是",(0,t.jsx)(e.code,{children:"1"}),"。",(0,t.jsx)(e.code,{children:"bind"}),"后返回的",(0,t.jsx)(e.code,{children:"bound"}),"函数形参不定，根据绑定的函数原函数（",(0,t.jsx)(e.code,{children:"original"}),"）形参个数确定。"]}),"\n",(0,t.jsxs)(e.p,{children:["根据结论2：我们就可以简单模拟实现一个简版",(0,t.jsx)(e.code,{children:"bindFn"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"// 第一版 修改this指向，合并参数\nFunction.prototype.bindFn = function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + 'must be a function');\n    }\n    // 存储函数本身\n    var self = this;\n    // 去除thisArg的其他参数 转成数组\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        // bind返回的函数 的参数转成数组\n        var boundArgs = [].slice.call(arguments);\n        // apply修改this指向，把两个函数的参数合并传给self函数，并执行self函数，返回执行结果\n        return self.apply(thisArg, args.concat(boundArgs));\n    }\n    return bound;\n}\n// 测试\nvar obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log(this.name);\n    console.log([a, b]);\n}\nvar bound = original.bindFn(obj, 1);\nbound(2); // '若川', [1, 2]\n"})}),"\n",(0,t.jsxs)(e.p,{children:["如果面试官看到你答到这里，估计对你的印象60、70分应该是会有的。\n但我们知道函数是可以用",(0,t.jsx)(e.code,{children:"new"}),"来实例化的。那么",(0,t.jsx)(e.code,{children:"bind()"}),"返回值函数会是什么表现呢。","\n接下来看",(0,t.jsx)(e.strong,{children:"例子3"}),"："]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"var obj = {\n    name: '若川',\n};\nfunction original(a, b){\n    console.log('this', this); // original\xa0{}\n    console.log('typeof this', typeof this); // object\n    this.name = b;\n    console.log('name', this.name); // 2\n    console.log('this', this);  // original\xa0{name: 2}\n    console.log([a, b]); // 1, 2\n}\nvar bound = original.bind(obj, 1);\nvar newBoundResult = new bound(2);\nconsole.log(newBoundResult, 'newBoundResult'); // original\xa0{name: 2}\n"})}),"\n",(0,t.jsxs)(e.p,{children:["从",(0,t.jsx)(e.strong,{children:"例子3"}),"种可以看出",(0,t.jsx)(e.code,{children:"this"}),"指向了",(0,t.jsx)(e.code,{children:"new bound()"}),"生成的新对象。"]}),"\n",(0,t.jsxs)(e.h3,{id:"可以分析得出结论3",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#可以分析得出结论3",children:"#"}),"可以分析得出结论3："]}),"\n",(0,t.jsxs)(e.p,{children:["1、",(0,t.jsx)(e.code,{children:"bind"}),"原先指向",(0,t.jsx)(e.code,{children:"obj"}),"的失效了，其他参数有效。"]}),"\n",(0,t.jsxs)(e.p,{children:["2、",(0,t.jsx)(e.code,{children:"new bound"}),"的返回值是以",(0,t.jsx)(e.code,{children:"original"}),"原函数构造器生成的新对象。",(0,t.jsx)(e.code,{children:"original"}),"原函数的",(0,t.jsx)(e.code,{children:"this"}),"指向的就是这个新对象。\n另外前不久写过一篇文章：",(0,t.jsx)(e.a,{href:"https://juejin.im/post/5bde7c926fb9a049f66b8b52",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的new操作符"}),"。简单摘要：\n",(0,t.jsx)(e.strong,{children:"new做了什么："})]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["1.创建了一个全新的对象。","\n2.这个对象会被执行",(0,t.jsx)(e.code,{children:"[[Prototype]]"}),"（也就是",(0,t.jsx)(e.code,{children:"__proto__"}),"）链接。","\n3.生成的新对象会绑定到函数调用的this。","\n4.通过",(0,t.jsx)(e.code,{children:"new"}),"创建的每个对象将最终被",(0,t.jsx)(e.code,{children:"[[Prototype]]"}),"链接到这个函数的",(0,t.jsx)(e.code,{children:"prototype"}),"对象上。","\n5.如果函数没有返回对象类型",(0,t.jsx)(e.code,{children:"Object"}),"(包含",(0,t.jsx)(e.code,{children:"Functoin"}),", ",(0,t.jsx)(e.code,{children:"Array"}),", ",(0,t.jsx)(e.code,{children:"Date"}),", ",(0,t.jsx)(e.code,{children:"RegExg"}),", ",(0,t.jsx)(e.code,{children:"Error"}),")，那么",(0,t.jsx)(e.code,{children:"new"}),"表达式中的函数调用会自动返回这个新的对象。"]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["所以相当于",(0,t.jsx)(e.code,{children:"new"}),"调用时，",(0,t.jsx)(e.code,{children:"bind"}),"的返回值函数",(0,t.jsx)(e.code,{children:"bound"}),"内部要模拟实现",(0,t.jsx)(e.code,{children:"new"}),"实现的操作。\n话不多说，直接上代码。"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"// 第三版 实现new调用\nFunction.prototype.bindFn = function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + ' must be a function');\n    }\n    // 存储调用bind的函数本身\n    var self = this;\n    // 去除thisArg的其他参数 转成数组\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        // bind返回的函数 的参数转成数组\n        var boundArgs = [].slice.call(arguments);\n        var finalArgs = args.concat(boundArgs);\n        // new 调用时，其实this instanceof bound判断也不是很准确。es6 new.target就是解决这一问题的。\n        if(this instanceof bound){\n            // 这里是实现上文描述的 new 的第 1, 2, 4 步\n            // 1.创建一个全新的对象\n            // 2.并且执行[[Prototype]]链接\n            // 4.通过`new`创建的每个对象将最终被`[[Prototype]]`链接到这个函数的`prototype`对象上。\n            // self可能是ES6的箭头函数，没有prototype，所以就没必要再指向做prototype操作。\n            if(self.prototype){\n                // ES5 提供的方案 Object.create()\n                // bound.prototype = Object.create(self.prototype);\n                // 但 既然是模拟ES5的bind，那浏览器也基本没有实现Object.create()\n                // 所以采用 MDN ployfill方案 https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n                function Empty(){}\n                Empty.prototype = self.prototype;\n                bound.prototype = new Empty();\n            }\n            // 这里是实现上文描述的 new 的第 3 步\n            // 3.生成的新对象会绑定到函数调用的`this`。\n            var result = self.apply(this, finalArgs);\n            // 这里是实现上文描述的 new 的第 5 步\n            // 5.如果函数没有返回对象类型`Object`(包含`Functoin`, `Array`, `Date`, `RegExg`, `Error`)，\n            // 那么`new`表达式中的函数调用会自动返回这个新的对象。\n            var isObject = typeof result === 'object' && result !== null;\n            var isFunction = typeof result === 'function';\n            if(isObject || isFunction){\n                return result;\n            }\n            return this;\n        }\n        else{\n            // apply修改this指向，把两个函数的参数合并传给self函数，并执行self函数，返回执行结果\n            return self.apply(thisArg, finalArgs);\n        }\n    };\n    return bound;\n}\n"})}),"\n",(0,t.jsxs)(e.p,{children:["面试官看到这样的实现代码，基本就是满分了，心里独白：这小伙子/小姑娘不错啊。不过可能还会问",(0,t.jsx)(e.code,{children:"this instanceof bound"}),"不准确问题。\n上文注释中提到",(0,t.jsx)(e.code,{children:"this instanceof bound"}),"也不是很准确，",(0,t.jsx)(e.code,{children:"ES6 new.target"}),"很好的解决这一问题，我们举个",(0,t.jsx)(e.strong,{children:"例子4"}),":"]}),"\n",(0,t.jsxs)(e.h3,{id:"instanceof-不准确es6-newtarget很好的解决这一问题",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#instanceof-不准确es6-newtarget很好的解决这一问题",children:"#"}),(0,t.jsx)(e.code,{children:"instanceof"})," 不准确，",(0,t.jsx)(e.code,{children:"ES6 new.target"}),"很好的解决这一问题"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"function Student(name){\n    if(this instanceof Student){\n        this.name = name;\n        console.log('name', name);\n    }\n    else{\n        throw new Error('必须通过new关键字来调用Student。');\n    }\n}\nvar student = new Student('若');\nvar notAStudent = Student.call(student, '川'); // 不抛出错误，且执行了。\nconsole.log(student, 'student', notAStudent, 'notAStudent');\n\nfunction Student2(name){\n    if(typeof new.target !== 'undefined'){\n        this.name = name;\n        console.log('name', name);\n    }\n    else{\n        throw new Error('必须通过new关键字来调用Student2。');\n    }\n}\nvar student2 = new Student2('若');\nvar notAStudent2 = Student2.call(student2, '川');\nconsole.log(student2, 'student2', notAStudent2, 'notAStudent2'); // 抛出错误\n"})}),"\n",(0,t.jsxs)(e.p,{children:["细心的同学可能会发现了这版本的代码没有实现",(0,t.jsx)(e.code,{children:"bind"}),"后的",(0,t.jsx)(e.code,{children:"bound"}),"函数的",(0,t.jsx)(e.code,{children:"name"}),(0,t.jsx)(e.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name",rel:"noopener noreferrer",target:"_blank",children:"MDN Function.name"}),"和",(0,t.jsx)(e.code,{children:"length"}),(0,t.jsx)(e.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length",rel:"noopener noreferrer",target:"_blank",children:"MDN Function.length"}),"。面试官可能也发现了这一点继续追问，如何实现，或者问是否看过",(0,t.jsxs)(e.a,{href:"https://github.com/es-shims/es5-shim/blob/master/es5-shim.js#L201-L335",rel:"noopener noreferrer",target:"_blank",children:[(0,t.jsx)(e.code,{children:"es5-shim"}),"的源码实现",(0,t.jsx)(e.code,{children:"L201-L335"})]}),"。如果不限",(0,t.jsx)(e.code,{children:"ES"}),"版本。其实可以用",(0,t.jsx)(e.code,{children:"ES5"}),"的",(0,t.jsx)(e.code,{children:"Object.defineProperties"}),"来实现。"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"Object.defineProperties(bound, {\n    'length': {\n        value: self.length,\n    },\n    'name': {\n        value: 'bound ' + self.name,\n    }\n});\n"})}),"\n",(0,t.jsxs)(e.h3,{id:"es5-shim的源码实现bind",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#es5-shim的源码实现bind",children:"#"}),(0,t.jsx)(e.code,{children:"es5-shim"}),"的源码实现",(0,t.jsx)(e.code,{children:"bind"})]}),"\n",(0,t.jsx)(e.p,{children:"直接附上源码（有删减注释和部分修改等）"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"var $Array = Array;\nvar ArrayPrototype = $Array.prototype;\nvar $Object = Object;\nvar array_push = ArrayPrototype.push;\nvar array_slice = ArrayPrototype.slice;\nvar array_join = ArrayPrototype.join;\nvar array_concat = ArrayPrototype.concat;\nvar $Function = Function;\nvar FunctionPrototype = $Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar max = Math.max;\n// 简版 源码更复杂些。\nvar isCallable = function isCallable(value){\n    if(typeof value !== 'function'){\n        return false;\n    }\n    return true;\n};\nvar Empty = function Empty() {};\n// 源码是 defineProperties\n// 源码是bind笔者改成bindFn便于测试\nFunctionPrototype.bindFn = function bind(that) {\n    var target = this;\n    if (!isCallable(target)) {\n        throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n    }\n    var args = array_slice.call(arguments, 1);\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = apply.call(\n                target,\n                this,\n                array_concat.call(args, array_slice.call(arguments))\n            );\n            if ($Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return apply.call(\n                target,\n                that,\n                array_concat.call(args, array_slice.call(arguments))\n            );\n        }\n    };\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        array_push.call(boundArgs, '$' + i);\n    }\n    // 这里是Function构造方式生成形参length $1, $2, $3...\n    bound = $Function('binder', 'return function (' + array_join.call(boundArgs, ',') + '){ return binder.apply(this, arguments); }')(binder);\n\n    if (target.prototype) {\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n    return bound;\n};\n"})}),"\n",(0,t.jsxs)(e.p,{children:["你说出",(0,t.jsx)(e.code,{children:"es5-shim"}),"源码",(0,t.jsx)(e.code,{children:"bind"}),"实现，感慨这代码真是高效、严谨。面试官心里独白可能是：你就是我要找的人，薪酬福利你可以和",(0,t.jsx)(e.code,{children:"HR"}),"去谈下。"]}),"\n",(0,t.jsxs)(e.h2,{id:"最后总结一下",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#最后总结一下",children:"#"}),"最后总结一下"]}),"\n",(0,t.jsxs)(e.p,{children:["1、",(0,t.jsx)(e.code,{children:"bind"}),"是",(0,t.jsx)(e.code,{children:"Function"}),"原型链中的",(0,t.jsx)(e.code,{children:"Function.prototype"}),"的一个属性，它是一个函数，修改",(0,t.jsx)(e.code,{children:"this"}),"指向，合并参数传递给原函数，返回值是一个新的函数。","\n2、",(0,t.jsx)(e.code,{children:"bind"}),"返回的函数可以通过",(0,t.jsx)(e.code,{children:"new"}),"调用，这时提供的",(0,t.jsx)(e.code,{children:"this"}),"的参数被忽略，指向了",(0,t.jsx)(e.code,{children:"new"}),"生成的全新对象。内部模拟实现了",(0,t.jsx)(e.code,{children:"new"}),"操作符。","\n3、",(0,t.jsx)(e.code,{children:"es5-shim"}),"源码模拟实现",(0,t.jsx)(e.code,{children:"bind"}),"时用",(0,t.jsx)(e.code,{children:"Function"}),"实现了",(0,t.jsx)(e.code,{children:"length"}),"。","\n事实上，平时其实很少需要使用自己实现的投入到生成环境中。但面试官通过这个面试题能考察很多知识。比如",(0,t.jsx)(e.code,{children:"this"}),"指向，原型链，闭包，函数等知识，可以扩展很多。","\n读者发现有不妥或可改善之处，欢迎指出。另外觉得写得不错，可以点个赞，也是对笔者的一种支持。"]}),"\n",(0,t.jsxs)(e.p,{children:["文章中的例子和测试代码放在",(0,t.jsx)(e.code,{children:"github"}),"中",(0,t.jsx)(e.a,{href:"https://github.com/ruochuan12/html5/tree/gh-pages/JS%E7%9B%B8%E5%85%B3/%E5%87%BD%E6%95%B0/bind%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0",rel:"noopener noreferrer",target:"_blank",children:"bind模拟实现 github"}),"。",(0,t.jsx)(e.a,{href:"http://ruochuan12.github.io/html5/JS%E7%9B%B8%E5%85%B3/%E5%87%BD%E6%95%B0/bind%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/bind-0.html",rel:"noopener noreferrer",target:"_blank",children:"bind模拟实现 预览地址"})," ",(0,t.jsx)(e.code,{children:"F12"}),"看控制台输出，结合",(0,t.jsx)(e.code,{children:"source"}),"面板查看效果更佳。"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"// 最终版 删除注释 详细注释版请看上文\nFunction.prototype.bind = Function.prototype.bind || function bind(thisArg){\n    if(typeof this !== 'function'){\n        throw new TypeError(this + ' must be a function');\n    }\n    var self = this;\n    var args = [].slice.call(arguments, 1);\n    var bound = function(){\n        var boundArgs = [].slice.call(arguments);\n        var finalArgs = args.concat(boundArgs);\n        if(this instanceof bound){\n            if(self.prototype){\n                function Empty(){}\n                Empty.prototype = self.prototype;\n                bound.prototype = new Empty();\n            }\n            var result = self.apply(this, finalArgs);\n            var isObject = typeof result === 'object' && result !== null;\n            var isFunction = typeof result === 'function';\n            if(isObject || isFunction){\n                return result;\n            }\n            return this;\n        }\n        else{\n            return self.apply(thisArg, finalArgs);\n        }\n    };\n    return bound;\n}\n"})}),"\n",(0,t.jsxs)(e.h2,{id:"参考",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#参考",children:"#"}),"参考"]}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsxs)(e.a,{href:"https://oshotokill.gitbooks.io/understandinges6-simplified-chinese/content/chapter_3.html",rel:"noopener noreferrer",target:"_blank",children:["OshotOkill翻译的 深入理解",(0,t.jsx)(e.code,{children:"ES6"})," 简体中文版 - 第三章 函数"]}),"（虽然笔者是看的纸质书籍，但推荐下这本在线的书）","\n",(0,t.jsx)(e.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",rel:"noopener noreferrer",target:"_blank",children:"MDN Function.prototype.bind"}),"\n",(0,t.jsx)(e.a,{href:"https://juejin.im/post/59093b1fa0bb9f006517b906",rel:"noopener noreferrer",target:"_blank",children:"冴羽: JavaScript深入之bind的模拟实现"}),"\n",(0,t.jsx)(e.a,{href:"https://www.jianshu.com/p/6958f99db769",rel:"noopener noreferrer",target:"_blank",children:"《react状态管理与同构实战》侯策：从一道面试题，到“我可能看了假源码”"})]}),"\n",(0,t.jsxs)(e.h2,{id:"关于",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#关于",children:"#"}),"关于"]}),"\n",(0,t.jsxs)(e.p,{children:["作者：常以",(0,t.jsx)(e.strong,{children:"若川"}),"为名混迹于江湖。前端路上 | PPT爱好者 | 所知甚少，唯善学。","\n",(0,t.jsx)(e.a,{href:"https://ruochuan12.github.io/",rel:"noopener noreferrer",target:"_blank",children:"个人博客"}),"\n",(0,t.jsx)(e.a,{href:"https://juejin.im/user/1415826704971918/posts",rel:"noopener noreferrer",target:"_blank",children:"掘金专栏"}),"，欢迎关注~","\n",(0,t.jsxs)(e.a,{href:"https://segmentfault.com/blog/lxchuan12",rel:"noopener noreferrer",target:"_blank",children:[(0,t.jsx)(e.code,{children:"segmentfault"}),"前端视野专栏"]}),"，开通了",(0,t.jsx)(e.strong,{children:"前端视野"}),"专栏，欢迎关注~","\n",(0,t.jsx)(e.a,{href:"https://zhuanlan.zhihu.com/lxchuan12",rel:"noopener noreferrer",target:"_blank",children:"知乎前端视野专栏"}),"，开通了",(0,t.jsx)(e.strong,{children:"前端视野"}),"专栏，欢迎关注~","\n",(0,t.jsx)(e.a,{href:"https://github.com/ruochuan12/blog",rel:"noopener noreferrer",target:"_blank",children:"github blog"}),"，相关源码和资源都放在这里，求个",(0,t.jsx)(e.code,{children:"star"}),"^_^~"]}),"\n",(0,t.jsxs)(e.h2,{id:"微信公众号--若川视野",children:[(0,t.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#微信公众号--若川视野",children:"#"}),"微信公众号  若川视野"]}),"\n",(0,t.jsxs)(e.p,{children:["可能比较有趣的微信公众号，长按扫码关注。也可以加微信 ",(0,t.jsx)(e.code,{children:"ruochuan12"}),"，注明来源，拉您进【前端视野交流群】。"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"若川视野",src:c})})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(d,n)})):d(n)}let a=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["js-implement-bind%2Findex.md"]={toc:[{id:"前言",text:"前言",depth:2},{id:"因此可以得出结论1",text:"因此可以得出结论1：",depth:3},{id:"由此可以得出结论2",text:"由此可以得出结论2：",depth:3},{id:"可以分析得出结论3",text:"可以分析得出结论3：",depth:3},{id:"instanceof-不准确es6-newtarget很好的解决这一问题",text:"`instanceof` 不准确，`ES6 new.target`很好的解决这一问题",depth:3},{id:"es5-shim的源码实现bind",text:"`es5-shim`的源码实现`bind`",depth:3},{id:"最后总结一下",text:"最后总结一下",depth:2},{id:"参考",text:"参考",depth:2},{id:"关于",text:"关于",depth:2},{id:"微信公众号--若川视野",text:"微信公众号  若川视野",depth:2}],title:"面试官问：能否模拟实现JS的bind方法",headingTitle:"面试官问：能否模拟实现JS的bind方法",frontmatter:{}}},20713:function(n,e,r){r.d(e,{Z:()=>d});var t=r(52676),o=r(75271),i=r(92815);r(18544);let s={"zh-CN":n=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${n.minutes>=1?`${Math.ceil(n.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function c(n,e,r){let t=Object.keys(s).includes(e)?e:r;return s[t](n)}let d=n=>{let{defaultLocale:e="en-US"}=n,r=(0,i.Vi)().page.readingTimeData,s=(0,i.Jr)(),d=(0,i.e7)(),[l,a]=(0,o.useState)(c(r,s,e));return(0,o.useEffect)(()=>{a(c(r,s,e))},[s,r]),(0,t.jsx)("span",{"data-dark":String(d),className:"rp-reading-time",children:l})}}}]);