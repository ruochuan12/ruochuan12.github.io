"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["2795"],{37513:function(e,n,t){t.r(n),t.d(n,{default:()=>i});var s=t(52676),r=t(40453),o=t(20713);function c(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",blockquote:"blockquote",h3:"h3",ol:"ol",li:"li",pre:"pre",img:"img",h4:"h4",strong:"strong",hr:"hr"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"自从学了-react-use-源码我写自定义-react-hooks-越来越顺了",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#自从学了-react-use-源码我写自定义-react-hooks-越来越顺了",children:"#"}),"自从学了 react-use 源码，我写自定义 React Hooks 越来越顺了~"]}),"\n",(0,s.jsx)(o.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.p,{children:["大家好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。我倾力持续组织了一年多",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（4.7k+人）第一的专栏，写有20余篇源码文章。"]}),"\n",(0,s.jsxs)(n.p,{children:["最近 ",(0,s.jsx)(n.code,{children:"React"})," 出了 ",(0,s.jsx)(n.a,{href:"https://react.dev",rel:"noopener noreferrer",target:"_blank",children:"新文档 react.dev"}),"，",(0,s.jsx)(n.a,{href:"https://zh-hans.react.dev/",rel:"noopener noreferrer",target:"_blank",children:"新中文文档 zh-hans.react.dev"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["现在用 ",(0,s.jsx)(n.code,{children:"react"})," 开发离不开各种 ",(0,s.jsx)(n.code,{children:"hooks"}),"。学习各种 ",(0,s.jsx)(n.code,{children:"hooks"})," 的工具库，有助于我们更好的使用和理解 ",(0,s.jsx)(n.code,{children:"hooks"})," 。前端社区中有活跃的 ",(0,s.jsx)(n.a,{href:"https://ahooks.js.org/zh-CN/",rel:"noopener noreferrer",target:"_blank",children:"ahooks"}),"。不过，这次我们来学习目前 ",(0,s.jsx)(n.code,{children:"36.2k"})," ",(0,s.jsx)(n.code,{children:"star"})," 的 ",(0,s.jsx)(n.a,{href:"https://github.com/streamich/react-use",rel:"noopener noreferrer",target:"_blank",children:"react-use"})," 库。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/",rel:"noopener noreferrer",target:"_blank",children:"react-use 文档"}),"\n是用 ",(0,s.jsx)(n.a,{href:"https://storybook.js.org/",rel:"noopener noreferrer",target:"_blank",children:"storybook"})," 搭建的。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果公司项目需要搭建组件库或者 ",(0,s.jsx)(n.code,{children:"hooks"}),"、工具库等，",(0,s.jsx)(n.a,{href:"https://storybook.js.org/",rel:"noopener noreferrer",target:"_blank",children:"storybook"})," 或许是不错的选择。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/zenghongtu/react-use-chinese/blob/master/README.md",rel:"noopener noreferrer",target:"_blank",children:"react-use 中文翻译仓库"}),"，最后更新是2年前，可能有点老。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"2-环境准备",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-环境准备",children:"#"}),"2. 环境准备"]}),"\n",(0,s.jsxs)(n.p,{children:["看一个开源仓库，第一步一般是看 ",(0,s.jsx)(n.code,{children:"README.md"})," 和 ",(0,s.jsx)(n.code,{children:"contributing.md"})," 贡献文档。第二步的克隆下来。按照贡献指南文档，把项目跑起来。"]}),"\n",(0,s.jsx)(n.p,{children:"贡献文档中有如下文档。"}),"\n",(0,s.jsxs)(n.h3,{id:"21-创建一个新-hook-的步骤",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-创建一个新-hook-的步骤",children:"#"}),"2.1 创建一个新 hook 的步骤"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["创建 ",(0,s.jsx)(n.code,{children:"src/useYourHookName.ts"})," 和 ",(0,s.jsx)(n.code,{children:"stories/useYourHookName.story.tsx"}),"，然后运行 ",(0,s.jsx)(n.code,{children:"yarn start"}),"。"]}),"\n",(0,s.jsxs)(n.li,{children:["创建 ",(0,s.jsx)(n.code,{children:"tests/useYourHookName.test.ts"}),"，运行 ",(0,s.jsx)(n.code,{children:"yarn test:watch"})," 监听测试用例执行。"]}),"\n",(0,s.jsxs)(n.li,{children:["创建 ",(0,s.jsx)(n.code,{children:"docs/useYourHookName.md"})," 文档。"]}),"\n",(0,s.jsxs)(n.li,{children:["在 ",(0,s.jsx)(n.code,{children:"src/index.ts"})," 文件导出你写的 ",(0,s.jsx)(n.code,{children:"hook"}),"，然后添加你的 ",(0,s.jsx)(n.code,{children:"hook"})," 到 ",(0,s.jsx)(n.code,{children:"REAMDE.md"})," 中。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["我们可以得知具体要做什么，新增 ",(0,s.jsx)(n.code,{children:"hook"})," 关联哪些文件。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# 推荐克隆我的仓库\ngit clone https://github.com/ruochuan12/react-use-analysis.git\ncd react-use-analysis/react-use\n# 也可以克隆官方项目\ngit clone https://github.com/streamich/react-use.git\ncd react-use\nyarn install\nyarn start\n"})}),"\n",(0,s.jsxs)(n.p,{children:["克隆项目到本地，安装依赖完成后，执行 ",(0,s.jsx)(n.code,{children:"yarn start"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e150fddb489b4e2299ba7a6ea8723cda~tplv-k3u1fbpfcp-watermark.image?",alt:"命令终端运行 yarn start"})}),"\n",(0,s.jsxs)(n.p,{children:["本地环境打开 ",(0,s.jsx)(n.code,{children:"useEffectOnce"})," ",(0,s.jsx)(n.code,{children:"docs"}),"：",(0,s.jsx)(n.code,{children:"http://localhost:6008/?path=/story/lifecycle-useeffectonce--docs"})]}),"\n",(0,s.jsxs)(n.p,{children:["我们先挑选这个 ",(0,s.jsx)(n.code,{children:"useEffectOnce"})," 简单的 ",(0,s.jsx)(n.code,{children:"hook"})," 来分析。"]}),"\n",(0,s.jsxs)(n.h3,{id:"22-useeffectonce",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-useeffectonce",children:"#"}),"2.2 useEffectOnce"]}),"\n",(0,s.jsxs)(n.h4,{id:"221-react-usesrcuseeffectoncets",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#221-react-usesrcuseeffectoncets",children:"#"}),"2.2.1 react-use/src/useEffectOnce.ts"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// react-use/src/useEffectOnce.ts\nimport { EffectCallback, useEffect } from 'react';\n\n// 源码非常简单，不依赖任何参数的函数。\n\nconst useEffectOnce = (effect: EffectCallback) => {\n  useEffect(effect, []);\n};\n\nexport default useEffectOnce;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们来看测试用例，直接使用测试用例调试 ",(0,s.jsx)(n.code,{children:"useEffectOnce"})," 源码。"]}),"\n",(0,s.jsxs)(n.p,{children:["我之前写过相关文章。可以参考学习。\n",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7212263304394981432",rel:"noopener noreferrer",target:"_blank",children:"你可能不知道测试用例(Vitest)可以调试开源项目(Vue3) 源码"})]}),"\n",(0,s.jsxs)(n.p,{children:["我装了 ",(0,s.jsx)(n.code,{children:"jest"})," 和 ",(0,s.jsx)(n.code,{children:"jest runner"})," ",(0,s.jsx)(n.code,{children:"vscode"})," 插件，装完后测试用例中会直接显示 ",(0,s.jsx)(n.code,{children:"run"}),"、和 ",(0,s.jsx)(n.code,{children:"debug"})," 按钮。还在装了 ",(0,s.jsx)(n.code,{children:"vitest"}),"、",(0,s.jsx)(n.code,{children:"vitest runner"})," ",(0,s.jsx)(n.code,{children:"vscode"})," 插件，装完后测试用例中会直接显示 ",(0,s.jsx)(n.code,{children:"run(vitest)"}),"和 ",(0,s.jsx)(n.code,{children:"debug(vitest)"})," 按钮。"]}),"\n",(0,s.jsx)(n.p,{children:"如下图所示。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/630baff982384ea7863effffbf5bd728~tplv-k3u1fbpfcp-watermark.image?",alt:"runner"})}),"\n",(0,s.jsxs)(n.p,{children:["这个项目使用的是 ",(0,s.jsx)(n.code,{children:"jest"}),"。于是我点击最右侧的 ",(0,s.jsx)(n.code,{children:"debug"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5eededaeee6847cc90aee01ec2516bcb~tplv-k3u1fbpfcp-watermark.image?",alt:"调试 gif 图"})}),"\n",(0,s.jsxs)(n.h4,{id:"222-react-usetestsuseeffectoncetestts",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#222-react-usetestsuseeffectoncetestts",children:"#"}),"2.2.2 react-use/tests/useEffectOnce.test.ts"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// react-use/tests/useEffectOnce.test.ts\nimport { renderHook } from '@testing-library/react-hooks';\nimport { useEffectOnce } from '../src';\n\n// mock 函数\nconst mockEffectCleanup = jest.fn();\nconst mockEffectCallback = jest.fn().mockReturnValue(mockEffectCleanup);\n\nit('should run provided effect only once', () => {\n  const { rerender } = renderHook(() => useEffectOnce(mockEffectCallback));\n  // 只调用一次\n  expect(mockEffectCallback).toHaveBeenCalledTimes(1);\n\n  // 重新渲染时，只调用一次\n  rerender();\n  expect(mockEffectCallback).toHaveBeenCalledTimes(1);\n});\n\nit('should run clean-up provided on unmount', () => {\n  const { unmount } = renderHook(() => useEffectOnce(mockEffectCallback));\n  expect(mockEffectCleanup).not.toHaveBeenCalled();\n\n  unmount();\n  // 卸载时 执行一次\n  expect(mockEffectCleanup).toHaveBeenCalledTimes(1);\n});\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"223-react-usestoriesuseeffectoncestorytsx",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#223-react-usestoriesuseeffectoncestorytsx",children:"#"}),"2.2.3 react-use/stories/useEffectOnce.story.tsx"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"xxx.story.tsx"})," 渲染组件，可以直接操作。",(0,s.jsx)(n.code,{children:"Demo"})," 和 ",(0,s.jsx)(n.code,{children:"docs"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// react-use/stories/useEffectOnce.story.tsx\nimport { storiesOf } from '@storybook/react';\nimport * as React from 'react';\nimport { useEffectOnce } from '../src';\nimport ConsoleStory from './util/ConsoleStory';\nimport ShowDocs from './util/ShowDocs';\n\nconst Demo = () => {\n  useEffectOnce(() => {\n    console.log('Running effect once on mount');\n\n    return () => {\n      console.log('Running clean-up of effect on unmount');\n    };\n  });\n\n  return <ConsoleStory />;\n};\n\nstoriesOf('Lifecycle/useEffectOnce', module)\n  .add('Docs', () => <ShowDocs md={require('../docs/useEffectOnce.md')} />)\n  .add('Demo', () => <Demo />);\n\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"docs/useEffectOnce.md"})," 省略，基本跟测试用例一样。可以说测试用例就是",(0,s.jsx)(n.strong,{children:"活文档"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["接下来我们来看其他的 ",(0,s.jsx)(n.code,{children:"hooks"})," 源码，限于篇幅，主要就讲述源码，不包含测试用例、文档、",(0,s.jsx)(n.code,{children:"story"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"TS"})," 也不会过多描述。如果对TS不太熟悉，推荐学习这个",(0,s.jsx)(n.a,{href:"https://ts.xcatliu.com/",rel:"noopener noreferrer",target:"_blank",children:"《TypeScript 入门教程》"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["我们先来看 ",(0,s.jsx)(n.code,{children:"Sensors"})," 行为部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-sensors-行为",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-sensors-行为",children:"#"}),"3. Sensors 行为"]}),"\n",(0,s.jsxs)(n.h3,{id:"31-useidle",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-useidle",children:"#"}),"3.1 useIdle"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/sensors-useidle--docs",rel:"noopener noreferrer",target:"_blank",children:"useIdle docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/sensors-useidle--demo",rel:"noopener noreferrer",target:"_blank",children:"useIdle demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"tracks whether user is being inactive.\n跟踪用户是否处于非活动状态。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要是：监听用户行为的事件（默认的 ",(0,s.jsx)(n.code,{children:"'mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel'"})," ），指定时间内没有用户操作行为就是非活动状态。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { useEffect, useState } from 'react';\n// 防抖、节流\nimport { throttle } from 'throttle-debounce';\n// 事件解绑和监听函数\nimport { off, on } from './misc/util';\n\n// 监听默认事件\nconst defaultEvents = ['mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel'];\nconst oneMinute = 60e3;\n\nconst useIdle = (\n  ms: number = oneMinute,\n  initialState: boolean = false,\n  events: string[] = defaultEvents\n): boolean => {\n  const [state, setState] = useState<boolean>(initialState);\n\n  useEffect(() => {\n    let mounted = true;\n    let timeout: any;\n    let localState: boolean = state;\n    const set = (newState: boolean) => {\n      if (mounted) {\n        localState = newState;\n        setState(newState);\n      }\n    };\n\n    const onEvent = throttle(50, () => {\n      if (localState) {\n        set(false);\n      }\n\n      clearTimeout(timeout);\n      timeout = setTimeout(() => set(true), ms);\n    });\n    const onVisibility = () => {\n      if (!document.hidden) {\n        onEvent();\n      }\n    };\n\n    for (let i = 0; i < events.length; i++) {\n      on(window, events[i], onEvent);\n    }\n    on(document, 'visibilitychange', onVisibility);\n\n    timeout = setTimeout(() => set(true), ms);\n\n    return () => {\n      mounted = false;\n\n      // 销毁 解绑事件\n      for (let i = 0; i < events.length; i++) {\n        off(window, events[i], onEvent);\n      }\n      off(document, 'visibilitychange', onVisibility);\n    };\n  }, [ms, events]);\n\n  return state;\n};\n\nexport default useIdle;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们接着来看，",(0,s.jsx)(n.code,{children:"useLocation"})," ",(0,s.jsx)(n.code,{children:"hook"}),"。"]}),"\n",(0,s.jsxs)(n.h3,{id:"32-uselocation",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-uselocation",children:"#"}),"3.2 useLocation"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/sensors-uselocation--docs",rel:"noopener noreferrer",target:"_blank",children:"useLocation docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/sensors-uselocation--demo",rel:"noopener noreferrer",target:"_blank",children:"useLocation demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React sensor hook that tracks brower's location."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要获取 ",(0,s.jsx)(n.code,{children:"window.location"})," 等对象信息。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/History_API",rel:"noopener noreferrer",target:"_blank",children:"mdn History API"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wangdoc.com/javascript/bom/history",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师的网道：history"}),"\n",(0,s.jsx)(n.a,{href:"https://wangdoc.com/javascript/bom/location",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师的网道：location"})]}),"\n",(0,s.jsxs)(n.p,{children:["自定义事件 ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/Events/Creating_and_triggering_events",rel:"noopener noreferrer",target:"_blank",children:"mdn 创建和触发 events"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useEffect, useState } from 'react';\n// 判断浏览器\nimport { isBrowser, off, on } from './misc/util';\n\nconst patchHistoryMethod = (method) => {\n  const history = window.history;\n  const original = history[method];\n\n  history[method] = function (state) {\n    // 原先函数\n    const result = original.apply(this, arguments);\n    // 自定义事件 new Event 、 dispatchEvent\n    const event = new Event(method.toLowerCase());\n\n    (event as any).state = state;\n\n    window.dispatchEvent(event);\n\n    return result;\n  };\n};\n\nif (isBrowser) {\n  patchHistoryMethod('pushState');\n  patchHistoryMethod('replaceState');\n}\n// 省略 LocationSensorState 类型\n\nconst useLocationServer = (): LocationSensorState => ({\n  trigger: 'load',\n  length: 1,\n});\n\nconst buildState = (trigger: string) => {\n  const { state, length } = window.history;\n\n  const { hash, host, hostname, href, origin, pathname, port, protocol, search } = window.location;\n\n  return {\n    trigger,\n    state,\n    length,\n    hash,\n    host,\n    hostname,\n    href,\n    origin,\n    pathname,\n    port,\n    protocol,\n    search,\n  };\n};\n\nconst useLocationBrowser = (): LocationSensorState => {\n  const [state, setState] = useState(buildState('load'));\n\n  useEffect(() => {\n    const onPopstate = () => setState(buildState('popstate'));\n    const onPushstate = () => setState(buildState('pushstate'));\n    const onReplacestate = () => setState(buildState('replacestate'));\n\n    on(window, 'popstate', onPopstate);\n    on(window, 'pushstate', onPushstate);\n    on(window, 'replacestate', onReplacestate);\n\n    return () => {\n      off(window, 'popstate', onPopstate);\n      off(window, 'pushstate', onPushstate);\n      off(window, 'replacestate', onReplacestate);\n    };\n  }, []);\n\n  return state;\n};\n\nconst hasEventConstructor = typeof Event === 'function';\n\nexport default isBrowser && hasEventConstructor ? useLocationBrowser : useLocationServer;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["接着我们继续来看 ",(0,s.jsx)(n.code,{children:"State"})," 状态部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"4-state-状态",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-state-状态",children:"#"}),"4. State 状态"]}),"\n",(0,s.jsxs)(n.h3,{id:"41-usefirstmountstate",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-usefirstmountstate",children:"#"}),"4.1 useFirstMountState"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-usefirstmountstate--docs",rel:"noopener noreferrer",target:"_blank",children:"useFirstMountState docs"})," | ",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-usefirstmountstate--demo",rel:"noopener noreferrer",target:"_blank",children:"useFirstMountState demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Returns true if component is just mounted (on first render) and false otherwise.\n若组件刚刚加载（在第一次渲染时），则返回 ",(0,s.jsx)(n.code,{children:"true"}),"，否则返回 ",(0,s.jsx)(n.code,{children:"false"}),"。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useRef } from 'react';\n\nexport function useFirstMountState(): boolean {\n  const isFirst = useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n\n    return true;\n  }\n\n  return isFirst.current;\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"42-useprevious",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-useprevious",children:"#"}),"4.2 usePrevious"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-useprevious--docs",rel:"noopener noreferrer",target:"_blank",children:"usePrevious docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-useprevious--demo",rel:"noopener noreferrer",target:"_blank",children:"usePrevious demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React state hook that returns the previous state as described in the React hooks FAQ.\n保留上一次的状态。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["利用 ",(0,s.jsx)(n.code,{children:"useRef"})," 的不变性。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useEffect, useRef } from 'react';\n\nexport default function usePrevious<T>(state: T): T | undefined {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = state;\n  });\n\n  return ref.current;\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"43-useset",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-useset",children:"#"}),"4.3 useSet"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-useset--docs",rel:"noopener noreferrer",target:"_blank",children:"useSet docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-useset--demo",rel:"noopener noreferrer",target:"_blank",children:"useSet demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React state hook that tracks a Set."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"new Set"})," 的 hooks 用法。\nuseSet 可以用来列表展开、收起等其他场景。\n返回 ",(0,s.jsx)(n.code,{children:"[set ,{add, remove, toggle, reset, has }]"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useCallback, useMemo, useState } from 'react';\n\nexport interface StableActions<K> {\n  add: (key: K) => void;\n  remove: (key: K) => void;\n  toggle: (key: K) => void;\n  reset: () => void;\n}\n\nexport interface Actions<K> extends StableActions<K> {\n  has: (key: K) => boolean;\n}\n\nconst useSet = <K>(initialSet = new Set<K>()): [Set<K>, Actions<K>] => {\n  const [set, setSet] = useState(initialSet);\n\n  const stableActions = useMemo<StableActions<K>>(() => {\n    const add = (item: K) => setSet((prevSet) => new Set([...Array.from(prevSet), item]));\n    const remove = (item: K) =>\n      setSet((prevSet) => new Set(Array.from(prevSet).filter((i) => i !== item)));\n    const toggle = (item: K) =>\n      setSet((prevSet) =>\n        prevSet.has(item)\n          ? new Set(Array.from(prevSet).filter((i) => i !== item))\n          : new Set([...Array.from(prevSet), item])\n      );\n\n    return { add, remove, toggle, reset: () => setSet(initialSet) };\n  }, [setSet]);\n\n  const utils = {\n    has: useCallback((item) => set.has(item), [set]),\n    ...stableActions,\n  } as Actions<K>;\n\n  return [set, utils];\n};\n\nexport default useSet;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"44-usetoggle",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-usetoggle",children:"#"}),"4.4 useToggle"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-usetoggle--docs",rel:"noopener noreferrer",target:"_blank",children:"useToggle docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/state-usetoggle--demo",rel:"noopener noreferrer",target:"_blank",children:"useToggle demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"tracks state of a boolean.\n跟踪布尔值的状态。\n切换 false => true => false"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Reducer, useReducer } from 'react';\n\nconst toggleReducer = (state: boolean, nextValue?: any) =>\n  typeof nextValue === 'boolean' ? nextValue : !state;\n\nconst useToggle = (initialValue: boolean): [boolean, (nextValue?: any) => void] => {\n  return useReducer<Reducer<boolean, any>>(toggleReducer, initialValue);\n};\n\nexport default useToggle;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们继续来看 ",(0,s.jsx)(n.code,{children:"Side-effects"})," 副作用部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"5-side-effects-副作用",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-side-effects-副作用",children:"#"}),"5. Side-effects 副作用"]}),"\n",(0,s.jsxs)(n.h3,{id:"51-usemountedstate",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#51-usemountedstate",children:"#"}),"5.1 useMountedState"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useMountedState"})," 属于 ",(0,s.jsx)(n.code,{children:"lifecycle"})," 模块，但这个 ",(0,s.jsx)(n.code,{children:"hook"})," 在 ",(0,s.jsx)(n.code,{children:"useAsyncFn"})," 中使用，所以放到这里讲述。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usemountedstate--docs",rel:"noopener noreferrer",target:"_blank",children:"useMountedState docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usemountedstate--demo",rel:"noopener noreferrer",target:"_blank",children:"useMountedState demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"NOTE!: despite having State in its name this hook does not cause component re-render. This component designed to be used to avoid state updates on unmounted components."}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"注意！：尽管名称中有State，但该钩子不会导致组件重新呈现。此组件设计用于避免对未安装的组件进行状态更新。"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Lifecycle hook providing ability to check component's mount state.\nReturns a function that will return true if component mounted and false otherwise.\n生命周期挂钩提供了检查组件装载状态的能力。\n返回一个函数，如果组件已安装，则返回true，否则返回false。"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useCallback, useEffect, useRef } from 'react';\n\nexport default function useMountedState(): () => boolean {\n  const mountedRef = useRef<boolean>(false);\n  const get = useCallback(() => mountedRef.current, []);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return get;\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"52-useasyncfn",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#52-useasyncfn",children:"#"}),"5.2 useAsyncFn"]}),"\n",(0,s.jsxs)(n.p,{children:["看了 ",(0,s.jsx)(n.code,{children:"useMountedState"})," ",(0,s.jsx)(n.code,{children:"hook"}),"，我们继续看 ",(0,s.jsx)(n.code,{children:"useAsyncFn"})," 函数源码。"]}),"\n",(0,s.jsxs)(n.p,{children:["主要函数传入 ",(0,s.jsx)(n.code,{children:"Promise"})," 函数 ",(0,s.jsx)(n.code,{children:"fn"}),"，然后执行函数 fn.then()。\n返回 state、callback(fn.then)。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// 省略若干代码\nexport default function useAsyncFn<T extends FunctionReturningPromise>(\n  fn: T,\n  deps: DependencyList = [],\n  initialState: StateFromFunctionReturningPromise<T> = { loading: false }\n): AsyncFnReturn<T> {\n  const lastCallId = useRef(0);\n  const isMounted = useMountedState();\n  const [state, set] = useState<StateFromFunctionReturningPromise<T>>(initialState);\n\n  const callback = useCallback((...args: Parameters<T>): ReturnType<T> => {\n    const callId = ++lastCallId.current;\n\n    if (!state.loading) {\n      set((prevState) => ({ ...prevState, loading: true }));\n    }\n\n    return fn(...args).then(\n      (value) => {\n        isMounted() && callId === lastCallId.current && set({ value, loading: false });\n\n        return value;\n      },\n      (error) => {\n        isMounted() && callId === lastCallId.current && set({ error, loading: false });\n\n        return error;\n      }\n    ) as ReturnType<T>;\n  }, deps);\n\n  return [state, callback as unknown as T];\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"53-useasync",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#53-useasync",children:"#"}),"5.3 useAsync"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-useasync--docs",rel:"noopener noreferrer",target:"_blank",children:"useAsync docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-useasync--demo",rel:"noopener noreferrer",target:"_blank",children:"useAsync demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["React hook that resolves an async function or a function that returns a promise;\n解析异步函数或返回 ",(0,s.jsx)(n.code,{children:"promise"})," 的函数的 ",(0,s.jsx)(n.code,{children:"React"})," 钩子；"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { DependencyList, useEffect } from 'react';\nimport useAsyncFn from './useAsyncFn';\nimport { FunctionReturningPromise } from './misc/types';\n\nexport { AsyncState, AsyncFnReturn } from './useAsyncFn';\n\nexport default function useAsync<T extends FunctionReturningPromise>(\n  fn: T,\n  deps: DependencyList = []\n) {\n  const [state, callback] = useAsyncFn(fn, deps, {\n    loading: true,\n  });\n\n  useEffect(() => {\n    callback();\n  }, [callback]);\n\n  return state;\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"54-useasyncretry",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#54-useasyncretry",children:"#"}),"5.4 useAsyncRetry"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-useasyncretry--docs",rel:"noopener noreferrer",target:"_blank",children:"useAsyncRetry docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-useasyncretry--demo",rel:"noopener noreferrer",target:"_blank",children:"useAsyncRetry demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Uses useAsync with an additional retry method to easily retry/refresh the async function;\n重试"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要就是变更依赖，次数（attempt），变更时会执行 ",(0,s.jsx)(n.code,{children:"useAsync"})," 的 ",(0,s.jsx)(n.code,{children:"fn"})," 函数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { DependencyList, useCallback, useState } from 'react';\nimport useAsync, { AsyncState } from './useAsync';\n\nexport type AsyncStateRetry<T> = AsyncState<T> & {\n  retry(): void;\n};\n\nconst useAsyncRetry = <T>(fn: () => Promise<T>, deps: DependencyList = []) => {\n  const [attempt, setAttempt] = useState<number>(0);\n  const state = useAsync(fn, [...deps, attempt]);\n\n  const stateLoading = state.loading;\n  const retry = useCallback(() => {\n    // 省略开发环境警告提示\n\n    setAttempt((currentAttempt) => currentAttempt + 1);\n  }, [...deps, stateLoading]);\n\n  return { ...state, retry };\n};\n\nexport default useAsyncRetry;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"55-usetimeoutfn",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#55-usetimeoutfn",children:"#"}),"5.5 useTimeoutFn"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"useTimeoutFn"})," 属于 ",(0,s.jsx)(n.code,{children:"Animations"})," 模块，但这个 ",(0,s.jsx)(n.code,{children:"hook"})," 在 ",(0,s.jsx)(n.code,{children:"useDebounce"})," 中使用，所以放到这里讲述。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/animation-usetimeoutfn--docs",rel:"noopener noreferrer",target:"_blank",children:"useTimeoutFn docs"})," | ",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/animation-usetimeoutfn--demo",rel:"noopener noreferrer",target:"_blank",children:"useTimeoutFn demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Calls given function after specified amount of milliseconds.\n在指定的毫秒数后调用给定的函数。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要是 ",(0,s.jsx)(n.code,{children:"useRef"})," 和 ",(0,s.jsx)(n.code,{children:"setTimeout"})," 结合实现的。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useCallback, useEffect, useRef } from 'react';\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nexport default function useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"56-usedebounce",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#56-usedebounce",children:"#"}),"5.6 useDebounce"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-usedebounce--docs",rel:"noopener noreferrer",target:"_blank",children:"useDebounce docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-usedebounce--demo",rel:"noopener noreferrer",target:"_blank",children:"useDebounce demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React hook that delays invoking a function until after wait milliseconds have elapsed since the last time the debounced function was invoked.\n防抖"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { DependencyList, useEffect } from 'react';\nimport useTimeoutFn from './useTimeoutFn';\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nexport default function useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"57-usethrottle",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#57-usethrottle",children:"#"}),"5.7 useThrottle"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-usethrottle--docs",rel:"noopener noreferrer",target:"_blank",children:"useThrottle docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/side-effects-usethrottle--demo",rel:"noopener noreferrer",target:"_blank",children:"useThrottle demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React hooks that throttle."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"节流"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useEffect, useRef, useState } from 'react';\nimport useUnmount from './useUnmount';\n\nconst useThrottle = <T>(value: T, ms: number = 200) => {\n  const [state, setState] = useState<T>(value);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const nextValue = useRef(null) as any;\n  const hasNextValue = useRef(0) as any;\n\n  useEffect(() => {\n    if (!timeout.current) {\n      setState(value);\n      const timeoutCallback = () => {\n        if (hasNextValue.current) {\n          hasNextValue.current = false;\n          setState(nextValue.current);\n          timeout.current = setTimeout(timeoutCallback, ms);\n        } else {\n          timeout.current = undefined;\n        }\n      };\n      timeout.current = setTimeout(timeoutCallback, ms);\n    } else {\n      nextValue.current = value;\n      hasNextValue.current = true;\n    }\n  }, [value]);\n\n  useUnmount(() => {\n    timeout.current && clearTimeout(timeout.current);\n  });\n\n  return state;\n};\n\nexport default useThrottle;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们继续来看 ",(0,s.jsx)(n.code,{children:"UI"})," 用户界面部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"6-ui-用户界面",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-ui-用户界面",children:"#"}),"6. UI 用户界面"]}),"\n",(0,s.jsxs)(n.h3,{id:"61-usefullscreen",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#61-usefullscreen",children:"#"}),"6.1 useFullscreen"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/ui-usefullscreen--docs",rel:"noopener noreferrer",target:"_blank",children:"useFullscreen docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/ui-usefullscreen--demo",rel:"noopener noreferrer",target:"_blank",children:"useFullscreen demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Display an element full-screen, optional fallback for fullscreen video on iOS.\n实现全屏"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要使用 ",(0,s.jsx)(n.a,{href:"https://github.com/sindresorhus/screenfull",rel:"noopener noreferrer",target:"_blank",children:"screenfull"})," npm 包实现。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { RefObject, useState } from 'react';\nimport screenfull from 'screenfull';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { noop, off, on } from './misc/util';\n\nexport interface FullScreenOptions {\n  video?: RefObject<\n    HTMLVideoElement & { webkitEnterFullscreen?: () => void; webkitExitFullscreen?: () => void }\n  >;\n  onClose?: (error?: Error) => void;\n}\n\nconst useFullscreen = (\n  ref: RefObject<Element>,\n  enabled: boolean,\n  options: FullScreenOptions = {}\n): boolean => {\n  const { video, onClose = noop } = options;\n  const [isFullscreen, setIsFullscreen] = useState(enabled);\n\n  useIsomorphicLayoutEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    if (!ref.current) {\n      return;\n    }\n\n    const onWebkitEndFullscreen = () => {\n      if (video?.current) {\n        off(video.current, 'webkitendfullscreen', onWebkitEndFullscreen);\n      }\n      onClose();\n    };\n\n    const onChange = () => {\n      if (screenfull.isEnabled) {\n        const isScreenfullFullscreen = screenfull.isFullscreen;\n        setIsFullscreen(isScreenfullFullscreen);\n        if (!isScreenfullFullscreen) {\n          onClose();\n        }\n      }\n    };\n\n    if (screenfull.isEnabled) {\n      try {\n        screenfull.request(ref.current);\n        setIsFullscreen(true);\n      } catch (error) {\n        onClose(error);\n        setIsFullscreen(false);\n      }\n      screenfull.on('change', onChange);\n    } else if (video && video.current && video.current.webkitEnterFullscreen) {\n      video.current.webkitEnterFullscreen();\n      on(video.current, 'webkitendfullscreen', onWebkitEndFullscreen);\n      setIsFullscreen(true);\n    } else {\n      onClose();\n      setIsFullscreen(false);\n    }\n\n    return () => {\n      setIsFullscreen(false);\n      if (screenfull.isEnabled) {\n        try {\n          screenfull.off('change', onChange);\n          screenfull.exit();\n        } catch {}\n      } else if (video && video.current && video.current.webkitExitFullscreen) {\n        off(video.current, 'webkitendfullscreen', onWebkitEndFullscreen);\n        video.current.webkitExitFullscreen();\n      }\n    };\n  }, [enabled, video, ref]);\n\n  return isFullscreen;\n};\n\nexport default useFullscreen;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们继续来看 ",(0,s.jsx)(n.code,{children:"Lifecycles"})," 生命周期部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"7-lifecycles-生命周期",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-lifecycles-生命周期",children:"#"}),"7. Lifecycles 生命周期"]}),"\n",(0,s.jsxs)(n.h3,{id:"71-uselifecycles",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#71-uselifecycles",children:"#"}),"7.1 useLifecycles"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-uselifecycles--docs",rel:"noopener noreferrer",target:"_blank",children:"useLifecycles docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-uselifecycles--demo",rel:"noopener noreferrer",target:"_blank",children:"useLifecycles demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React lifecycle hook that call mount and unmount callbacks, when component is mounted and un-mounted, respectively.\nReact 生命周期挂钩，分别在组件安装和卸载时调用。"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { useEffect } from 'react';\n\nconst useLifecycles = (mount, unmount?) => {\n  useEffect(() => {\n    if (mount) {\n      mount();\n    }\n    return () => {\n      if (unmount) {\n        unmount();\n      }\n    };\n  }, []);\n};\n\nexport default useLifecycles;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"72-usecustomcompareeffect",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#72-usecustomcompareeffect",children:"#"}),"7.2 useCustomCompareEffect"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usecustomcompareeffect--docs",rel:"noopener noreferrer",target:"_blank",children:"useCustomCompareEffect docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usecustomcompareeffect--demo",rel:"noopener noreferrer",target:"_blank",children:"useCustomCompareEffect demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"A modified useEffect hook that accepts a comparator which is used for comparison on dependencies instead of reference equality.\n一个经过修改的useEffect钩子，它接受一个比较器，该比较器用于对依赖项进行比较，而不是对引用相等进行比较。"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { DependencyList, EffectCallback, useEffect, useRef } from 'react';\n\nconst isPrimitive = (val: any) => val !== Object(val);\n\ntype DepsEqualFnType<TDeps extends DependencyList> = (prevDeps: TDeps, nextDeps: TDeps) => boolean;\n\nconst useCustomCompareEffect = <TDeps extends DependencyList>(\n  effect: EffectCallback,\n  deps: TDeps,\n  depsEqual: DepsEqualFnType<TDeps>\n) => {\n  // 省略一些开发环境的警告提示\n\n  const ref = useRef<TDeps | undefined>(undefined);\n\n  if (!ref.current || !depsEqual(deps, ref.current)) {\n    ref.current = deps;\n  }\n\n  useEffect(effect, ref.current);\n};\n\nexport default useCustomCompareEffect;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"73-usedeepcompareeffect",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#73-usedeepcompareeffect",children:"#"}),"7.3 useDeepCompareEffect"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usedeepcompareeffect--docs",rel:"noopener noreferrer",target:"_blank",children:"useDeepCompareEffect docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/lifecycle-usedeepcompareeffect--demo",rel:"noopener noreferrer",target:"_blank",children:"useDeepCompareEffect demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["A modified useEffect hook that is using deep comparison on its dependencies instead of reference equality.\n一个修改后的 ",(0,s.jsx)(n.code,{children:"useEffect"})," 钩子，它对其依赖项使用深度比较，而不是引用相等。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { DependencyList, EffectCallback } from 'react';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nimport isDeepEqual from './misc/isDeepEqual';\n\nconst isPrimitive = (val: any) => val !== Object(val);\n\nconst useDeepCompareEffect = (effect: EffectCallback, deps: DependencyList) => {\n  // 省略若干开发环境的警告提示\n\n  useCustomCompareEffect(effect, deps, isDeepEqual);\n};\n\nexport default useDeepCompareEffect;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["最后，我们来看 ",(0,s.jsx)(n.code,{children:"Animations"})," 生命周期部分。"]}),"\n",(0,s.jsxs)(n.h2,{id:"8-animations-动画",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-animations-动画",children:"#"}),"8. Animations 动画"]}),"\n",(0,s.jsxs)(n.h3,{id:"81-useupdate",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#81-useupdate",children:"#"}),"8.1 useUpdate"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/animation-useupdate--docs",rel:"noopener noreferrer",target:"_blank",children:"useUpdate docs"})," |\n",(0,s.jsx)(n.a,{href:"https://streamich.github.io/react-use/?path=/story/animation-useupdate--demo",rel:"noopener noreferrer",target:"_blank",children:"useUpdate demo"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"React utility hook that returns a function that forces component to re-render when called.\nReact 实用程序钩子返回一个函数，该函数在调用时强制组件重新渲染。"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["主要用了 ",(0,s.jsx)(n.code,{children:"useReducer"})," 每次调用 ",(0,s.jsx)(n.code,{children:"updateReducer"})," 方法，来达到强制组件重新渲染的目的。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import { useReducer } from 'react';\n\nconst updateReducer = (num: number): number => (num + 1) % 1_000_000;\n\nexport default function useUpdate(): () => void {\n  const [, update] = useReducer(updateReducer, 0);\n\n  return update;\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"9-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#9-总结",children:"#"}),"9. 总结"]}),"\n",(0,s.jsxs)(n.p,{children:["行文至此，我们简单分析了若干 ",(0,s.jsx)(n.a,{href:"https://github.com/streamich/react-use",rel:"noopener noreferrer",target:"_blank",children:"react-use"})," 的自定义 ",(0,s.jsx)(n.code,{children:"React Hooks"}),"。想进一步学习的小伙伴，可以继续学完剩余的 ",(0,s.jsx)(n.code,{children:"hooks"}),"。还可以学习 ",(0,s.jsx)(n.a,{href:"https://ahooks.js.org/zh-CN/",rel:"noopener noreferrer",target:"_blank",children:"ahooks"}),"、",(0,s.jsx)(n.a,{href:"https://gpingfeng.github.io/ahooks-analysis/hooks",rel:"noopener noreferrer",target:"_blank",children:"别人写的 ahooks 源码分析"}),"、\n",(0,s.jsx)(n.a,{href:"https://github.com/antonioru/beautiful-react-hooks",rel:"noopener noreferrer",target:"_blank",children:"beautiful-react-hooks"}),"、",(0,s.jsx)(n.a,{href:"https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks",rel:"noopener noreferrer",target:"_blank",children:"mantine-hooks"}),"等。"]}),"\n",(0,s.jsxs)(n.p,{children:["学习过程中带着问题多查阅 ",(0,s.jsx)(n.code,{children:"React"})," ",(0,s.jsx)(n.a,{href:"https://react.dev",rel:"noopener noreferrer",target:"_blank",children:"新文档 react.dev"}),"，",(0,s.jsx)(n.a,{href:"https://zh-hans.react.dev/",rel:"noopener noreferrer",target:"_blank",children:"新中文文档 zh-hans.react.dev"}),"，相信收获更大。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果技术栈是 ",(0,s.jsx)(n.code,{children:"Vue"}),"，感兴趣的小伙伴可以学习 ",(0,s.jsx)(n.a,{href:"https://github.com/vueuse/vueuse",rel:"noopener noreferrer",target:"_blank",children:"VueUse"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果能看完一些 React Hooks 工具集合库的源码。相信一定能对 ",(0,s.jsx)(n.code,{children:"React Hooks"})," 有更深的理解，自己写自定义 ",(0,s.jsx)(n.code,{children:"React Hooks"})," 时也会更加顺利、快速。"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"如果看完有收获，欢迎点赞、评论、分享支持。你的支持和肯定，是我写作的动力"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["最后可以持续关注我",(0,s.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"@若川"}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（4.7k+人）第一的专栏，写有20余篇源码文章。"]}),"\n",(0,s.jsxs)(n.p,{children:["我倾力持续组织了一年多",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。"]})]})}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}let i=a;a.__RSPRESS_PAGE_META={},a.__RSPRESS_PAGE_META["react-use%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-环境准备",text:"2. 环境准备",depth:2},{id:"21-创建一个新-hook-的步骤",text:"2.1 创建一个新 hook 的步骤",depth:3},{id:"22-useeffectonce",text:"2.2 useEffectOnce",depth:3},{id:"221-react-usesrcuseeffectoncets",text:"2.2.1 react-use/src/useEffectOnce.ts",depth:4},{id:"222-react-usetestsuseeffectoncetestts",text:"2.2.2 react-use/tests/useEffectOnce.test.ts",depth:4},{id:"223-react-usestoriesuseeffectoncestorytsx",text:"2.2.3 react-use/stories/useEffectOnce.story.tsx",depth:4},{id:"3-sensors-行为",text:"3. Sensors 行为",depth:2},{id:"31-useidle",text:"3.1 useIdle",depth:3},{id:"32-uselocation",text:"3.2 useLocation",depth:3},{id:"4-state-状态",text:"4. State 状态",depth:2},{id:"41-usefirstmountstate",text:"4.1 useFirstMountState",depth:3},{id:"42-useprevious",text:"4.2 usePrevious",depth:3},{id:"43-useset",text:"4.3 useSet",depth:3},{id:"44-usetoggle",text:"4.4 useToggle",depth:3},{id:"5-side-effects-副作用",text:"5. Side-effects 副作用",depth:2},{id:"51-usemountedstate",text:"5.1 useMountedState",depth:3},{id:"52-useasyncfn",text:"5.2 useAsyncFn",depth:3},{id:"53-useasync",text:"5.3 useAsync",depth:3},{id:"54-useasyncretry",text:"5.4 useAsyncRetry",depth:3},{id:"55-usetimeoutfn",text:"5.5 useTimeoutFn",depth:3},{id:"56-usedebounce",text:"5.6 useDebounce",depth:3},{id:"57-usethrottle",text:"5.7 useThrottle",depth:3},{id:"6-ui-用户界面",text:"6. UI 用户界面",depth:2},{id:"61-usefullscreen",text:"6.1 useFullscreen",depth:3},{id:"7-lifecycles-生命周期",text:"7. Lifecycles 生命周期",depth:2},{id:"71-uselifecycles",text:"7.1 useLifecycles",depth:3},{id:"72-usecustomcompareeffect",text:"7.2 useCustomCompareEffect",depth:3},{id:"73-usedeepcompareeffect",text:"7.3 useDeepCompareEffect",depth:3},{id:"8-animations-动画",text:"8. Animations 动画",depth:2},{id:"81-useupdate",text:"8.1 useUpdate",depth:3},{id:"9-总结",text:"9. 总结",depth:2}],title:"自从学了 react-use 源码，我写自定义 React Hooks 越来越顺了~",headingTitle:"自从学了 react-use 源码，我写自定义 React Hooks 越来越顺了~",frontmatter:{}}},20713:function(e,n,t){t.d(n,{Z:()=>i});var s=t(52676),r=t(75271),o=t(92815);t(18544);let c={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function a(e,n,t){let s=Object.keys(c).includes(n)?n:t;return c[s](e)}let i=e=>{let{defaultLocale:n="en-US"}=e,t=(0,o.Vi)().page.readingTimeData,c=(0,o.Jr)(),i=(0,o.e7)(),[l,d]=(0,r.useState)(a(t,c,n));return(0,r.useEffect)(()=>{d(a(t,c,n))},[c,t]),(0,s.jsx)("span",{"data-dark":String(i),className:"rp-reading-time",children:l})}}}]);