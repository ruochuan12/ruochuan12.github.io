"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["240"],{15786:function(e,n,r){r.r(n),r.d(n,{default:()=>o});var s=r(52676),a=r(40453),c=r(20713);let i=r.p+"static/image/debugger.7bc73ef4.png";function d(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",pre:"pre",h3:"h3",img:"img"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"从-vue-cli-源码中我发现27行读取-json-文件有趣的-npm-包",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#从-vue-cli-源码中我发现27行读取-json-文件有趣的-npm-包",children:"#"}),"从 vue-cli 源码中，我发现27行读取 json 文件有趣的 npm 包"]}),"\n",(0,s.jsx)(c.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["大家好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。",(0,s.jsx)(n.strong,{children:"为了能帮助到更多对源码感兴趣、想学会看源码、提升自己前端技术能力的同学"}),"。我倾力组织了",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，感兴趣的可以加我微信 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与，或者关注我的",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"公众号若川视野"}),"，回复“源码”参与。已进行4个月，每周大家一起学习200行左右的源码，共同进步，很多人都表示收获颇丰。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["想学源码，极力推荐关注我写的专栏（目前1.8K人关注）",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,s.jsx)(n.code,{children:"jQuery"}),"、",(0,s.jsx)(n.code,{children:"underscore"}),"、",(0,s.jsx)(n.code,{children:"lodash"}),"、",(0,s.jsx)(n.code,{children:"vuex"}),"、",(0,s.jsx)(n.code,{children:"sentry"}),"、",(0,s.jsx)(n.code,{children:"axios"}),"、",(0,s.jsx)(n.code,{children:"redux"}),"、",(0,s.jsx)(n.code,{children:"koa"}),"、",(0,s.jsx)(n.code,{children:"vue-devtools"}),"、",(0,s.jsx)(n.code,{children:"vuex4"}),"、",(0,s.jsx)(n.code,{children:"koa-compose"}),"、",(0,s.jsx)(n.code,{children:"vue 3.2 发布"}),"、",(0,s.jsx)(n.code,{children:"vue-this"}),"、",(0,s.jsx)(n.code,{children:"create-vue"}),"、",(0,s.jsx)(n.code,{children:"玩具vite"}),"等20余篇源码文章。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/read-pkg-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库 https://github.com/ruochuan12/read-pkg-analysis.git，求个star^_^"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"})," 每周一期，已进行到15期。源码群里有小伙伴提问，如何用 ",(0,s.jsx)(n.code,{children:"import"})," 加载 ",(0,s.jsx)(n.code,{children:"json"})," 文件。同时我之前看到了",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-cli/blob/dev/packages/%40vue/cli-shared-utils/lib/pkg.js",rel:"noopener noreferrer",target:"_blank",children:"vue-cli 源码"})," 里有 ",(0,s.jsx)(n.a,{href:"https://npm.im/read-pkg",rel:"noopener noreferrer",target:"_blank",children:"read-pkg"})," 这个包。源码仅27行，非常值得我们学习。"]}),"\n",(0,s.jsx)(n.p,{children:"阅读本文，你将学到："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"1. 如何学习调试源码\n2. 学会如何获取 package.json\n3. 学到 import.meta\n4. 学到引入 json 文件的提案\n5. JSON.parse 更友好的错误提示\n6. 规范化 package 元数据\n7. 等等\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"2-场景",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-场景",children:"#"}),"2. 场景"]}),"\n",(0,s.jsxs)(n.p,{children:["优雅的获取 ",(0,s.jsx)(n.code,{children:"package.json"})," 文件。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://npm.im/read-pkg",rel:"noopener noreferrer",target:"_blank",children:"read-pkg"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-cli/blob/dev/packages/%40vue/cli-shared-utils/lib/pkg.js",rel:"noopener noreferrer",target:"_blank",children:"vue-cli 源码"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const fs = require('fs')\nconst path = require('path')\nconst readPkg = require('read-pkg')\n\nexports.resolvePkg = function (context) {\n  if (fs.existsSync(path.join(context, 'package.json'))) {\n    return readPkg.sync({ cwd: context })\n  }\n  return {}\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["封装这个函数的",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-cli/commit/eaa2b7341f174260f6ebc2345bd8e838f85a2ea3#diff-eff8c1ce409e9f1aa37372ff81a6563e31d1270822f5bfdba17426c4b1def4de",rel:"noopener noreferrer",target:"_blank",children:"commit 记录"})]}),"\n",(0,s.jsxs)(n.p,{children:["你也许会想直接 ",(0,s.jsx)(n.code,{children:"require('package.json');"})," 不就可以了。但在",(0,s.jsx)(n.code,{children:"ES模块"}),"下，目前无法直接引入JSON文件。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/34944099/how-to-import-a-json-file-in-ecmascript-6",rel:"noopener noreferrer",target:"_blank",children:"在 stackoverflow 也有相关提问"})}),"\n",(0,s.jsxs)(n.p,{children:["我们接着来看 ",(0,s.jsx)(n.a,{href:"https://es6.ruanyifeng.com/#docs/proposals",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师的 JSON 模块"})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["import 命令目前只能用于加载 ES 模块，现在有一个",(0,s.jsx)(n.a,{href:"https://github.com/tc39/proposal-json-modules",rel:"noopener noreferrer",target:"_blank",children:"提案"}),"，允许加载 JSON 模块。\nimport 命令能够直接加载 JSON 模块以后，就可以像下面这样写。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import configData from './config.json' assert { type: \"json\" };\nconsole.log(configData.appName);\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"import"})," 命令导入 ",(0,s.jsx)(n.code,{children:"JSON"})," 模块时，命令结尾的 ",(0,s.jsx)(n.code,{children:'assert {type: "json"}'})," 不可缺\n少。这叫做导入断言，用来告诉 ",(0,s.jsx)(n.code,{children:"JavaScript"})," 引擎，现在加载的是 ",(0,s.jsx)(n.code,{children:"JSON"})," 模块。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["接下来我们学习 ",(0,s.jsx)(n.a,{href:"https://github.com/sindresorhus/read-pkg",rel:"noopener noreferrer",target:"_blank",children:"read-pkg 源码"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-环境准备",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-环境准备",children:"#"}),"3. 环境准备"]}),"\n",(0,s.jsxs)(n.h3,{id:"31-克隆",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-克隆",children:"#"}),"3.1 克隆"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 推荐克隆我的项目，保证与文章同步\ngit clone https://github.com/ruochuan12/read-pkg-analysis.git\n# npm i -g yarn\ncd read-pkg && yarn\n# VSCode 直接打开当前项目\n# code .\n\n# 或者克隆官方项目\ngit clone https://github.com/sindresorhus/read-pkg.git\n# npm i -g yarn\ncd read-pkg && yarn\n# VSCode 直接打开当前项目\n# code .\n"})}),"\n",(0,s.jsxs)(n.p,{children:["看源码一般先看 ",(0,s.jsx)(n.code,{children:"package.json"}),"，再看 ",(0,s.jsx)(n.code,{children:"script"}),"。"]}),"\n",(0,s.jsxs)(n.h3,{id:"32-packagejson",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-packagejson",children:"#"}),"3.2 package.json"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n	"name":\n	"scripts": {\n		"test": "xo && ava && tsd"\n	}\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"test命令有三个包，我们一一查阅了解。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/xojs/xo",rel:"noopener noreferrer",target:"_blank",children:"xo"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"JavaScript/TypeScript linter (ESLint wrapper) with great defaults\nJavaScript/TypeScript linter（ESLint 包装器）具有很好的默认值"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/SamVerschueren/tsd",rel:"noopener noreferrer",target:"_blank",children:"tsd"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Check TypeScript type definitions\n检查 TypeScript 类型定义"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/avajs/ava",rel:"noopener noreferrer",target:"_blank",children:"nodejs 测试工具 ava"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Node.js test runner that lets you develop with confidence"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"33-调试",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-调试",children:"#"}),"3.3 调试"]}),"\n",(0,s.jsxs)(n.p,{children:["提前在入口测试文件 ",(0,s.jsx)(n.code,{children:"test/test.js"})," 和入口文件 ",(0,s.jsx)(n.code,{children:"index.js"})," 打好断点。"]}),"\n",(0,s.jsxs)(n.p,{children:["用最新的",(0,s.jsx)(n.code,{children:"VSCode"})," 打开项目，找到 ",(0,s.jsx)(n.code,{children:"package.json"})," 的 ",(0,s.jsx)(n.code,{children:"scripts"})," 属性中的 ",(0,s.jsx)(n.code,{children:"test"})," 命令。鼠标停留在",(0,s.jsx)(n.code,{children:"test"}),"命令上，会出现 ",(0,s.jsx)(n.code,{children:"运行命令"})," 和 ",(0,s.jsx)(n.code,{children:"调试命令"})," 的选项，选择 ",(0,s.jsx)(n.code,{children:"调试命令"})," 即可。"]}),"\n",(0,s.jsx)(n.p,{children:"调试如图所示："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"debugger",src:i})}),"\n",(0,s.jsxs)(n.p,{children:["更多调试细节可以看我的这篇文章：",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7030584939020042254",rel:"noopener noreferrer",target:"_blank",children:"新手向：前端程序员必学基本技能——调试JS代码"})]}),"\n",(0,s.jsx)(n.p,{children:"我们跟着调试来看测试用例。"}),"\n",(0,s.jsxs)(n.h2,{id:"4-测试用例",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-测试用例",children:"#"}),"4. 测试用例"]}),"\n",(0,s.jsxs)(n.p,{children:["这个测试用例文件，主要就是主入口 ",(0,s.jsx)(n.code,{children:"index.js"})," 导出的两个方法 ",(0,s.jsx)(n.code,{children:"readPackage"}),", ",(0,s.jsx)(n.code,{children:"readPackageSync"}),"。异步和同步的方法。"]}),"\n",(0,s.jsxs)(n.p,{children:["判断读取的 ",(0,s.jsx)(n.code,{children:"package.json"})," 的 ",(0,s.jsx)(n.code,{children:"name"})," 属性与测试用例的 ",(0,s.jsx)(n.code,{children:"name"})," 属性是否相等。"]}),"\n",(0,s.jsxs)(n.p,{children:["判断读取 ",(0,s.jsx)(n.code,{children:"package.json"})," 的 ",(0,s.jsx)(n.code,{children:"_id"})," 是否是真值。"]}),"\n",(0,s.jsxs)(n.p,{children:["同时支持指定目录。",(0,s.jsx)(n.code,{children:"{ cwd }"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// read-pkg/test/test.js\nimport {fileURLToPath} from 'url';\nimport path from 'path';\nimport test from 'ava';\nimport {readPackage, readPackageSync} from '../index.js';\n\nconst dirname = path.dirname(fileURLToPath(import.meta.url));\nprocess.chdir(dirname);\nconst rootCwd = path.join(dirname, '..');\n\ntest('async', async t => {\n	const package_ = await readPackage();\n	t.is(package_.name, 'unicorn');\n	t.truthy(package_._id);\n});\n\ntest('async - cwd option', async t => {\n	const package_ = await readPackage({cwd: rootCwd});\n	t.is(package_.name, 'read-pkg');\n});\n\ntest('sync', t => {\n	const package_ = readPackageSync();\n	t.is(package_.name, 'unicorn');\n	t.truthy(package_._id);\n});\n\ntest('sync - cwd option', t => {\n	const package_ = readPackageSync({cwd: rootCwd});\n	t.is(package_.name, 'read-pkg');\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"这个测试用例文件，涉及到一些值得一提的知识点。接下来就简单讲述下。"}),"\n",(0,s.jsxs)(n.h3,{id:"41-url-模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-url-模块",children:"#"}),"4.1 url 模块"]}),"\n",(0,s.jsx)(n.p,{children:"url 模块提供用于网址处理和解析的实用工具。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://nodejs.cn/api/url.html#urlfileurltopathurl",rel:"noopener noreferrer",target:"_blank",children:"url 中文文档"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"url.fileURLToPath(url)"})}),"\n",(0,s.jsxs)(n.p,{children:["url ",(0,s.jsx)(n.code,{children:"<URL>"})," | ",(0,s.jsx)(n.code,{children:"<string>"})," 要转换为路径的文件网址字符串或网址对象。\n返回: ",(0,s.jsx)(n.code,{children:"<string>"})," 完全解析的特定于平台的 Node.js 文件路径。\n此函数可确保正确解码百分比编码字符，并确保跨平台有效的绝对路径字符串。"]}),"\n",(0,s.jsxs)(n.h3,{id:"42-importmetaurl",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-importmetaurl",children:"#"}),"4.2 import.meta.url"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://es6.ruanyifeng.com/?search=import.meta.url&x=10&y=9#docs/proposals",rel:"noopener noreferrer",target:"_blank",children:"import.meta.url"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["（1）import.meta.url\nimport.meta.url返回当前模块的 URL 路径。举例来说，当前模块主文件的路径是",(0,s.jsx)(n.code,{children:"https://foo.com/main.js"}),"，import.meta.url就返回这个路径。如果模块里面还有一个数据文件 ",(0,s.jsx)(n.code,{children:"data.txt"}),"，那么就可以用下面的代码，获取这个数据文件的路径。\nnew URL('data.txt', import.meta.url)\n注意，Node.js 环境中，",(0,s.jsx)(n.code,{children:"import.meta.url"})," 返回的总是本地路径，即是file:URL协议的字符串，比如 ",(0,s.jsx)(n.code,{children:"file:///home/user/foo.js"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"43-processchdir",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-processchdir",children:"#"}),"4.3 process.chdir"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"process.chdir()"})," 方法更改 ",(0,s.jsx)(n.code,{children:"Node.js"})," 进程的当前工作目录，如果失败则抛出异常（例如，如果指定的 ",(0,s.jsx)(n.code,{children:"directory"})," 不存在）。"]}),"\n",(0,s.jsxs)(n.h2,{id:"5-27行主入口源码",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-27行主入口源码",children:"#"}),"5. 27行主入口源码"]}),"\n",(0,s.jsxs)(n.p,{children:["导出异步和同步的两个方法，支持传递参数对象，",(0,s.jsx)(n.code,{children:"cwd"})," 默认是 ",(0,s.jsx)(n.code,{children:"process.cwd()"}),"，",(0,s.jsx)(n.code,{children:"normalize"})," 默认标准化。"]}),"\n",(0,s.jsxs)(n.p,{children:["分别是用 ",(0,s.jsx)(n.code,{children:"fsPromises.readFile"})," ",(0,s.jsx)(n.code,{children:"fs.readFileSync"})," 读取 ",(0,s.jsx)(n.code,{children:"package.json"})," 文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["用 ",(0,s.jsx)(n.a,{href:"https://github.com/sindresorhus/parse-json",rel:"noopener noreferrer",target:"_blank",children:"parse-json"})," 解析 json 文件。"]}),"\n",(0,s.jsxs)(n.p,{children:["用 ",(0,s.jsx)(n.a,{href:"https://github.com/npm/normalize-package-data",rel:"noopener noreferrer",target:"_blank",children:"npm 官方库 normalize-package-data"})," 规范化 ",(0,s.jsx)(n.code,{children:"package"})," 元数据。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import process from 'node:process';\nimport fs, {promises as fsPromises} from 'node:fs';\nimport path from 'node:path';\nimport parseJson from 'parse-json';\nimport normalizePackageData from 'normalize-package-data';\n\nexport async function readPackage({cwd = process.cwd(), normalize = true} = {}) {\n	const filePath = path.resolve(cwd, 'package.json');\n	const json = parseJson(await fsPromises.readFile(filePath, 'utf8'));\n\n	if (normalize) {\n		normalizePackageData(json);\n	}\n\n	return json;\n}\n\nexport function readPackageSync({cwd = process.cwd(), normalize = true} = {}) {\n	const filePath = path.resolve(cwd, 'package.json');\n	const json = parseJson(fs.readFileSync(filePath, 'utf8'));\n\n	if (normalize) {\n		normalizePackageData(json);\n	}\n\n	return json;\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"51-process-进程模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#51-process-进程模块",children:"#"}),"5.1 process 进程模块"]}),"\n",(0,s.jsx)(n.p,{children:"很常用的模块。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://nodejs.cn/api/process.html#process",rel:"noopener noreferrer",target:"_blank",children:"process 中文文档"})}),"\n",(0,s.jsx)(n.p,{children:"process 对象提供有关当前 Node.js 进程的信息并对其进行控制。 虽然它作为全局可用，但是建议通过 require 或 import 显式地访问它："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import process from 'node:process';\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://nodejs.org/dist/latest-v16.x/docs/api/modules.html",rel:"noopener noreferrer",target:"_blank",children:"Node 文档"})}),"\n",(0,s.jsxs)(n.p,{children:["也就是说引用 ",(0,s.jsx)(n.code,{children:"node"})," 原生库可以加 ",(0,s.jsx)(n.code,{children:"node:"})," 前缀，比如 ",(0,s.jsx)(n.code,{children:"import util from 'node:util'"})]}),"\n",(0,s.jsxs)(n.h3,{id:"52-path-路径模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#52-path-路径模块",children:"#"}),"5.2 path 路径模块"]}),"\n",(0,s.jsx)(n.p,{children:"很常用的模块。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://nodejs.cn/api/path.html",rel:"noopener noreferrer",target:"_blank",children:"path 中文文档"})}),"\n",(0,s.jsx)(n.p,{children:"path 模块提供了用于处理文件和目录的路径的实用工具。"}),"\n",(0,s.jsxs)(n.h3,{id:"53-fs-文件模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#53-fs-文件模块",children:"#"}),"5.3 fs 文件模块"]}),"\n",(0,s.jsx)(n.p,{children:"很常用的模块。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"http://nodejs.cn/api/fs.html",rel:"noopener noreferrer",target:"_blank",children:"fs 中文文档"})}),"\n",(0,s.jsxs)(n.h3,{id:"54-parsejson-解析-json",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#54-parsejson-解析-json",children:"#"}),"5.4 parseJson 解析 JSON"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/sindresorhus/parse-json",rel:"noopener noreferrer",target:"_blank",children:"parse-json"})}),"\n",(0,s.jsx)(n.p,{children:"文档介绍："}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Parse JSON with more helpful errors"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"更多有用的错误提示。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 源码有删减\nconst fallback = require('json-parse-even-better-errors');\nconst parseJson = (string, reviver, filename) => {\n	if (typeof reviver === 'string') {\n		filename = reviver;\n		reviver = null;\n	}\n\n	try {\n		try {\n			return JSON.parse(string, reviver);\n		} catch (error) {\n			fallback(string, reviver);\n			throw error;\n		}\n	} catch (error) {\n		// 省略\n	}\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"55-normalizepackagedata-规范化包元数据",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#55-normalizepackagedata-规范化包元数据",children:"#"}),"5.5 normalizePackageData 规范化包元数据"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/npm/normalize-package-data",rel:"noopener noreferrer",target:"_blank",children:"npm 官方库 normalize-package-data"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"normalizes package metadata, typically found in package.json file."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"规范化包元数据"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"module.exports = normalize\nfunction normalize (data, warn, strict) {\n	// 省略若干代码\n	data._id = data.name + '@' + data.version\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这也就是为啥测试用例中用了",(0,s.jsx)(n.code,{children:"t.truthy(package_._id);"})," 来检测 ",(0,s.jsx)(n.code,{children:"_id"})," 属性是否为真值。"]}),"\n",(0,s.jsxs)(n.h2,{id:"6-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-总结",children:"#"}),"6. 总结"]}),"\n",(0,s.jsx)(n.p,{children:"最后总结下我们学到了如下知识："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"1. 如何学习调试源码\n2. 学会如何获取 package.json\n3. 学到 import.meta\n4. 学到引入 json 文件的提案\n5. JSON.parse 更友好的错误提示\n6. 规范化 package 元数据\n7. 等等\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/sindresorhus/read-pkg.git",rel:"noopener noreferrer",target:"_blank",children:"read-pkg 源码"})," 整体而言相对比较简单，但是也有很多可以学习深挖的学习的知识点。"]}),"\n",(0,s.jsx)(n.p,{children:"作为一个 npm 包，拥有完善的测试用例。"}),"\n",(0,s.jsxs)(n.p,{children:["学 ",(0,s.jsx)(n.code,{children:"Node.js"})," 可以多找找简单的 ",(0,s.jsx)(n.code,{children:"npm"})," 包学习。比直接看官方文档有趣多了。不懂的就去查官方文档。查的多了，自然常用的就熟练了。"]}),"\n",(0,s.jsxs)(n.p,{children:["建议读者克隆 ",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/read-pkg-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"我的仓库"})," 动手实践调试源码学习。"]}),"\n",(0,s.jsxs)(n.p,{children:["最后可以持续关注我",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"@若川"}),"。欢迎加我微信 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，每周大家一起学习200行左右的源码，共同进步。"]})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}let o=t;t.__RSPRESS_PAGE_META={},t.__RSPRESS_PAGE_META["read-pkg%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-场景",text:"2. 场景",depth:2},{id:"3-环境准备",text:"3. 环境准备",depth:2},{id:"31-克隆",text:"3.1 克隆",depth:3},{id:"32-packagejson",text:"3.2 package.json",depth:3},{id:"33-调试",text:"3.3 调试",depth:3},{id:"4-测试用例",text:"4. 测试用例",depth:2},{id:"41-url-模块",text:"4.1 url 模块",depth:3},{id:"42-importmetaurl",text:"4.2 import.meta.url",depth:3},{id:"43-processchdir",text:"4.3 process.chdir",depth:3},{id:"5-27行主入口源码",text:"5. 27行主入口源码",depth:2},{id:"51-process-进程模块",text:"5.1 process 进程模块",depth:3},{id:"52-path-路径模块",text:"5.2 path 路径模块",depth:3},{id:"53-fs-文件模块",text:"5.3 fs 文件模块",depth:3},{id:"54-parsejson-解析-json",text:"5.4 parseJson 解析 JSON",depth:3},{id:"55-normalizepackagedata-规范化包元数据",text:"5.5 normalizePackageData 规范化包元数据",depth:3},{id:"6-总结",text:"6. 总结",depth:2}],title:"从 vue-cli 源码中，我发现27行读取 json 文件有趣的 npm 包",headingTitle:"从 vue-cli 源码中，我发现27行读取 json 文件有趣的 npm 包",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,r){r.d(n,{Z:()=>t});var s=r(52676),a=r(75271),c=r(92815);r(18544);let i={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function d(e,n,r){let s=Object.keys(i).includes(n)?n:r;return i[s](e)}let t=e=>{let{defaultLocale:n="en-US"}=e,r=(0,c.Vi)().page.readingTimeData,i=(0,c.Jr)(),t=(0,c.e7)(),[o,h]=(0,a.useState)(d(r,i,n));return(0,a.useEffect)(()=>{h(d(r,i,n))},[i,r]),(0,s.jsx)("span",{"data-dark":String(t),className:"rp-reading-time",children:o})}}}]);