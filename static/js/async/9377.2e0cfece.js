"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["9377"],{7355:function(e,n,r){r.r(n),r.d(n,{default:()=>o});var l=r(52676),a=r(40453),s=r(20713);function t(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",pre:"pre",h3:"h3",h4:"h4"},(0,a.ah)(),e.components);return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.h1,{id:"面试官请手写一个带取消功能的延迟函数axios-取消功能的原理是什么",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#面试官请手写一个带取消功能的延迟函数axios-取消功能的原理是什么",children:"#"}),"面试官：请手写一个带取消功能的延迟函数，axios 取消功能的原理是什么"]}),"\n",(0,l.jsx)(s.Z,{defaultLocale:"zh-CN"}),"\n",(0,l.jsxs)(n.h2,{id:"1-前言",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,l.jsxs)(n.blockquote,{children:["\n",(0,l.jsxs)(n.p,{children:["大家好，我是",(0,l.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。",(0,l.jsx)(n.strong,{children:"为了能帮助到更多对源码感兴趣、想学会看源码、提升自己前端技术能力的同学"}),"。我倾力组织了",(0,l.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，感兴趣的可以加我微信 ",(0,l.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与。每周大家一起学习200行左右的源码，共同进步，已进行4个月，很多人都表示收获颇丰。"]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["想学源码，极力推荐关注我写的专栏（目前1.9K人关注）",(0,l.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,l.jsx)(n.code,{children:"jQuery"}),"、",(0,l.jsx)(n.code,{children:"underscore"}),"、",(0,l.jsx)(n.code,{children:"lodash"}),"、",(0,l.jsx)(n.code,{children:"vuex"}),"、",(0,l.jsx)(n.code,{children:"sentry"}),"、",(0,l.jsx)(n.code,{children:"axios"}),"、",(0,l.jsx)(n.code,{children:"redux"}),"、",(0,l.jsx)(n.code,{children:"koa"}),"、",(0,l.jsx)(n.code,{children:"vue-devtools"}),"、",(0,l.jsx)(n.code,{children:"vuex4"}),"、",(0,l.jsx)(n.code,{children:"koa-compose"}),"、",(0,l.jsx)(n.code,{children:"vue 3.2 发布"}),"、",(0,l.jsx)(n.code,{children:"vue-this"}),"、",(0,l.jsx)(n.code,{children:"create-vue"}),"、",(0,l.jsx)(n.code,{children:"玩具vite"}),"等20余篇源码文章。"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/ruochuan12/delay-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库 https://github.com/ruochuan12/delay-analysis.git，求个star^_^"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"})," 每周一期，已进行到17期。于是搜寻各种值得我们学习，且代码行数不多的源码。",(0,l.jsx)(n.a,{href:"https://github.com/sindresorhus/delay/blob/main/index.js",rel:"noopener noreferrer",target:"_blank",children:"delay 主文件仅70多行"}),"，非常值得我们学习。"]}),"\n",(0,l.jsx)(n.p,{children:"阅读本文，你将学到："}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"1. 学会如何实现一个比较完善的 delay 函数\n2. 学会使用 AbortController 实现取消功能\n3. 学会面试常考 axios 取消功能实现\n4. 等等\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"2-环境准备",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-环境准备",children:"#"}),"2. 环境准备"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# 推荐克隆我的项目，保证与文章同步\ngit clone https://github.com/ruochuan12/delay-analysis.git\n# npm i -g yarn\ncd delay-analysis/delay && yarn i\n# VSCode 直接打开当前项目\n# code .\n# 我写的例子都在 examples 这个文件夹中，可以启动服务本地查看调试\n# 在 delay-analysis 目录下\nnpx http-server examples\n# 打开 http://localhost:8080\n\n# 或者克隆官方项目\ngit clone https://github.com/sindresorhus/delay.git\n# npm i -g yarn\ncd delay && yarn i\n# VSCode 直接打开当前项目\n# code .\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"3-delay",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-delay",children:"#"}),"3. delay"]}),"\n",(0,l.jsxs)(n.p,{children:["我们从零开始来实现一个比较完善的 ",(0,l.jsx)(n.a,{href:"https://github.com/sindresorhus/delay/blob/main/index.js",rel:"noopener noreferrer",target:"_blank",children:"delay 函数"}),"。"]}),"\n",(0,l.jsxs)(n.h3,{id:"31-第一版-简版延迟",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-第一版-简版延迟",children:"#"}),"3.1 第一版 简版延迟"]}),"\n",(0,l.jsx)(n.p,{children:"要完成这样一个延迟函数。"}),"\n",(0,l.jsxs)(n.h4,{id:"311-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#311-使用",children:"#"}),"3.1.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async() => {\n    await delay1(1000);\n    console.log('输出这句');\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"312-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#312-实现",children:"#"}),"3.1.2 实现"]}),"\n",(0,l.jsxs)(n.p,{children:["用 ",(0,l.jsx)(n.code,{children:"Promise"})," 和 ",(0,l.jsx)(n.code,{children:"setTimeout"})," 结合实现，我们都很容易实现以下代码。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const delay1 = (ms) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve();\n        }, ms);\n    });\n}\n"})}),"\n",(0,l.jsx)(n.p,{children:"我们要传递结果。"}),"\n",(0,l.jsxs)(n.h3,{id:"32-第二版-传递-value-参数作为结果",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-第二版-传递-value-参数作为结果",children:"#"}),"3.2 第二版 传递 value 参数作为结果"]}),"\n",(0,l.jsxs)(n.h4,{id:"321-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#321-使用",children:"#"}),"3.2.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async() => {\n    const result = await delay2(1000, { value: '我是若川' });\n    console.log('输出结果', result);\n})();\n"})}),"\n",(0,l.jsxs)(n.p,{children:["我们也很容易实现如下代码。传递 ",(0,l.jsx)(n.code,{children:"value"})," 最后作为结果返回。"]}),"\n",(0,l.jsxs)(n.h4,{id:"322-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#322-实现",children:"#"}),"3.2.2 实现"]}),"\n",(0,l.jsx)(n.p,{children:"因此我们实现也很容易实现如下第二版。"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const delay2 = (ms, { value } = {}) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve(value);\n        }, ms);\n    });\n}\n"})}),"\n",(0,l.jsxs)(n.p,{children:["这样写，",(0,l.jsx)(n.code,{children:"Promise"})," 永远是成功。我们也需要失败。这时我们定义个参数 ",(0,l.jsx)(n.code,{children:"willResolve"})," 来定义。"]}),"\n",(0,l.jsxs)(n.h3,{id:"33-第三版-willresolve-参数决定成功还是失败",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-第三版-willresolve-参数决定成功还是失败",children:"#"}),"3.3 第三版 willResolve 参数决定成功还是失败。"]}),"\n",(0,l.jsxs)(n.h4,{id:"331-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#331-使用",children:"#"}),"3.3.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async() => {\n    try{\n        const result = await delay3(1000, { value: '我是若川', willResolve: false });\n        console.log('永远不会输出这句');\n    }\n    catch(err){\n        console.log('输出结果', err);\n    }\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"332-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#332-实现",children:"#"}),"3.3.2 实现"]}),"\n",(0,l.jsxs)(n.p,{children:["加个 ",(0,l.jsx)(n.code,{children:"willResolve"})," 参数决定成功还是失败。于是我们有了如下实现。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const delay3 = (ms, {value, willResolve} = {}) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if(willResolve){\n                resolve(value);\n            }\n            else{\n                reject(value);\n            }\n        }, ms);\n    });\n}\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"34-第四版-一定时间范围内随机获得结果",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-第四版-一定时间范围内随机获得结果",children:"#"}),"3.4 第四版 一定时间范围内随机获得结果"]}),"\n",(0,l.jsx)(n.p,{children:"延时器的毫秒数是写死的。我们希望能够在一定时间范围内随机获取到结果。"}),"\n",(0,l.jsxs)(n.h4,{id:"341-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#341-使用",children:"#"}),"3.4.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async() => {\n    try{\n        const result = await delay4.reject(1000, { value: '我是若川', willResolve: false });\n        console.log('永远不会输出这句');\n    }\n    catch(err){\n        console.log('输出结果', err);\n    }\n\n    const result2 = await delay4.range(10, 20000, { value: '我是若川，range' });\n    console.log('输出结果', result2);\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"342-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#342-实现",children:"#"}),"3.4.2 实现"]}),"\n",(0,l.jsxs)(n.p,{children:["我们把成功 ",(0,l.jsx)(n.code,{children:"delay"})," 和失败 ",(0,l.jsx)(n.code,{children:"reject"})," 封装成一个函数，随机 ",(0,l.jsx)(n.code,{children:"range"})," 单独封装成一个函数。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createDelay = ({willResolve}) => (ms, {value} = {}) => {\n    return new Promise((relove, reject) => {\n        setTimeout(() => {\n            if(willResolve){\n                relove(value);\n            }\n            else{\n                reject(value);\n            }\n        }, ms);\n    });\n}\n\nconst createWithTimers = () => {\n    const delay = createDelay({willResolve: true});\n    delay.reject = createDelay({willResolve: false});\n    delay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n    return delay;\n}\nconst delay4 = createWithTimers();\n"})}),"\n",(0,l.jsx)(n.p,{children:"实现到这里，相对比较完善了。但我们可能有需要提前结束。"}),"\n",(0,l.jsxs)(n.h3,{id:"35-第五版-提前清除",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#35-第五版-提前清除",children:"#"}),"3.5 第五版 提前清除"]}),"\n",(0,l.jsxs)(n.h4,{id:"351-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#351-使用",children:"#"}),"3.5.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async () => {\n    const delayedPromise = delay5(1000, {value: '我是若川'});\n\n    setTimeout(() => {\n        delayedPromise.clear();\n    }, 300);\n\n    // 300 milliseconds later\n    console.log(await delayedPromise);\n    //=> '我是若川'\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"352-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#352-实现",children:"#"}),"3.5.2 实现"]}),"\n",(0,l.jsxs)(n.p,{children:["声明 ",(0,l.jsx)(n.code,{children:"settle"}),"变量，封装 ",(0,l.jsx)(n.code,{children:"settle"})," 函数，在调用 ",(0,l.jsx)(n.code,{children:"delayPromise.clear"})," 时清除定时器。于是我们可以得到如下第五版的代码。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createDelay = ({willResolve}) => (ms, {value} = {}) => {\n    let timeoutId;\n    let settle;\n    const delayPromise = new Promise((resolve, reject) => {\n        settle = () => {\n            if(willResolve){\n                resolve(value);\n            }\n            else{\n                reject(value);\n            }\n        }\n        timeoutId = setTimeout(settle, ms);\n    });\n\n    delayPromise.clear = () => {\n        clearTimeout(timeoutId);\n		timeoutId = null;\n		settle();\n    };\n\n    return delayPromise;\n}\n\nconst createWithTimers = () => {\n    const delay = createDelay({willResolve: true});\n    delay.reject = createDelay({willResolve: false});\n    delay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n    return delay;\n}\nconst delay5 = createWithTimers();\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"36-第六版-取消功能",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#36-第六版-取消功能",children:"#"}),"3.6 第六版 取消功能"]}),"\n",(0,l.jsx)(n.p,{children:"我们查阅资料可以知道有 AbortController 可以实现取消功能。"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://caniuse.com/?search=AbortController",rel:"noopener noreferrer",target:"_blank",children:"caniuse AbortController"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/abort-controller",rel:"noopener noreferrer",target:"_blank",children:"npm abort-controller"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/AbortController/abort",rel:"noopener noreferrer",target:"_blank",children:"mdn AbortController"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://zh.javascript.info/fetch-abort",rel:"noopener noreferrer",target:"_blank",children:"fetch-abort"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/github/fetch#aborting-requests",rel:"noopener noreferrer",target:"_blank",children:"fetch#aborting-requests"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/yet-another-abortcontroller-polyfill",rel:"noopener noreferrer",target:"_blank",children:"yet-another-abortcontroller-polyfill"})}),"\n",(0,l.jsxs)(n.h4,{id:"361-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#361-使用",children:"#"}),"3.6.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"(async () => {\n    const abortController = new AbortController();\n\n    setTimeout(() => {\n        abortController.abort();\n    }, 500);\n\n    try {\n        await delay6(1000, {signal: abortController.signal});\n    } catch (error) {\n        // 500 milliseconds later\n        console.log(error.name)\n        //=> 'AbortError'\n    }\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"362-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#362-实现",children:"#"}),"3.6.2 实现"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n	const error = new Error('Delay aborted');\n	error.name = 'AbortError';\n	return error;\n};\n\nconst createDelay = ({willResolve}) => (ms, {value, signal} = {}) => {\n    if (signal && signal.aborted) {\n		return Promise.reject(createAbortError());\n	}\n\n    let timeoutId;\n    let settle;\n    let rejectFn;\n    const signalListener = () => {\n        clearTimeout(timeoutId);\n        rejectFn(createAbortError());\n    }\n    const cleanup = () => {\n		if (signal) {\n			signal.removeEventListener('abort', signalListener);\n		}\n	};\n    const delayPromise = new Promise((resolve, reject) => {\n        settle = () => {\n			cleanup();\n			if (willResolve) {\n				resolve(value);\n			} else {\n				reject(value);\n			}\n		};\n\n        rejectFn = reject;\n        timeoutId = setTimeout(settle, ms);\n    });\n\n    if (signal) {\n		signal.addEventListener('abort', signalListener, {once: true});\n	}\n\n    delayPromise.clear = () => {\n		clearTimeout(timeoutId);\n		timeoutId = null;\n		settle();\n	};\n\n    return delayPromise;\n}\n\nconst createWithTimers = () => {\n    const delay = createDelay({willResolve: true});\n    delay.reject = createDelay({willResolve: false});\n    delay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n    return delay;\n}\nconst delay6 = createWithTimers();\n"})}),"\n",(0,l.jsxs)(n.h3,{id:"37-第七版-自定义-cleartimeout-和-settimeout-函数",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#37-第七版-自定义-cleartimeout-和-settimeout-函数",children:"#"}),"3.7 第七版 自定义 clearTimeout 和 setTimeout 函数"]}),"\n",(0,l.jsxs)(n.h4,{id:"371-使用",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#371-使用",children:"#"}),"3.7.1 使用"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const customDelay = delay7.createWithTimers({clearTimeout, setTimeout});\n\n(async() => {\n    const result = await customDelay(100, {value: '我是若川'});\n\n    // Executed after 100 milliseconds\n    console.log(result);\n    //=> '我是若川'\n})();\n"})}),"\n",(0,l.jsxs)(n.h4,{id:"372-实现",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#372-实现",children:"#"}),"3.7.2 实现"]}),"\n",(0,l.jsxs)(n.p,{children:["传递 clearTimeout, setTimeout 两个参数替代上一版本的",(0,l.jsx)(n.code,{children:"clearTimeout，setTimeout"}),"。于是有了第七版。这也就是",(0,l.jsx)(n.a,{href:"",children:"delay"}),"的最终实现。"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:"const randomInteger = (minimum, maximum) => Math.floor((Math.random() * (maximum - minimum + 1)) + minimum);\n\nconst createAbortError = () => {\n	const error = new Error('Delay aborted');\n	error.name = 'AbortError';\n	return error;\n};\n\nconst createDelay = ({clearTimeout: defaultClear, setTimeout: set, willResolve}) => (ms, {value, signal} = {}) => {\n    if (signal && signal.aborted) {\n		return Promise.reject(createAbortError());\n	}\n\n    let timeoutId;\n    let settle;\n    let rejectFn;\n    const clear = defaultClear || clearTimeout;\n\n    const signalListener = () => {\n        clear(timeoutId);\n        rejectFn(createAbortError());\n    }\n    const cleanup = () => {\n		if (signal) {\n			signal.removeEventListener('abort', signalListener);\n		}\n	};\n    const delayPromise = new Promise((resolve, reject) => {\n        settle = () => {\n			cleanup();\n			if (willResolve) {\n				resolve(value);\n			} else {\n				reject(value);\n			}\n		};\n\n        rejectFn = reject;\n        timeoutId = (set || setTimeout)(settle, ms);\n    });\n\n    if (signal) {\n		signal.addEventListener('abort', signalListener, {once: true});\n	}\n\n    delayPromise.clear = () => {\n		clear(timeoutId);\n		timeoutId = null;\n		settle();\n	};\n\n    return delayPromise;\n}\n\nconst createWithTimers = clearAndSet => {\n    const delay = createDelay({...clearAndSet, willResolve: true});\n    delay.reject = createDelay({...clearAndSet, willResolve: false});\n    delay.range = (minimum, maximum, options) => delay(randomInteger(minimum, maximum), options);\n    return delay;\n}\nconst delay7 = createWithTimers();\ndelay7.createWithTimers = createWithTimers;\n"})}),"\n",(0,l.jsxs)(n.h2,{id:"4-axios-取消请求",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-axios-取消请求",children:"#"}),"4. axios 取消请求"]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"axios"}),"取消原理是：通过传递 ",(0,l.jsx)(n.code,{children:"config"})," 配置 ",(0,l.jsx)(n.code,{children:"cancelToken"})," 的形式，来取消的。判断有传",(0,l.jsx)(n.code,{children:"cancelToken"}),"，在 ",(0,l.jsx)(n.code,{children:"promise"})," 链式调用的 ",(0,l.jsx)(n.code,{children:"dispatchRequest"})," 抛出错误，在 ",(0,l.jsx)(n.code,{children:"adapter"})," 中 ",(0,l.jsx)(n.code,{children:"request.abort()"})," 取消请求，使 ",(0,l.jsx)(n.code,{children:"promise"})," 走向 ",(0,l.jsx)(n.code,{children:"rejected"}),"，被用户捕获取消信息。"]}),"\n",(0,l.jsxs)(n.p,{children:["更多查看我的 ",(0,l.jsx)(n.code,{children:"axios"})," 源码文章取消模块 ",(0,l.jsx)(n.a,{href:"https://juejin.cn/post/6844904019987529735#heading-26",rel:"noopener noreferrer",target:"_blank",children:"学习 axios 源码整体架构，取消模块"})]}),"\n",(0,l.jsxs)(n.h2,{id:"5-总结",children:[(0,l.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,l.jsxs)(n.p,{children:["我们从零开始实现了一个带取消功能比较完善的延迟函数。也就是 ",(0,l.jsx)(n.a,{href:"https://github.com/sindresorhus/delay/blob/main/index.js",rel:"noopener noreferrer",target:"_blank",children:"delay 70多行源码"}),"的实现。"]}),"\n",(0,l.jsxs)(n.p,{children:["包含支持随机时间结束、提前清除、取消、自定义 ",(0,l.jsx)(n.code,{children:"clearTimeout、setTimeout"}),"等功能。"]}),"\n",(0,l.jsxs)(n.p,{children:["取消使用了 ",(0,l.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/AbortController/abort",rel:"noopener noreferrer",target:"_blank",children:"mdn AbortController"})," ，由于兼容性不太好，社区也有了相应的 ",(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/abort-controller",rel:"noopener noreferrer",target:"_blank",children:"npm abort-controller"})," 实现 ",(0,l.jsx)(n.code,{children:"polyfill"}),"。"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://www.npmjs.com/package/yet-another-abortcontroller-polyfill",rel:"noopener noreferrer",target:"_blank",children:"yet-another-abortcontroller-polyfill"})}),"\n",(0,l.jsx)(n.p,{children:"建议克隆项目启动服务调试例子，印象会更加深刻。"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# 推荐克隆我的项目，保证与文章同步\ngit clone https://github.com/ruochuan12/delay-analysis.git\ncd delay-analysis\n# 我写的例子都在 examples 这个文件夹中，可以启动服务本地查看调试\nnpx http-server examples\n# 打开 http://localhost:8080\n"})}),"\n",(0,l.jsxs)(n.p,{children:["最后可以持续关注我@若川。欢迎加我微信 ",(0,l.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,l.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，每周大家一起学习200行左右的源码，共同进步。"]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,l.jsx)(n,Object.assign({},e,{children:(0,l.jsx)(t,e)})):t(e)}let o=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["delay%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-环境准备",text:"2. 环境准备",depth:2},{id:"3-delay",text:"3. delay",depth:2},{id:"31-第一版-简版延迟",text:"3.1 第一版 简版延迟",depth:3},{id:"311-使用",text:"3.1.1 使用",depth:4},{id:"312-实现",text:"3.1.2 实现",depth:4},{id:"32-第二版-传递-value-参数作为结果",text:"3.2 第二版 传递 value 参数作为结果",depth:3},{id:"321-使用",text:"3.2.1 使用",depth:4},{id:"322-实现",text:"3.2.2 实现",depth:4},{id:"33-第三版-willresolve-参数决定成功还是失败",text:"3.3 第三版 willResolve 参数决定成功还是失败。",depth:3},{id:"331-使用",text:"3.3.1 使用",depth:4},{id:"332-实现",text:"3.3.2 实现",depth:4},{id:"34-第四版-一定时间范围内随机获得结果",text:"3.4 第四版 一定时间范围内随机获得结果",depth:3},{id:"341-使用",text:"3.4.1 使用",depth:4},{id:"342-实现",text:"3.4.2 实现",depth:4},{id:"35-第五版-提前清除",text:"3.5 第五版 提前清除",depth:3},{id:"351-使用",text:"3.5.1 使用",depth:4},{id:"352-实现",text:"3.5.2 实现",depth:4},{id:"36-第六版-取消功能",text:"3.6 第六版 取消功能",depth:3},{id:"361-使用",text:"3.6.1 使用",depth:4},{id:"362-实现",text:"3.6.2 实现",depth:4},{id:"37-第七版-自定义-cleartimeout-和-settimeout-函数",text:"3.7 第七版 自定义 clearTimeout 和 setTimeout 函数",depth:3},{id:"371-使用",text:"3.7.1 使用",depth:4},{id:"372-实现",text:"3.7.2 实现",depth:4},{id:"4-axios-取消请求",text:"4. axios 取消请求",depth:2},{id:"5-总结",text:"5. 总结",depth:2}],title:"面试官：请手写一个带取消功能的延迟函数，axios 取消功能的原理是什么",headingTitle:"面试官：请手写一个带取消功能的延迟函数，axios 取消功能的原理是什么",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,r){r.d(n,{Z:()=>o});var l=r(52676),a=r(75271),s=r(92815);r(18544);let t={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function i(e,n,r){let l=Object.keys(t).includes(n)?n:r;return t[l](e)}let o=e=>{let{defaultLocale:n="en-US"}=e,r=(0,s.Vi)().page.readingTimeData,t=(0,s.Jr)(),o=(0,s.e7)(),[c,d]=(0,a.useState)(i(r,t,n));return(0,a.useEffect)(()=>{d(i(r,t,n))},[t,r]),(0,l.jsx)("span",{"data-dark":String(o),className:"rp-reading-time",children:c})}}}]);