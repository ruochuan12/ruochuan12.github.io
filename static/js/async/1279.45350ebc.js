"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["1279"],{88980:function(e,r,n){e.exports=n.p+"static/image/break-point.4038a63f.png"},94931:function(e,r,n){e.exports=n.p+"static/image/native-esm.c58dfc4d.png"},61930:function(e,r,n){e.exports=n.p+"static/image/node.js-debugger.267a2f18.jpg"},98120:function(e,r,n){e.exports=n.p+"static/image/original.a94e133f.png"},50265:function(e,r,n){e.exports=n.p+"static/image/package.json-test.2d55b22e.png"},96123:function(e,r,n){e.exports=n.p+"static/image/test.a6c44ccf.png"},84575:function(e,r,n){e.exports=n.p+"static/image/vue-middleware.c81f3153.png"},20151:function(e,r,n){n.r(r),n.d(r,{default:()=>x});var s=n(52676),d=n(40453),t=n(20713),i=n(94931),a=n(96123),c=n(50265),l=n(61930),o=n(98120),h=n(84575),u=n(88980);function p(e){let r=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",strong:"strong",code:"code",pre:"pre",ul:"ul",li:"li",img:"img",h3:"h3",h4:"h4"},(0,d.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.h1,{id:"尤雨溪几年前开发的玩具-vite才100多行代码却十分有助于理解-vite-原理",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#尤雨溪几年前开发的玩具-vite才100多行代码却十分有助于理解-vite-原理",children:"#"}),"尤雨溪几年前开发的“玩具 vite”，才100多行代码，却十分有助于理解 vite 原理"]}),"\n",(0,s.jsx)(t.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(r.h2,{id:"1-前言",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["大家好，我是",(0,s.jsx)(r.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。欢迎关注我的",(0,s.jsx)(r.a,{href:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/13/16efe57ddc7c9eb3~tplv-t2oaga2asx-image.image",title:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/12/13/16efe57ddc7c9eb3~tplv-t2oaga2asx-image.image",rel:"noopener noreferrer",target:"_blank",children:"公众号若川视野"}),"，最近组织了",(0,s.jsx)(r.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(r.strong,{children:"源码共读活动"})}),"，感兴趣的可以加我微信 ",(0,s.jsx)(r.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与，已进行两个多月，大家一起交流学习，共同进步。"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["想学源码，极力推荐之前我写的",(0,s.jsx)(r.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,s.jsx)(r.code,{children:"jQuery"}),"、",(0,s.jsx)(r.code,{children:"underscore"}),"、",(0,s.jsx)(r.code,{children:"lodash"}),"、",(0,s.jsx)(r.code,{children:"vuex"}),"、",(0,s.jsx)(r.code,{children:"sentry"}),"、",(0,s.jsx)(r.code,{children:"axios"}),"、",(0,s.jsx)(r.code,{children:"redux"}),"、",(0,s.jsx)(r.code,{children:"koa"}),"、",(0,s.jsx)(r.code,{children:"vue-devtools"}),"、",(0,s.jsx)(r.code,{children:"vuex4"}),"、",(0,s.jsx)(r.code,{children:"koa-compose"}),"、",(0,s.jsx)(r.code,{children:"vue-next-release"}),"、",(0,s.jsx)(r.code,{children:"vue-this"}),"、",(0,s.jsx)(r.code,{children:"create-vue"}),"等10余篇源码文章。"]}),"\n",(0,s.jsxs)(r.p,{children:["最近组织了",(0,s.jsx)(r.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，大家一起学习源码。于是各种搜寻值得我们学习，且代码行数不多的源码。"]}),"\n",(0,s.jsxs)(r.p,{children:["在 ",(0,s.jsx)(r.a,{href:"https://github.com/vuejs",rel:"noopener noreferrer",target:"_blank",children:"vuejs组织"})," 下，找到了尤雨溪几年前写的“玩具 vite”\n",(0,s.jsx)(r.a,{href:"https://github.com/vuejs/vue-dev-server",rel:"noopener noreferrer",target:"_blank",children:"vue-dev-server"}),"，发现100来行代码，很值得学习。于是有了这篇文章。"]}),"\n",(0,s.jsx)(r.p,{children:"阅读本文，你将学到："}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-sh",children:"1. 学会 vite 简单原理\n2. 学会使用 VSCode 调试源码\n3. 学会如何编译 Vue 单文件组件\n4. 学会如何使用 recast 生成 ast 转换文件\n5. 如何加载包文件\n6. 等等\n"})}),"\n",(0,s.jsxs)(r.h2,{id:"2-vue-dev-server-它的原理是什么",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#2-vue-dev-server-它的原理是什么",children:"#"}),"2. vue-dev-server 它的原理是什么"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"https://github.com/vuejs/vue-dev-server#how-it-works",rel:"noopener noreferrer",target:"_blank",children:"vue-dev-server#how-it-works"}),"\n",(0,s.jsx)(r.code,{children:"README"})," 文档上有四句英文介绍。"]}),"\n",(0,s.jsxs)(r.p,{children:["发现",(0,s.jsx)(r.a,{href:"https://translate.google.cn/",rel:"noopener noreferrer",target:"_blank",children:"谷歌翻译"}),"的还比较准确，我就原封不动的搬运过来。"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"浏览器请求导入作为原生 ES 模块导入 - 没有捆绑。"}),"\n",(0,s.jsx)(r.li,{children:"服务器拦截对 *.vue 文件的请求，即时编译它们，然后将它们作为 JavaScript 发回。"}),"\n",(0,s.jsx)(r.li,{children:"对于提供在浏览器中工作的 ES 模块构建的库，只需直接从 CDN 导入它们。"}),"\n",(0,s.jsx)(r.li,{children:"导入到 .js 文件中的 npm 包（仅包名称）会即时重写以指向本地安装的文件。 目前，仅支持 vue 作为特例。 其他包可能需要进行转换才能作为本地浏览器目标 ES 模块公开。"}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["也可以看看",(0,s.jsx)(r.a,{href:"https://cn.vitejs.dev/guide/why.html",rel:"noopener noreferrer",target:"_blank",children:"vitejs 文档"}),"，了解下原理，文档中图画得非常好。"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Native ESM based dev serve",src:i})}),"\n",(0,s.jsx)(r.p,{children:"看完本文后，我相信你会有一个比较深刻的理解。"}),"\n",(0,s.jsxs)(r.h2,{id:"3-准备工作",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#3-准备工作",children:"#"}),"3. 准备工作"]}),"\n",(0,s.jsxs)(r.h3,{id:"31-克隆项目",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#31-克隆项目",children:"#"}),"3.1 克隆项目"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://github.com/ruochuan12/vue-dev-server-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库 vue-dev-server-analysis，求个star^_^"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-sh",children:"# 推荐克隆我的仓库\ngit clone https://github.com/ruochuan12/vue-dev-server-analysis.git\ncd vue-dev-server-analysis/vue-dev-server\n# npm i -g yarn\n# 安装依赖\nyarn\n\n# 或者克隆官方仓库\ngit clone https://github.com/vuejs/vue-dev-server.git\ncd vue-dev-server\n# npm i -g yarn\n# 安装依赖\nyarn\n"})}),"\n",(0,s.jsxs)(r.p,{children:["一般来说，我们看源码先从",(0,s.jsx)(r.code,{children:"package.json"}),"文件开始："]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'// vue-dev-server/package.json\n{\n  "name": "@vue/dev-server",\n  "version": "0.1.1",\n  "description": "Instant dev server for Vue single file components",\n  "main": "middleware.js",\n  // 指定可执行的命令\n  "bin": {\n    "vue-dev-server": "./bin/vue-dev-server.js"\n  },\n  "scripts": {\n    // 先跳转到 test 文件夹，再用 Node 执行 vue-dev-server 文件\n    "test": "cd test && node ../bin/vue-dev-server.js"\n  }\n}\n'})}),"\n",(0,s.jsxs)(r.p,{children:["根据 ",(0,s.jsx)(r.code,{children:"scripts"})," ",(0,s.jsx)(r.code,{children:"test"})," 命令。我们来看 ",(0,s.jsx)(r.code,{children:"test"})," 文件夹。"]}),"\n",(0,s.jsxs)(r.h3,{id:"32-test-文件夹",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#32-test-文件夹",children:"#"}),"3.2 test 文件夹"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"vue-dev-server/test"})," 文件夹下有三个文件，代码不长。"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"index.html"}),"\n",(0,s.jsx)(r.li,{children:"main.js"}),"\n",(0,s.jsx)(r.li,{children:"text.vue"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"如图下图所示。"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"test文件夹三个文件",src:a})}),"\n",(0,s.jsxs)(r.p,{children:["接着我们找到 ",(0,s.jsx)(r.code,{children:"vue-dev-server/bin/vue-dev-server.js"})," 文件，代码也不长。"]}),"\n",(0,s.jsxs)(r.h3,{id:"33-vue-dev-serverjs",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#33-vue-dev-serverjs",children:"#"}),"3.3 vue-dev-server.js"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"// vue-dev-server/bin/vue-dev-server.js\n#!/usr/bin/env node\n\nconst express = require('express')\nconst { vueMiddleware } = require('../middleware')\n\nconst app = express()\nconst root = process.cwd();\n\napp.use(vueMiddleware())\n\napp.use(express.static(root))\n\napp.listen(3000, () => {\n  console.log('server running at http://localhost:3000')\n})\n"})}),"\n",(0,s.jsxs)(r.p,{children:["原来就是",(0,s.jsx)(r.code,{children:"express"}),"启动了端口",(0,s.jsx)(r.code,{children:"3000"}),"的服务。重点在 ",(0,s.jsx)(r.code,{children:"vueMiddleware"})," 中间件。接着我们来调试这个中间件。"]}),"\n",(0,s.jsxs)(r.p,{children:["鉴于估计很多小伙伴没有用过",(0,s.jsx)(r.code,{children:"VSCode"}),"调试，这里详细叙述下如何调试源码。",(0,s.jsx)(r.strong,{children:"学会调试源码后，源码并没有想象中的那么难"}),"。"]}),"\n",(0,s.jsxs)(r.h3,{id:"34-用-vscode-调试项目",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#34-用-vscode-调试项目",children:"#"}),"3.4 用 VSCode 调试项目"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"vue-dev-server/bin/vue-dev-server.js"})," 文件中这行 ",(0,s.jsx)(r.code,{children:"app.use(vueMiddleware())"})," 打上断点。"]}),"\n",(0,s.jsxs)(r.p,{children:["找到 ",(0,s.jsx)(r.code,{children:"vue-dev-server/package.json"})," 的 ",(0,s.jsx)(r.code,{children:"scripts"}),"，把鼠标移动到 ",(0,s.jsx)(r.code,{children:"test"})," 命令上，会出现",(0,s.jsx)(r.code,{children:"运行脚本"}),"和",(0,s.jsx)(r.code,{children:"调试脚本"}),"命令。如下图所示，选择调试脚本。"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"调试",src:c})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"VSCode 调试 Node.js 说明",src:l})}),"\n",(0,s.jsxs)(r.p,{children:["点击",(0,s.jsx)(r.code,{children:"进入函数（F11）"}),"按钮可以进入 ",(0,s.jsx)(r.code,{children:"vueMiddleware"})," 函数。",(0,s.jsx)(r.strong,{children:"如果发现断点走到不是本项目的文件中，不想看，看不懂的情况，可以退出或者重新来过"}),"。",(0,s.jsxs)(r.strong,{children:["可以用浏览器无痕（隐私）模式（快捷键",(0,s.jsx)(r.code,{children:"Ctrl + Shift + N"}),"，防止插件干扰）打开 ",(0,s.jsx)(r.code,{children:"http://localhost:3000"}),"，可以继续调试 ",(0,s.jsx)(r.code,{children:"vueMiddleware"})," 函数返回的函数"]}),"。"]}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:["如果你的",(0,s.jsx)(r.code,{children:"VSCode"}),"不是中文（不习惯英文），可以安装",(0,s.jsx)(r.a,{href:"https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans",rel:"noopener noreferrer",target:"_blank",children:"简体中文插件"}),"。","\n如果 ",(0,s.jsx)(r.code,{children:"VSCode"})," 没有这个调试功能。建议更新到最新版的 ",(0,s.jsx)(r.code,{children:"VSCode"}),"（目前最新版本 ",(0,s.jsx)(r.code,{children:"v1.61.2"}),"）。"]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["接着我们来跟着调试学习 ",(0,s.jsx)(r.code,{children:"vueMiddleware"})," 源码。可以先看主线，在你觉得重要的地方继续断点调试。"]}),"\n",(0,s.jsxs)(r.h2,{id:"4-vuemiddleware-源码",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#4-vuemiddleware-源码",children:"#"}),"4. vueMiddleware 源码"]}),"\n",(0,s.jsxs)(r.h3,{id:"41-有无-vuemiddleware-中间件对比",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#41-有无-vuemiddleware-中间件对比",children:"#"}),"4.1 有无 vueMiddleware 中间件对比"]}),"\n",(0,s.jsxs)(r.p,{children:["不在调试情况状态下，我们可以在 ",(0,s.jsx)(r.code,{children:"vue-dev-server/bin/vue-dev-server.js"})," 文件中注释 ",(0,s.jsx)(r.code,{children:"app.use(vueMiddleware())"}),"，执行 ",(0,s.jsx)(r.code,{children:"npm run test"})," 打开 ",(0,s.jsx)(r.code,{children:"http://localhost:3000"}),"。"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"没有执行 vueMiddleware 中间件的原始情况",src:o})}),"\n",(0,s.jsx)(r.p,{children:"再启用中间件后，如下图。"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"执行了 vueMiddleware 中间文件变化",src:h})}),"\n",(0,s.jsx)(r.p,{children:"看图我们大概知道了有哪些区别。"}),"\n",(0,s.jsxs)(r.h3,{id:"42-vuemiddleware-中间件概览",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#42-vuemiddleware-中间件概览",children:"#"}),"4.2 vueMiddleware 中间件概览"]}),"\n",(0,s.jsxs)(r.p,{children:["我们可以找到",(0,s.jsx)(r.code,{children:"vue-dev-server/middleware.js"}),"，查看这个中间件函数的概览。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"// vue-dev-server/middleware.js\n\nconst vueMiddleware = (options = defaultOptions) => {\n  // 省略\n  return async (req, res, next) => {\n    // 省略\n    // 对 .vue 结尾的文件进行处理\n    if (req.path.endsWith('.vue')) {\n    // 对 .js 结尾的文件进行处理\n    } else if (req.path.endsWith('.js')) {\n    // 对 /__modules/ 开头的文件进行处理\n    } else if (req.path.startsWith('/__modules/')) {\n    } else {\n      next()\n    }\n  }\n}\nexports.vueMiddleware = vueMiddleware\n"})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"vueMiddleware"})," 最终返回一个函数。这个函数里主要做了四件事："]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["对 ",(0,s.jsx)(r.code,{children:".vue"})," 结尾的文件进行处理"]}),"\n",(0,s.jsxs)(r.li,{children:["对 ",(0,s.jsx)(r.code,{children:".js"})," 结尾的文件进行处理"]}),"\n",(0,s.jsxs)(r.li,{children:["对 ",(0,s.jsx)(r.code,{children:"/__modules/"})," 开头的文件进行处理"]}),"\n",(0,s.jsxs)(r.li,{children:["如果不是以上三种情况，执行 ",(0,s.jsx)(r.code,{children:"next"})," 方法，把控制权交给下一个中间件"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"接着我们来看下具体是怎么处理的。"}),"\n",(0,s.jsx)(r.p,{children:"我们也可以断点这些重要的地方来查看实现。比如："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"重要断点",src:u})}),"\n",(0,s.jsxs)(r.h3,{id:"43-对-vue-结尾的文件进行处理",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#43-对-vue-结尾的文件进行处理",children:"#"}),"4.3 对 .vue 结尾的文件进行处理"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"if (req.path.endsWith('.vue')) {\n  const key = parseUrl(req).pathname\n  let out = await tryCache(key)\n\n  if (!out) {\n    // Bundle Single-File Component\n    const result = await bundleSFC(req)\n    out = result\n    cacheData(key, out, result.updateTime)\n  }\n\n  send(res, out.code, 'application/javascript')\n}\n"})}),"\n",(0,s.jsxs)(r.h4,{id:"431-bundlesfc-编译单文件组件",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#431-bundlesfc-编译单文件组件",children:"#"}),"4.3.1 bundleSFC 编译单文件组件"]}),"\n",(0,s.jsxs)(r.p,{children:["这个函数，根据 ",(0,s.jsx)(r.a,{href:"https://github.com/vuejs/vue-component-compiler",rel:"noopener noreferrer",target:"_blank",children:"@vue/component-compiler"})," 转换单文件组件，最终返回浏览器能够识别的文件。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const vueCompiler = require('@vue/component-compiler')\nasync function bundleSFC (req) {\n  const { filepath, source, updateTime } = await readSource(req)\n  const descriptorResult = compiler.compileToDescriptor(filepath, source)\n  const assembledResult = vueCompiler.assemble(compiler, filepath, {\n    ...descriptorResult,\n    script: injectSourceMapToScript(descriptorResult.script),\n    styles: injectSourceMapsToStyles(descriptorResult.styles)\n  })\n  return { ...assembledResult, updateTime }\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["接着我们来看 ",(0,s.jsx)(r.code,{children:"readSource"})," 函数实现。"]}),"\n",(0,s.jsxs)(r.h4,{id:"432-readsource-读取文件资源",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#432-readsource-读取文件资源",children:"#"}),"4.3.2 readSource 读取文件资源"]}),"\n",(0,s.jsxs)(r.p,{children:["这个函数主要作用：根据请求获取文件资源。返回文件路径 ",(0,s.jsx)(r.code,{children:"filepath"}),"、资源 ",(0,s.jsx)(r.code,{children:"source"}),"、和更新时间 ",(0,s.jsx)(r.code,{children:"updateTime"}),"。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const path = require('path')\nconst fs = require('fs')\nconst readFile = require('util').promisify(fs.readFile)\nconst stat = require('util').promisify(fs.stat)\nconst parseUrl = require('parseurl')\nconst root = process.cwd()\n\nasync function readSource(req) {\n  const { pathname } = parseUrl(req)\n  const filepath = path.resolve(root, pathname.replace(/^\\//, ''))\n  return {\n    filepath,\n    source: await readFile(filepath, 'utf-8'),\n    updateTime: (await stat(filepath)).mtime.getTime()\n  }\n}\n\nexports.readSource = readSource\n"})}),"\n",(0,s.jsx)(r.p,{children:"接着我们来看对 .js 文件的处理"}),"\n",(0,s.jsxs)(r.h3,{id:"44-对-js-结尾的文件进行处理",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#44-对-js-结尾的文件进行处理",children:"#"}),"4.4 对 .js 结尾的文件进行处理"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"if (req.path.endsWith('.js')) {\n  const key = parseUrl(req).pathname\n  let out = await tryCache(key)\n\n  if (!out) {\n    // transform import statements\n    // 转换 import 语句\n    // import Vue from 'vue'\n    // => import Vue from \"/__modules/vue\"\n    const result = await readSource(req)\n    out = transformModuleImports(result.source)\n    cacheData(key, out, result.updateTime)\n  }\n\n  send(res, out, 'application/javascript')\n}\n"})}),"\n",(0,s.jsxs)(r.p,{children:["针对 ",(0,s.jsx)(r.code,{children:"vue-dev-server/test/main.js"})," 转换"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import Vue from 'vue'\nimport App from './test.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n\n// 公众号：若川视野\n// 加微信 ruochuan12\n// 参加源码共读，一起学习源码\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import Vue from \"/__modules/vue\"\nimport App from './test.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n\n// 公众号：若川视野\n// 加微信 ruochuan12\n// 参加源码共读，一起学习源码\n"})}),"\n",(0,s.jsxs)(r.h4,{id:"441-transformmoduleimports-转换-import-引入",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#441-transformmoduleimports-转换-import-引入",children:"#"}),"4.4.1 transformModuleImports 转换 import 引入"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://github.com/benjamn/recast",rel:"noopener noreferrer",target:"_blank",children:"recast"})}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://github.com/npm/validate-npm-package-name",rel:"noopener noreferrer",target:"_blank",children:"validate-npm-package-name"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"const recast = require('recast')\nconst isPkg = require('validate-npm-package-name')\n\nfunction transformModuleImports(code) {\n  const ast = recast.parse(code)\n  recast.types.visit(ast, {\n    visitImportDeclaration(path) {\n      const source = path.node.source.value\n      if (!/^\\.\\/?/.test(source) && isPkg(source)) {\n        path.node.source = recast.types.builders.literal(`/__modules/${source}`)\n      }\n      this.traverse(path)\n    }\n  })\n  return recast.print(ast).code\n}\n\nexports.transformModuleImports = transformModuleImports\n"})}),"\n",(0,s.jsxs)(r.p,{children:["也就是针对 ",(0,s.jsx)(r.code,{children:"npm"})," 包转换。 这里就是 ",(0,s.jsx)(r.code,{children:'"/__modules/vue"'})]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"import Vue from 'vue' => import Vue from \"/__modules/vue\"\n"})}),"\n",(0,s.jsxs)(r.h3,{id:"45-对-__modules-开头的文件进行处理",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#45-对-__modules-开头的文件进行处理",children:"#"}),"4.5 对 /__modules/ 开头的文件进行处理"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'import Vue from "/__modules/vue"\n'})}),"\n",(0,s.jsxs)(r.p,{children:["这段代码最终返回的是读取路径 ",(0,s.jsx)(r.code,{children:"vue-dev-server/node_modules/vue/dist/vue.esm.browser.js"})," 下的文件。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"if (req.path.startsWith('/__modules/')) {\n  //\n  const key = parseUrl(req).pathname\n  const pkg = req.path.replace(/^\\/__modules\\//, '')\n\n  let out = await tryCache(key, false) // Do not outdate modules\n  if (!out) {\n    out = (await loadPkg(pkg)).toString()\n    cacheData(key, out, false) // Do not outdate modules\n  }\n\n  send(res, out, 'application/javascript')\n}\n"})}),"\n",(0,s.jsxs)(r.h4,{id:"451-loadpkg-加载包这里只支持vue文件",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#451-loadpkg-加载包这里只支持vue文件",children:"#"}),"4.5.1 loadPkg 加载包（这里只支持Vue文件）"]}),"\n",(0,s.jsxs)(r.p,{children:["目前只支持 ",(0,s.jsx)(r.code,{children:"Vue"})," 文件，也就是读取路径 ",(0,s.jsx)(r.code,{children:"vue-dev-server/node_modules/vue/dist/vue.esm.browser.js"})," 下的文件返回。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"// vue-dev-server/loadPkg.js\nconst fs = require('fs')\nconst path = require('path')\nconst readFile = require('util').promisify(fs.readFile)\n\nasync function loadPkg(pkg) {\n  if (pkg === 'vue') {\n    // 路径\n    // vue-dev-server/node_modules/vue/dist\n    const dir = path.dirname(require.resolve('vue'))\n    const filepath = path.join(dir, 'vue.esm.browser.js')\n    return readFile(filepath)\n  }\n  else {\n    // TODO\n    // check if the package has a browser es module that can be used\n    // otherwise bundle it with rollup on the fly?\n    throw new Error('npm imports support are not ready yet.')\n  }\n}\n\nexports.loadPkg = loadPkg\n"})}),"\n",(0,s.jsx)(r.p,{children:"至此，我们就基本分析完毕了主文件和一些引入的文件。对主流程有个了解。"}),"\n",(0,s.jsxs)(r.h2,{id:"5-总结",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,s.jsx)(r.p,{children:"最后我们来看上文中有无 vueMiddleware 中间件的两张图总结一下："}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"没有执行 vueMiddleware 中间件的原始情况",src:o})}),"\n",(0,s.jsx)(r.p,{children:"启用中间件后，如下图。"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"执行了 vueMiddleware 中间文件变化",src:h})}),"\n",(0,s.jsxs)(r.p,{children:["浏览器支持原生 ",(0,s.jsx)(r.code,{children:"type=module"})," 模块请求加载。",(0,s.jsx)(r.code,{children:"vue-dev-server"})," 对其拦截处理，返回浏览器支持内容，因为无需打包构建，所以速度很快。"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-html",children:"<script type=\"module\">\n    import './main.js'\n<\/script>\n"})}),"\n",(0,s.jsxs)(r.h3,{id:"51-import-vue-from-vue-转换",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#51-import-vue-from-vue-转换",children:"#"}),"5.1 import Vue from 'vue' 转换"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"// vue-dev-server/test/main.js\nimport Vue from 'vue'\nimport App from './test.vue'\n\nnew Vue({\n  render: h => h(App)\n}).$mount('#app')\n"})}),"\n",(0,s.jsxs)(r.p,{children:["main.js 中的 import 语句\nimport Vue from 'vue'\n通过 ",(0,s.jsx)(r.a,{href:"https://github.com/benjamn/recast",rel:"noopener noreferrer",target:"_blank",children:"recast"})," 生成 ast 转换成 ",(0,s.jsx)(r.code,{children:'import Vue from "/__modules/vue"'}),"\n而最终返回给浏览器的是 ",(0,s.jsx)(r.code,{children:"vue-dev-server/node_modules/vue/dist/vue.esm.browser.js"})]}),"\n",(0,s.jsxs)(r.h3,{id:"52-import-app-from-testvue-转换",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#52-import-app-from-testvue-转换",children:"#"}),"5.2 import App from './test.vue' 转换"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.code,{children:"main.js"})," 中的引入 ",(0,s.jsx)(r.code,{children:".vue"})," 的文件，",(0,s.jsx)(r.code,{children:"import App from './test.vue'"}),"\n则用 ",(0,s.jsx)(r.a,{href:"https://github.com/vuejs/vue-component-compiler",rel:"noopener noreferrer",target:"_blank",children:"@vue/component-compiler"})," 转换成浏览器支持的文件。"]}),"\n",(0,s.jsxs)(r.h3,{id:"53-后续还能做什么",children:[(0,s.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#53-后续还能做什么",children:"#"}),"5.3 后续还能做什么？"]}),"\n",(0,s.jsxs)(r.p,{children:["鉴于文章篇幅有限，缓存 ",(0,s.jsx)(r.code,{children:"tryCache"})," 部分目前没有分析。简单说就是使用了 ",(0,s.jsx)(r.a,{href:"https://github.com/isaacs/node-lru-cache",rel:"noopener noreferrer",target:"_blank",children:"node-lru-cache"})," ",(0,s.jsx)(r.code,{children:"最近最少使用"})," 来做缓存的（这个算法常考）。后续应该会分析这个仓库的源码，欢迎持续关注我@若川。"]}),"\n",(0,s.jsxs)(r.p,{children:["非常建议读者朋友按照文中方法使用",(0,s.jsx)(r.code,{children:"VSCode"}),"调试 ",(0,s.jsx)(r.code,{children:"vue-dev-server"})," 源码。源码中还有很多细节文中由于篇幅有限，未全面展开讲述。"]}),"\n",(0,s.jsxs)(r.p,{children:["值得一提的是",(0,s.jsxs)(r.a,{href:"https://github.com/vuejs/vue-dev-server/tree/master",rel:"noopener noreferrer",target:"_blank",children:["这个仓库的 ",(0,s.jsx)(r.code,{children:"master"})," 分支"]}),"，是尤雨溪两年前写的，相对本文会比较复杂，有余力的读者可以学习。"]}),"\n",(0,s.jsxs)(r.p,{children:["也可以直接去看 ",(0,s.jsx)(r.a,{href:"https://github.com/vitejs/vite",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(r.code,{children:"vite"})})," 源码。"]}),"\n",(0,s.jsx)(r.p,{children:"看完本文，也许你就能发现其实前端能做的事情越来越多，不由感慨：前端水深不可测，唯有持续学习。"}),"\n",(0,s.jsxs)(r.p,{children:["最后欢迎加我微信 ",(0,s.jsx)(r.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,s.jsx)(r.a,{href:"https://www.yuque.com/ruochuan12/notice",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，大家一起学习源码，共同进步。"]})]})}function j(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,d.ah)(),e.components);return r?(0,s.jsx)(r,Object.assign({},e,{children:(0,s.jsx)(p,e)})):p(e)}let x=j;j.__RSPRESS_PAGE_META={},j.__RSPRESS_PAGE_META["vue-dev-server%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-vue-dev-server-它的原理是什么",text:"2. vue-dev-server 它的原理是什么",depth:2},{id:"3-准备工作",text:"3. 准备工作",depth:2},{id:"31-克隆项目",text:"3.1 克隆项目",depth:3},{id:"32-test-文件夹",text:"3.2 test 文件夹",depth:3},{id:"33-vue-dev-serverjs",text:"3.3 vue-dev-server.js",depth:3},{id:"34-用-vscode-调试项目",text:"3.4 用 VSCode 调试项目",depth:3},{id:"4-vuemiddleware-源码",text:"4. vueMiddleware 源码",depth:2},{id:"41-有无-vuemiddleware-中间件对比",text:"4.1 有无 vueMiddleware 中间件对比",depth:3},{id:"42-vuemiddleware-中间件概览",text:"4.2 vueMiddleware 中间件概览",depth:3},{id:"43-对-vue-结尾的文件进行处理",text:"4.3 对 .vue 结尾的文件进行处理",depth:3},{id:"431-bundlesfc-编译单文件组件",text:"4.3.1 bundleSFC 编译单文件组件",depth:4},{id:"432-readsource-读取文件资源",text:"4.3.2 readSource 读取文件资源",depth:4},{id:"44-对-js-结尾的文件进行处理",text:"4.4 对 .js 结尾的文件进行处理",depth:3},{id:"441-transformmoduleimports-转换-import-引入",text:"4.4.1 transformModuleImports 转换 import 引入",depth:4},{id:"45-对-__modules-开头的文件进行处理",text:"4.5 对 /__modules/ 开头的文件进行处理",depth:3},{id:"451-loadpkg-加载包这里只支持vue文件",text:"4.5.1 loadPkg 加载包（这里只支持Vue文件）",depth:4},{id:"5-总结",text:"5. 总结",depth:2},{id:"51-import-vue-from-vue-转换",text:"5.1 import Vue from 'vue' 转换",depth:3},{id:"52-import-app-from-testvue-转换",text:"5.2 import App from './test.vue' 转换",depth:3},{id:"53-后续还能做什么",text:"5.3 后续还能做什么？",depth:3}],title:"尤雨溪几年前开发的“玩具 vite”，才100多行代码，却十分有助于理解 vite 原理",headingTitle:"尤雨溪几年前开发的“玩具 vite”，才100多行代码，却十分有助于理解 vite 原理",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,r,n){n.d(r,{Z:()=>c});var s=n(52676),d=n(75271),t=n(92815);n(18544);let i={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function a(e,r,n){let s=Object.keys(i).includes(r)?r:n;return i[s](e)}let c=e=>{let{defaultLocale:r="en-US"}=e,n=(0,t.Vi)().page.readingTimeData,i=(0,t.Jr)(),c=(0,t.e7)(),[l,o]=(0,d.useState)(a(n,i,r));return(0,d.useEffect)(()=>{o(a(n,i,r))},[i,n]),(0,s.jsx)("span",{"data-dark":String(c),className:"rp-reading-time",children:l})}}}]);