"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["7441"],{86377:function(e,n,r){r.r(n),r.d(n,{default:()=>d});var i=r(52676),s=r(40453),a=r(20713);let t=r.p+"static/image/ecma.b55629a8.png";function c(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",del:"del",pre:"pre",h3:"h3",img:"img"},(0,s.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"初学者也能看懂的-vue2-源码中那些实用的基础工具函数",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#初学者也能看懂的-vue2-源码中那些实用的基础工具函数",children:"#"}),"初学者也能看懂的 Vue2 源码中那些实用的基础工具函数"]}),"\n",(0,i.jsx)(a.Z,{defaultLocale:"zh-CN"}),"\n",(0,i.jsxs)(n.h2,{id:"1-前言",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["大家好，我是",(0,i.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。欢迎关注我的",(0,i.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"公众号若川视野"}),"，最近组织了",(0,i.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，感兴趣的可以加我微信 ",(0,i.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 参与，从8月份开始，如今已进行近三个月，大家一起交流学习，共同进步，很多人都表示收获颇丰。"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["想学源码，极力推荐之前我写的",(0,i.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"})," 包含",(0,i.jsx)(n.code,{children:"jQuery"}),"、",(0,i.jsx)(n.code,{children:"underscore"}),"、",(0,i.jsx)(n.code,{children:"lodash"}),"、",(0,i.jsx)(n.code,{children:"vuex"}),"、",(0,i.jsx)(n.code,{children:"sentry"}),"、",(0,i.jsx)(n.code,{children:"axios"}),"、",(0,i.jsx)(n.code,{children:"redux"}),"、",(0,i.jsx)(n.code,{children:"koa"}),"、",(0,i.jsx)(n.code,{children:"vue-devtools"}),"、",(0,i.jsx)(n.code,{children:"vuex4"}),"、",(0,i.jsx)(n.code,{children:"koa-compose"}),"、",(0,i.jsx)(n.code,{children:"vue 3.2 发布"}),"、",(0,i.jsx)(n.code,{children:"vue-this"}),"、",(0,i.jsx)(n.code,{children:"create-vue"}),"、",(0,i.jsx)(n.code,{children:"玩具vite"}),"等10余篇源码文章。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/ruochuan12/vue-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库 vue-analysis，求个star^_^"})}),"\n",(0,i.jsxs)(n.p,{children:["最近组织了",(0,i.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"源码共读活动"}),"，大家一起学习源码。于是搜寻各种值得我们学习，且代码行数不多的源码。"]}),"\n",(0,i.jsxs)(n.p,{children:["之前写了 ",(0,i.jsx)(n.code,{children:"Vue3"})," 相关的两篇文章。"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6994976281053888519",rel:"noopener noreferrer",target:"_blank",children:"初学者也能看懂的 Vue3 源码中那些实用的基础工具函数"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["这篇写了",(0,i.jsx)(n.strong,{children:"如何学习 JavaScript 基础知识"}),"，",(0,i.jsx)(n.strong,{children:"推荐了很多书籍和学习资料"}),"，",(0,i.jsx)(n.strong,{children:"还有我的一些经验分享"}),"。"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6997943192851054606",rel:"noopener noreferrer",target:"_blank",children:"Vue 3.2 发布了，那尤雨溪是怎么发布 Vue.js 的？"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["参加",(0,i.jsx)(n.a,{href:"/(https:/juejin.cn/pin/7005372623400435725)",children:"源码共读"}),"的读者反馈，TA 其实还是用着 ",(0,i.jsx)(n.code,{children:"Vue2"}),"。能不能写篇 ",(0,i.jsx)(n.code,{children:"Vue2"})," 基础工具函数。作为一名",(0,i.jsx)(n.del,{children:"知识博主"}),(0,i.jsx)(n.strong,{children:"卑微号主"}),"，本着",(0,i.jsx)(n.strong,{children:"学我所学，为我所用，帮助他人"}),"的宗旨，于是写上了这篇文章。算是 ",(0,i.jsx)(n.code,{children:"Vue3"})," 工具函数的",(0,i.jsx)(n.strong,{children:"姐妹篇"}),"，本文和这篇文章会有类似的地方。"]}),"\n",(0,i.jsx)(n.p,{children:"阅读本文，你将学到："}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"1. Vue2 源码 shared 模块中的几十个实用工具函数\n2. 如何学习源码中优秀代码和思想，投入到自己的项目中\n3. 如何学习 JavaScript 基础知识，会推荐很多学习资料\n4. 我的一些经验分享\n5. 等等\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"2-环境准备",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-环境准备",children:"#"}),"2. 环境准备"]}),"\n",(0,i.jsxs)(n.h3,{id:"21-读开源项目-贡献指南",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#21-读开源项目-贡献指南",children:"#"}),"2.1 读开源项目 贡献指南"]}),"\n",(0,i.jsxs)(n.p,{children:["打开 ",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue",rel:"noopener noreferrer",target:"_blank",children:"vue 仓库"}),"，\n开源项目一般都能在 ",(0,i.jsx)(n.code,{children:"README.md"})," 或者 ",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md",rel:"noopener noreferrer",target:"_blank",children:".github/contributing.md"})," 找到贡献指南。"]}),"\n",(0,i.jsx)(n.p,{children:"而贡献指南写了很多关于参与项目开发的信息。比如怎么跑起来，项目目录结构是怎样的。怎么投入开发，需要哪些知识储备等。"}),"\n",(0,i.jsxs)(n.p,{children:["我们可以在 ",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue-next/blob/master/.github/contributing.md#project-structure",rel:"noopener noreferrer",target:"_blank",children:"项目目录结构"})," 描述中，找到",(0,i.jsx)(n.code,{children:"shared"}),"模块。"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"shared"}),": contains utilities shared across the entire codebase."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"README.md"})," 和 ",(0,i.jsx)(n.code,{children:"contributing.md"})," 一般都是英文的。可能会难倒一部分人。其实看不懂，完全可以可以借助划词翻译，整页翻译和谷歌翻译等翻译工具。再把英文加入后续学习计划。"]}),"\n",(0,i.jsxs)(n.p,{children:["本文就是讲 ",(0,i.jsx)(n.code,{children:"shared"})," 模块，对应的文件路径是：",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/tree/dev/src/shared/utils.js",rel:"noopener noreferrer",target:"_blank",children:(0,i.jsx)(n.code,{children:"vue/vue/src/shared"})}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["也可以用",(0,i.jsx)(n.code,{children:"github1s"}),"访问，速度更快。",(0,i.jsx)(n.a,{href:"https://github1s.com/vuejs/vue/blob/dev/src/shared/util.js",rel:"noopener noreferrer",target:"_blank",children:"github1s vue/vue/src/shared"})]}),"\n",(0,i.jsxs)(n.h3,{id:"22-为了降低文章难度直接学习打包后的源码",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#22-为了降低文章难度直接学习打包后的源码",children:"#"}),"2.2 为了降低文章难度，直接学习打包后的源码"]}),"\n",(0,i.jsxs)(n.p,{children:["源代码的代码",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/tree/dev/src/shared/utils.js",rel:"noopener noreferrer",target:"_blank",children:(0,i.jsx)(n.code,{children:"vue/vue/src/shared"})}),"，使用了",(0,i.jsx)(n.a,{href:"https://flowtype.org/",rel:"noopener noreferrer",target:"_blank",children:"Flow"})," 类型，可能不太好理解。"]}),"\n",(0,i.jsxs)(n.p,{children:["为了降低文章难度，我们直接学习源码仓库中的",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/blob/dev/dist/vue.js#L14-L379",rel:"noopener noreferrer",target:"_blank",children:"打包后的 dist/vue.js 14行到379行"}),"。"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["当然，前面可能比较啰嗦。我可以直接讲 ",(0,i.jsx)(n.code,{children:"3. 工具函数"}),"。但通过我上文的介绍，即使是初学者，都能看懂一些开源项目源码，也许就会有一定的成就感。\n另外，面试问到被类似的问题或者笔试题时，你说看",(0,i.jsx)(n.code,{children:"Vue2"}),"源码学到的，面试官绝对对你刮目相看。"]}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"3-工具函数",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-工具函数",children:"#"}),"3. 工具函数"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/blob/dev/dist/vue.js#L14-L379",rel:"noopener noreferrer",target:"_blank",children:"打包后的 vue.js 14行到379行"}),"，接下来就是解释其中的这些方法。"]}),"\n",(0,i.jsxs)(n.h3,{id:"31-emptyobject",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-emptyobject",children:"#"}),"3.1 emptyObject"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n/*  */\nvar emptyObject = Object.freeze({});\n"})}),"\n",(0,i.jsx)(n.p,{children:"冻结对象。第一层无法修改。对象中也有判断是否冻结的方法。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Object.isFrozen(emptyObject); // true\n"})}),"\n",(0,i.jsxs)(n.p,{children:["关于对象 ",(0,i.jsx)(n.code,{children:"API"})," 推荐看之前我的文章 ",(0,i.jsx)(n.a,{href:"https://ruochuan12.github.io/js-object-api/",rel:"noopener noreferrer",target:"_blank",children:"JavaScript 对象所有API解析"})]}),"\n",(0,i.jsxs)(n.p,{children:["还可以看阮一峰老师的",(0,i.jsx)(n.a,{href:"https://es6.ruanyifeng.com/#docs/reflect",rel:"noopener noreferrer",target:"_blank",children:"ES6 入门书籍 reflect"})]}),"\n",(0,i.jsxs)(n.h3,{id:"32-isundef-是否是未定义",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-isundef-是否是未定义",children:"#"}),"3.2 isUndef 是否是未定义"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"33-isdef-是否是已经定义",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#33-isdef-是否是已经定义",children:"#"}),"3.3 isDef 是否是已经定义"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"JavaScript"}),"中假值有六个。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"false\nnull\nundefined\n0\n'' (空字符串)\nNaN\n"})}),"\n",(0,i.jsxs)(n.p,{children:["为了判断准确，Vue2 源码中封装了",(0,i.jsx)(n.code,{children:"isDef"}),"、 ",(0,i.jsx)(n.code,{children:"isTrue"}),"、",(0,i.jsx)(n.code,{children:"isFalse"}),"函数来准确判断。"]}),"\n",(0,i.jsx)(n.p,{children:"见名知意。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function isDef (v) {\n  return v !== undefined && v !== null\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"34-istrue-是否是-true",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#34-istrue-是否是-true",children:"#"}),"3.4 isTrue 是否是 true"]}),"\n",(0,i.jsx)(n.p,{children:"见名知意。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function isTrue (v) {\n  return v === true\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"35-isfalse-是否是-false",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#35-isfalse-是否是-false",children:"#"}),"3.5 isFalse 是否是 false"]}),"\n",(0,i.jsx)(n.p,{children:"见名知意。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function isFalse (v) {\n  return v === false\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"36-isprimitive-判断值是否是原始值",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#36-isprimitive-判断值是否是原始值",children:"#"}),"3.6 isPrimitive 判断值是否是原始值"]}),"\n",(0,i.jsxs)(n.p,{children:["判断是否是字符串、或者数字、或者 ",(0,i.jsx)(n.code,{children:"symbol"}),"、或者布尔值。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"37-isobject-判断是对象",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#37-isobject-判断是对象",children:"#"}),"3.7 isObject 判断是对象"]}),"\n",(0,i.jsxs)(n.p,{children:["因为 ",(0,i.jsx)(n.code,{children:"typeof null"})," 是 'object'。数组等用这个函数判断也是 true"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n// 例子:\nisObject([]) // true\n// 有时不需要严格区分数组和对象\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"38-torawtype-转换成原始类型",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#38-torawtype-转换成原始类型",children:"#"}),"3.8 toRawType 转换成原始类型"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Object.prototype.toString()"})," 方法返回一个表示该对象的字符串。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/toString",rel:"noopener noreferrer",target:"_blank",children:"mdn"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://262.ecma-international.org/6.0/#sec-object.prototype.tostring",rel:"noopener noreferrer",target:"_blank",children:"ecma 规范"}),"，说明了这些类型。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"ecma 规范",src:t})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://yanhaijing.com/es5/#book",rel:"noopener noreferrer",target:"_blank",children:"ECMAScript5.1 中文版"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n// 例子：\ntoRawType('') // 'String'\ntoRawType() // 'Undefined'\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"39-isplainobject-是否是纯对象",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#39-isplainobject-是否是纯对象",children:"#"}),"3.9 isPlainObject 是否是纯对象"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\n// 上文 isObject([]) 也是 true\n// 这个就是判断对象是纯对象的方法。\n// 例子：\nisPlainObject([]) // false\nisPlainObject({}) // true\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"310-isregexp-是否是正则表达式",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#310-isregexp-是否是正则表达式",children:"#"}),"3.10 isRegExp 是否是正则表达式"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n// 例子：\n// 判断是不是正则表达式\nisRegExp(/ruochuan/) // true\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"311-isvalidarrayindex-是否是可用的数组索引值",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#311-isvalidarrayindex-是否是可用的数组索引值",children:"#"}),"3.11 isValidArrayIndex 是否是可用的数组索引值"]}),"\n",(0,i.jsx)(n.p,{children:"数组可用的索引值是 0 ('0')、1 ('1') 、2 ('2') ..."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["该全局 ",(0,i.jsx)(n.code,{children:"isFinite()"})," 函数用来判断被传入的参数值是否为一个有限数值（",(0,i.jsx)(n.code,{children:"finite number"}),"）。在必要情况下，参数会首先转为一个数值。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/isFinite",rel:"noopener noreferrer",target:"_blank",children:"isFinite mdn"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"isFinite(Infinity);  // false\nisFinite(NaN);       // false\nisFinite(-Infinity); // false\n\nisFinite(0);         // true\nisFinite(2e64);      // true, 在更强壮的Number.isFinite(null)中将会得到false\n\nisFinite('0');       // true, 在更强壮的Number.isFinite('0')中将会得到false\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"312-ispromise-判断是否是-promise",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#312-ispromise-判断是否是-promise",children:"#"}),"3.12 isPromise 判断是否是 promise"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"function isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n// 例子：\n// 判断是不是Promise对象\nconst p1 = new Promise(function (resolve, reject) {\n    resolve('若川');\n});\nisPromise(p1); // true\n"})}),"\n",(0,i.jsxs)(n.p,{children:["这里用 ",(0,i.jsx)(n.code,{children:"isDef"})," 判断其实相对 ",(0,i.jsx)(n.code,{children:"isObject"})," 来判断 来说有点不严谨。但是够用。"]}),"\n",(0,i.jsxs)(n.h3,{id:"313-tostring-转字符串",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#313-tostring-转字符串",children:"#"}),"3.13 toString 转字符串"]}),"\n",(0,i.jsxs)(n.p,{children:["转换成字符串。是数组或者对象并且对象的 ",(0,i.jsx)(n.code,{children:"toString"})," 方法是 ",(0,i.jsx)(n.code,{children:"Object.prototype.toString"}),"，用 ",(0,i.jsx)(n.code,{children:"JSON.stringify"})," 转换。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"314-tonumber-转数字",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#314-tonumber-转数字",children:"#"}),"3.14 toNumber 转数字"]}),"\n",(0,i.jsx)(n.p,{children:"转换成数字。如果转换失败依旧返回原始字符串。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\ntoNumber('a') // 'a'\ntoNumber('1') // 1\ntoNumber('1a') // 1\ntoNumber('a1') // 'a1'\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"315-makemap-生成一个-map-对象",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#315-makemap-生成一个-map-对象",children:"#"}),"3.15 makeMap 生成一个 map （对象）"]}),"\n",(0,i.jsxs)(n.p,{children:["传入一个以逗号分隔的字符串，生成一个 ",(0,i.jsx)(n.code,{children:"map"}),"(键值对)，并且返回一个函数检测 ",(0,i.jsx)(n.code,{children:"key"})," 值在不在这个 ",(0,i.jsx)(n.code,{children:"map"})," 中。第二个参数是小写选项。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n// Object.create(null) 没有原型链的空对象\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"316-isbuiltintag-是否是内置的-tag",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#316-isbuiltintag-是否是内置的-tag",children:"#"}),"3.16 isBuiltInTag 是否是内置的 tag"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n// 返回的函数，第二个参数不区分大小写\nisBuiltInTag('slot') // true\nisBuiltInTag('component') // true\nisBuiltInTag('Slot') // true\nisBuiltInTag('Component') // true\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"317-isreservedattribute-是否是保留的属性",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#317-isreservedattribute-是否是保留的属性",children:"#"}),"3.17 isReservedAttribute 是否是保留的属性"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\nisReservedAttribute('key') // true\nisReservedAttribute('ref') // true\nisReservedAttribute('slot') // true\nisReservedAttribute('slot-scope') // true\nisReservedAttribute('is') // true\nisReservedAttribute('IS') // undefined\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"318-remove-移除数组中的中一项",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#318-remove-移除数组中的中一项",children:"#"}),"3.18 remove 移除数组中的中一项"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"splice"})," 其实是一个很耗性能的方法。删除数组中的一项，其他元素都要移动位置。"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"引申"}),"：",(0,i.jsxs)(n.a,{href:"https://github.com/axios/axios/blob/master/lib/core/InterceptorManager.js",rel:"noopener noreferrer",target:"_blank",children:[(0,i.jsx)(n.code,{children:"axios InterceptorManager"})," 拦截器源码"]})," 中，拦截器用数组存储的。但实际移除拦截器时，只是把拦截器置为 ",(0,i.jsx)(n.code,{children:"null"})," 。而不是用",(0,i.jsx)(n.code,{children:"splice"}),"移除。最后执行时为 ",(0,i.jsx)(n.code,{children:"null"})," 的不执行，同样效果。",(0,i.jsx)(n.code,{children:"axios"})," 拦截器这个场景下，不得不说为性能做到了很好的考虑。",(0,i.jsx)(n.strong,{children:"因为拦截器是用户自定义的，理论上可以有无数个，所以做性能考虑是必要的"}),"。"]}),"\n",(0,i.jsxs)(n.p,{children:["看如下 ",(0,i.jsx)(n.code,{children:"axios"})," 拦截器代码示例："]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// 代码有删减\n// 声明\nthis.handlers = [];\n\n// 移除\nif (this.handlers[id]) {\n    this.handlers[id] = null;\n}\n\n// 执行\nif (h !== null) {\n    fn(h);\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"319-hasown-检测是否是自己的属性",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#319-hasown-检测是否是自己的属性",children:"#"}),"3.19 hasOwn 检测是否是自己的属性"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n// 例子：\n\n// 特别提醒：__proto__ 是浏览器实现的原型写法，后面还会用到\n// 现在已经有提供好几个原型相关的API\n// Object.getPrototypeOf\n// Object.setPrototypeOf\n// Object.isPrototypeOf\n\n// .call 则是函数里 this 显示指定以为第一个参数，并执行函数。\n\nhasOwn({__proto__: { a: 1 }}, 'a') // false\nhasOwn({ a: undefined }, 'a') // true\nhasOwn({}, 'a') // false\nhasOwn({}, 'hasOwnProperty') // false\nhasOwn({}, 'toString') // false\n// 是自己的本身拥有的属性，不是通过原型链向上查找的。\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"320-cached-缓存",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#320-cached-缓存",children:"#"}),"3.20 cached 缓存"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"利用闭包特性，缓存数据"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["系统学习正则推荐",(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903501034684430",rel:"noopener noreferrer",target:"_blank",children:"老姚：《JavaScript 正则表达式迷你书》问世了！"}),"，看过的都说好。所以本文不会很详细的描述正则相关知识点。"]}),"\n",(0,i.jsxs)(n.h3,{id:"321-camelize-连字符转小驼峰",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#321-camelize-连字符转小驼峰",children:"#"}),"3.21 camelize 连字符转小驼峰"]}),"\n",(0,i.jsx)(n.p,{children:"连字符 - 转驼峰  on-click => onClick"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"322-capitalize-首字母转大写",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#322-capitalize-首字母转大写",children:"#"}),"3.22 capitalize 首字母转大写"]}),"\n",(0,i.jsx)(n.p,{children:"首字母转大写"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"323-hyphenate-小驼峰转连字符",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#323-hyphenate-小驼峰转连字符",children:"#"}),"3.23 hyphenate 小驼峰转连字符"]}),"\n",(0,i.jsx)(n.p,{children:"onClick => on-click"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"324-polyfillbind-bind-的垫片",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#324-polyfillbind-bind-的垫片",children:"#"}),"3.24 polyfillBind bind 的垫片"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["简单来说就是兼容了老版本浏览器不支持原生的 ",(0,i.jsx)(n.code,{children:"bind"})," 函数。同时兼容写法，对参数的多少做出了判断，使用",(0,i.jsx)(n.code,{children:"call"}),"和",(0,i.jsx)(n.code,{children:"apply"}),"实现，据说参数多适合用 ",(0,i.jsx)(n.code,{children:"apply"}),"，少用 ",(0,i.jsx)(n.code,{children:"call"})," 性能更好。"]}),"\n",(0,i.jsxs)(n.p,{children:["如果对于",(0,i.jsx)(n.code,{children:"call、apply、bind"}),"的用法和实现不熟悉，可以查看我在",(0,i.jsx)(n.a,{href:"https://juejin.cn/column/6962099958979756062",rel:"noopener noreferrer",target:"_blank",children:"面试官问系列"}),"中写的",(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903728147857415",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的call和apply方法"}),"\n",(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903718089916429",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的bind方法"})]}),"\n",(0,i.jsxs)(n.h3,{id:"325-toarray-把类数组转成真正的数组",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#325-toarray-把类数组转成真正的数组",children:"#"}),"3.25 toArray 把类数组转成真正的数组"]}),"\n",(0,i.jsx)(n.p,{children:"把类数组转换成数组，支持从哪个位置开始，默认从 0 开始。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n// 例子：\nfunction fn(){\n  var arr1 = toArray(arguments);\n  console.log(arr1); // [1, 2, 3, 4, 5]\n  var arr2 = toArray(arguments, 2);\n  console.log(arr2); // [3, 4, 5]\n}\nfn(1,2,3,4,5);\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"326-extend-合并",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#326-extend-合并",children:"#"}),"3.26 extend 合并"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n// 例子：\nconst data = { name: \'若川\' };\nconst data2 = extend(data, { mp: \'若川视野\', name: \'是若川啊\' });\nconsole.log(data); // { name: "是若川啊", mp: "若川视野" }\nconsole.log(data2); // { name: "是若川啊", mp: "若川视野" }\nconsole.log(data === data2); // true\n'})}),"\n",(0,i.jsxs)(n.h3,{id:"327-toobject-转对象",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#327-toobject-转对象",children:"#"}),"3.27 toObject 转对象"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n// 数组转对象\ntoObject(['若川', '若川视野'])\n// {0: '若', 1: '川', 2: '视', 3: '野'}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"328-noop-空函数",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#328-noop-空函数",children:"#"}),"3.28 noop 空函数"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/* eslint-disable no-unused-vars */\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n// 初始化赋值\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"329-no-一直返回-false",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#329-no-一直返回-false",children:"#"}),"3.29 no 一直返回 false"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n/* eslint-enable no-unused-vars */\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"330-identity-返回参数本身",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#330-identity-返回参数本身",children:"#"}),"3.30 identity 返回参数本身"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"331-genstatickeys-生成静态属性",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#331-genstatickeys-生成静态属性",children:"#"}),"3.31 genStaticKeys 生成静态属性"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"332-looseequal-宽松相等",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#332-looseequal-宽松相等",children:"#"}),"3.32 looseEqual 宽松相等"]}),"\n",(0,i.jsx)(n.p,{children:"由于数组、对象等是引用类型，所以两个内容看起来相等，严格相等都是不相等。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"var a = {};\nvar b = {};\na === b; // false\na == b; // false\n"})}),"\n",(0,i.jsx)(n.p,{children:"所以该函数是对数组、日期、对象进行递归比对。如果内容完全相等则宽松相等。"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"333-looseindexof-宽松的-indexof",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#333-looseindexof-宽松的-indexof",children:"#"}),"3.33 looseIndexOf 宽松的 indexOf"]}),"\n",(0,i.jsxs)(n.p,{children:["该函数实现的是宽松相等。原生的 ",(0,i.jsx)(n.code,{children:"indexOf"})," 是严格相等。"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"334-once-确保函数只执行一次",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#334-once-确保函数只执行一次",children:"#"}),"3.34 once 确保函数只执行一次"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"利用闭包特性，存储状态"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\n\nconst fn1 = once(function(){\n  console.log('哎嘿，无论你怎么调用，我只执行一次');\n});\n\nfn1(); // '哎嘿，无论你怎么调用，我只执行一次'\nfn1(); // 不输出\nfn1(); // 不输出\nfn1(); // 不输出\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"335-生命周期等",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#335-生命周期等",children:"#"}),"3.35 生命周期等"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"var SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\n[Vue 生命周期](https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90)\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"4-最后推荐一些文章和书籍",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-最后推荐一些文章和书籍",children:"#"}),"4. 最后推荐一些文章和书籍"]}),"\n",(0,i.jsx)(n.p,{children:"这部分和Vue3工具函数文章一样，值得推荐，所以复制到这里。"}),"\n",(0,i.jsxs)(n.p,{children:["先推荐我认为不错的",(0,i.jsx)(n.code,{children:"JavaScript API"}),"的几篇文章和几本值得读的书。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903476720320525",rel:"noopener noreferrer",target:"_blank",children:"JavaScript字符串所有API全解密"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903476216987655",rel:"noopener noreferrer",target:"_blank",children:"【深度长文】JavaScript数组所有API全解密"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903469824868365",rel:"noopener noreferrer",target:"_blank",children:"正则表达式前端使用手册"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://juejin.cn/post/6844903501034684430",rel:"noopener noreferrer",target:"_blank",children:"老姚：《JavaScript 正则表达式迷你书》问世了！"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650754216&idx=1&sn=9163fb9d843bb2e0b07a5dec862ea9cc&chksm=88664f24bf11c632df132a8c34443a5dd9ef34437f811b3c05a4d409e2e27794bb9d005712b6&token=917686367&lang=zh_CN#rd",rel:"noopener noreferrer",target:"_blank",children:"老姚浅谈：怎么学JavaScript？"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/Y3nL3GPcxiqb3zK6pEuycg",rel:"noopener noreferrer",target:"_blank",children:"JavaScript 对象所有API解析"})," ",(0,i.jsx)(n.a,{href:"https://ruochuan12.github.io/js-object-api/",rel:"noopener noreferrer",target:"_blank",children:"https://ruochuan12.github.io/js-object-api/"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript",rel:"noopener noreferrer",target:"_blank",children:"MDN JavaScript"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://book.douban.com/subject/35175321/",rel:"noopener noreferrer",target:"_blank",children:"《JavaScript高级程序设计》第4版"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://book.douban.com/subject/35396470/",rel:"noopener noreferrer",target:"_blank",children:"《JavaScript 权威指南》第7版"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://book.douban.com/subject/26302623/",rel:"noopener noreferrer",target:"_blank",children:"《JavaScript面向对象编程2》"})," 面向对象讲的很详细。"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"http://es6.ruanyifeng.com/",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师：《ES6 入门教程》"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://zh.javascript.info/",rel:"noopener noreferrer",target:"_blank",children:"《现代 JavaScript 教程》"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://book.douban.com/subject/26351021/",rel:"noopener noreferrer",target:"_blank",children:"《你不知道的JavaScript》上中卷"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://book.douban.com/subject/26382780/",rel:"noopener noreferrer",target:"_blank",children:"《JavaScript 设计模式与开发实践》"})}),"\n",(0,i.jsx)(n.p,{children:"我也是从小白看不懂书经历过来的。到现在写文章分享。"}),"\n",(0,i.jsx)(n.p,{children:"我看书的方法：多本书同时看，看相同类似的章节，比如函数。看完这本可能没懂，看下一本，几本书看下来基本就懂了，一遍没看懂，再看几遍，可以避免遗忘，巩固相关章节。当然，刚开始看书很难受，看不进。这些书大部分在微信读书都有，如果习惯看纸质书，那可以买来看。"}),"\n",(0,i.jsx)(n.p,{children:"这时可以看些视频和动手练习一些简单的项目。"}),"\n",(0,i.jsxs)(n.p,{children:["比如：可以自己注册一个",(0,i.jsx)(n.code,{children:"github"}),"账号，分章节小节，抄写书中的代码，提交到",(0,i.jsx)(n.code,{children:"github"}),"，练习了才会更有感觉。"]}),"\n",(0,i.jsxs)(n.p,{children:["再比如 ",(0,i.jsx)(n.a,{href:"https://www.freecodecamp.org/chinese/",rel:"noopener noreferrer",target:"_blank",children:"freeCodeCamp 中文在线学习网站"})," 网站。看书是系统学习非常好的方法。后来我就是看源码较多，写文章分享出来给大家。"]}),"\n",(0,i.jsxs)(n.h2,{id:"5-总结",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,i.jsxs)(n.p,{children:["本文通过查看 ",(0,i.jsx)(n.code,{children:"Vue2"})," 源码中 ",(0,i.jsx)(n.code,{children:"shared"})," 模块",(0,i.jsx)(n.a,{href:"https://github.com/vuejs/vue/blob/dev/dist/vue.js#L14-L379",rel:"noopener noreferrer",target:"_blank",children:"打包后的 dist/vue.js 14行到379行"}),"。",(0,i.jsx)(n.strong,{children:"源码也不是那么难，至少很多能看懂，比如工具函数"}),"。难可能是难在：不知道应用场景。"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Vue2"})," 工具函数命名很规范，比如：",(0,i.jsx)(n.code,{children:"is"})," 判断，",(0,i.jsx)(n.code,{children:"to"})," 转换，",(0,i.jsx)(n.code,{children:"has"})," 是否有，让开发者一眼就能看出函数语意。"]}),"\n",(0,i.jsx)(n.p,{children:"这些函数也非常单一，基本一个函数只做一件事。"}),"\n",(0,i.jsx)(n.p,{children:"建议读者朋友把不熟悉的函数，动手写写，有助于巩固基础知识，查漏补缺。"}),"\n",(0,i.jsxs)(n.p,{children:["最后可以持续关注我@若川。欢迎加我微信 ",(0,i.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"ruochuan12"})," 交流，参与 ",(0,i.jsx)(n.a,{href:"https://juejin.cn/pin/7005372623400435725",rel:"noopener noreferrer",target:"_blank",children:"源码共读"})," 活动，大家一起学习源码，共同进步。"]})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(c,e)})):c(e)}let d=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["vue-utils%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-环境准备",text:"2. 环境准备",depth:2},{id:"21-读开源项目-贡献指南",text:"2.1 读开源项目 贡献指南",depth:3},{id:"22-为了降低文章难度直接学习打包后的源码",text:"2.2 为了降低文章难度，直接学习打包后的源码",depth:3},{id:"3-工具函数",text:"3. 工具函数",depth:2},{id:"31-emptyobject",text:"3.1 emptyObject",depth:3},{id:"32-isundef-是否是未定义",text:"3.2 isUndef 是否是未定义",depth:3},{id:"33-isdef-是否是已经定义",text:"3.3 isDef 是否是已经定义",depth:3},{id:"34-istrue-是否是-true",text:"3.4 isTrue 是否是 true",depth:3},{id:"35-isfalse-是否是-false",text:"3.5 isFalse 是否是 false",depth:3},{id:"36-isprimitive-判断值是否是原始值",text:"3.6 isPrimitive 判断值是否是原始值",depth:3},{id:"37-isobject-判断是对象",text:"3.7 isObject 判断是对象",depth:3},{id:"38-torawtype-转换成原始类型",text:"3.8 toRawType 转换成原始类型",depth:3},{id:"39-isplainobject-是否是纯对象",text:"3.9 isPlainObject 是否是纯对象",depth:3},{id:"310-isregexp-是否是正则表达式",text:"3.10 isRegExp 是否是正则表达式",depth:3},{id:"311-isvalidarrayindex-是否是可用的数组索引值",text:"3.11 isValidArrayIndex 是否是可用的数组索引值",depth:3},{id:"312-ispromise-判断是否是-promise",text:"3.12 isPromise 判断是否是 promise",depth:3},{id:"313-tostring-转字符串",text:"3.13 toString 转字符串",depth:3},{id:"314-tonumber-转数字",text:"3.14 toNumber 转数字",depth:3},{id:"315-makemap-生成一个-map-对象",text:"3.15 makeMap 生成一个 map （对象）",depth:3},{id:"316-isbuiltintag-是否是内置的-tag",text:"3.16 isBuiltInTag 是否是内置的 tag",depth:3},{id:"317-isreservedattribute-是否是保留的属性",text:"3.17 isReservedAttribute 是否是保留的属性",depth:3},{id:"318-remove-移除数组中的中一项",text:"3.18 remove 移除数组中的中一项",depth:3},{id:"319-hasown-检测是否是自己的属性",text:"3.19 hasOwn 检测是否是自己的属性",depth:3},{id:"320-cached-缓存",text:"3.20 cached 缓存",depth:3},{id:"321-camelize-连字符转小驼峰",text:"3.21 camelize 连字符转小驼峰",depth:3},{id:"322-capitalize-首字母转大写",text:"3.22 capitalize 首字母转大写",depth:3},{id:"323-hyphenate-小驼峰转连字符",text:"3.23 hyphenate 小驼峰转连字符",depth:3},{id:"324-polyfillbind-bind-的垫片",text:"3.24 polyfillBind bind 的垫片",depth:3},{id:"325-toarray-把类数组转成真正的数组",text:"3.25 toArray 把类数组转成真正的数组",depth:3},{id:"326-extend-合并",text:"3.26 extend 合并",depth:3},{id:"327-toobject-转对象",text:"3.27 toObject 转对象",depth:3},{id:"328-noop-空函数",text:"3.28 noop 空函数",depth:3},{id:"329-no-一直返回-false",text:"3.29 no 一直返回 false",depth:3},{id:"330-identity-返回参数本身",text:"3.30 identity 返回参数本身",depth:3},{id:"331-genstatickeys-生成静态属性",text:"3.31 genStaticKeys 生成静态属性",depth:3},{id:"332-looseequal-宽松相等",text:"3.32 looseEqual 宽松相等",depth:3},{id:"333-looseindexof-宽松的-indexof",text:"3.33 looseIndexOf 宽松的 indexOf",depth:3},{id:"334-once-确保函数只执行一次",text:"3.34 once 确保函数只执行一次",depth:3},{id:"335-生命周期等",text:"3.35 生命周期等",depth:3},{id:"4-最后推荐一些文章和书籍",text:"4. 最后推荐一些文章和书籍",depth:2},{id:"5-总结",text:"5. 总结",depth:2}],title:"初学者也能看懂的 Vue2 源码中那些实用的基础工具函数",headingTitle:"初学者也能看懂的 Vue2 源码中那些实用的基础工具函数",frontmatter:{theme:"smartblue",highlight:"dracula"}}},20713:function(e,n,r){r.d(n,{Z:()=>l});var i=r(52676),s=r(75271),a=r(92815);r(18544);let t={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function c(e,n,r){let i=Object.keys(t).includes(n)?n:r;return t[i](e)}let l=e=>{let{defaultLocale:n="en-US"}=e,r=(0,a.Vi)().page.readingTimeData,t=(0,a.Jr)(),l=(0,a.e7)(),[d,h]=(0,s.useState)(c(r,t,n));return(0,s.useEffect)(()=>{h(c(r,t,n))},[t,r]),(0,i.jsx)("span",{"data-dark":String(l),className:"rp-reading-time",children:d})}}}]);