"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["8683"],{98991:function(e,n,r){r.r(n),r.d(n,{default:()=>u});var s=r(52676),i=r(40453),a=r(20713);let c=r.p+"static/image/init.ffc18efc.png",t=r.p+"static/image/taro-help.5cebcca9.png",o=r.p+"static/image/taro-inspect-help.c4413dee.png",l=r.p+"static/image/webpack.config.js.2bf895d7.png",d=r.p+"static/image/app.07689941.png";function p(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",ul:"ul",li:"li",input:"input",pre:"pre",img:"img",h3:"h3",h4:"h4",hr:"hr",strong:"strong"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"taro-源码揭秘8-taro-是如何使用-webpack-打包构建小程序的",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#taro-源码揭秘8-taro-是如何使用-webpack-打包构建小程序的",children:"#"}),"Taro 源码揭秘：8. Taro 是如何使用 webpack 打包构建小程序的？"]}),"\n",(0,s.jsx)(a.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.p,{children:["大家好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，欢迎关注我的",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MacNfeTPODNMLLFdzrULow",rel:"noopener noreferrer",target:"_blank",children:"公众号：若川视野"}),"。从 2021 年 8 月起，我持续组织了好几年的",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习 200 行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（6k+人）第一的专栏，写有几十篇源码文章。"]}),"\n",(0,s.jsxs)(n.p,{children:["截至目前（",(0,s.jsx)(n.code,{children:"2024-11-07"}),"），目前最新是 ",(0,s.jsx)(n.a,{href:"https://github.com/NervJS/taro/releases/tag/v4.0.7",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"4.0.7"})}),"，官方",(0,s.jsx)(n.code,{children:"4.0"}),"正式版本的介绍文章暂未发布。官方之前发过",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7330792655125463067",rel:"noopener noreferrer",target:"_blank",children:"Taro 4.0 Beta 发布：支持开发鸿蒙应用、小程序编译模式、Vite 编译等"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["计划写一个 Taro 源码揭秘系列，博客地址：",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io/taro",rel:"noopener noreferrer",target:"_blank",children:"https://ruochuan12.github.io/taro"})," 可以加入书签，持续关注",(0,s.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"。"]}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7378363694939783178",rel:"noopener noreferrer",target:"_blank",children:"1. 揭开整个架构的入口 CLI => taro init 初始化项目的秘密"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7380195796208205824",rel:"noopener noreferrer",target:"_blank",children:"2. 揭开整个架构的插件系统的秘密"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7390335741586931738",rel:"noopener noreferrer",target:"_blank",children:"3. 每次创建新的 taro 项目（taro init）的背后原理是什么"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7403193330271682612",rel:"noopener noreferrer",target:"_blank",children:"4. 每次 npm run dev:weapp 开发小程序，build 编译打包是如何实现的？"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7403915119448915977",rel:"noopener noreferrer",target:"_blank",children:"5. 高手都在用的发布订阅机制 Events 在 Taro 中是如何实现的？"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7407648740926291968",rel:"noopener noreferrer",target:"_blank",children:"6. 为什么通过 Taro.xxx 能调用各个小程序平台的 API，如何设计实现的?"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7415911762128797696",rel:"noopener noreferrer",target:"_blank",children:"7. Taro.request 和请求响应拦截器是如何实现的"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7434175547784020031",rel:"noopener noreferrer",target:"_blank",children:"8. Taro 是如何使用 webpack 打包构建小程序的？"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7439743635161710604",rel:"noopener noreferrer",target:"_blank",children:"9. Taro 是如何生成 webpack 配置进行构建小程序的？"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",checked:!0,disabled:!0})," ",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7452329275561279529",rel:"noopener noreferrer",target:"_blank",children:"10. Taro 到底是怎样转换成小程序文件的？"})]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","等等"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["前面 4 篇文章都是讲述编译相关的，CLI、插件机制、初始化项目、编译构建流程。\n第 5-7 篇讲述的是运行时相关的 Events、API、request 等。\n第 8 篇接着继续追随第4篇 npm run dev:weapp 的脚步，继续分析 ",(0,s.jsx)(n.code,{children:"@tarojs/webpack5-runner"}),"，Taro 是如何使用 webpack 打包构建小程序的？"]}),"\n",(0,s.jsxs)(n.p,{children:["关于克隆项目、环境准备、如何调试代码等，参考",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7378363694939783178#heading-1",rel:"noopener noreferrer",target:"_blank",children:"第一篇文章-准备工作、调试"}),"。后续文章基本不再过多赘述。"]}),"\n",(0,s.jsx)(n.p,{children:"学完本文，你将学到："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"1. 如何输出项目的 webpack 配置，原理是什么\n2. Taro 生成的 webpack 配置解读\n等等\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"2-webpack-打包构建",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-webpack-打包构建",children:"#"}),"2. webpack 打包构建"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7403193330271682612",rel:"noopener noreferrer",target:"_blank",children:"4. 每次 npm run dev:weapp 开发小程序，build 编译打包是如何实现的？"})}),"\n",(0,s.jsxs)(n.p,{children:["在第4篇文章末尾，我们可以回顾下，如何获取 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置和 执行 ",(0,s.jsx)(n.code,{children:"webpack()"})," 构建的。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// packages/taro-webpack5-runner/src/index.mini.ts\n\nimport webpack from 'webpack'\n//   省略若干代码\nexport default async function build (appPath: string, rawConfig: IMiniBuildConfig): Promise<Stats | void> {\n  const combination = new MiniCombination(appPath, rawConfig)\n  await combination.make()\n  //   省略若干代码\n\n  const webpackConfig = combination.chain.toConfig()\n  const config = combination.config\n\n  return new Promise<Stats | void>((resolve, reject) => {\n    if (config.withoutBuild) return\n\n    const compiler = webpack(webpackConfig)\n\n	// 省略若干代码...\n\n    if (config.isWatch) {\n      compiler.watch({\n        aggregateTimeout: 300,\n        poll: undefined\n      }, callback)\n    } else {\n      compiler.run((err: Error, stats: Stats) => {\n        compiler.close(err2 => callback(err || err2, stats))\n      })\n    }\n  })\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 重点就以下这几句\n// 生成获取 webpack 配置，执行 webpack(webpackConfig)\nconst combination = new MiniCombination(appPath, rawConfig)\nawait combination.make()\nconst webpackConfig = combination.chain.toConfig()\nconst compiler = webpack(webpackConfig)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们可以调试代码，从这里输出 ",(0,s.jsx)(n.code,{children:"webpackConfig"}),"。不过我们使用另外一种，脚手架提供的 ",(0,s.jsx)(n.code,{children:"inspect"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-输出打包编译-taro-的-webpack-配置",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-输出打包编译-taro-的-webpack-配置",children:"#"}),"3. 输出打包编译 taro 的 webpack 配置"]}),"\n",(0,s.jsxs)(n.p,{children:["我们先初始化一个 ",(0,s.jsx)(n.code,{children:"Taro"})," 项目。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx @tarojs/cli@latest init taro4-debug\n"})}),"\n",(0,s.jsxs)(n.p,{children:["我们选择 ",(0,s.jsx)(n.code,{children:"react、ts、pnpm、webpack5、CLI 内置默认模板"})," 等配置生成的项目，如下图所示："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"init",src:c})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd taro4-debug\nnpx taro -h\n"})}),"\n",(0,s.jsxs)(n.p,{children:["如下图所示：\n",(0,s.jsx)(n.img,{alt:"taro-help",src:t})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx taro inspect -h\n"})}),"\n",(0,s.jsxs)(n.p,{children:["如下图所示：\n",(0,s.jsx)(n.img,{alt:"taro-inspect-help",src:o})]}),"\n",(0,s.jsx)(n.p,{children:"我们可以知道，-t 指定 weapp -o 指定路径（文件名）"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 把 taro 编译微信小程序的 webpack 配置输出到了 webpack.config.js 文件\nnpx taro inspect -t weapp -o webpack.config.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["执行上面脚本后，我们就把 ",(0,s.jsx)(n.code,{children:"taro"})," 编译微信小程序的 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置输出到了 ",(0,s.jsx)(n.code,{children:"webpack.config.js"})," 文件。我们在开头追加 ",(0,s.jsx)(n.code,{children:"export default"})," 方便查看整个文件。如下图所示："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"webpack.config.js 配置",src:l})}),"\n",(0,s.jsx)(n.p,{children:"输出的 webpack 配置文件，有足足 2.4w 行，想想就害怕，不过放心，我们肯定要删减的，只看重点。"}),"\n",(0,s.jsx)(n.p,{children:"我们先来看 inspect 插件源码，分析其原理。"}),"\n",(0,s.jsxs)(n.h3,{id:"31-inspect-插件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-inspect-插件",children:"#"}),"3.1 inspect 插件"]}),"\n",(0,s.jsxs)(n.p,{children:["我们可以从第二篇文章，",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7380195796208205824",rel:"noopener noreferrer",target:"_blank",children:"2. 揭开整个架构的插件系统的秘密"}),"\n得知，找到对应插件的源码路径 ",(0,s.jsx)(n.code,{children:"packages/taro-cli/src/presets/commands/inspect.ts"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// packages/taro-cli/src/presets/commands/inspect.ts\nexport default (ctx: IPluginContext) => {\n  ctx.registerCommand({\n    name: 'inspect',\n    optionsMap: {\n      '-t, --type [typeName]': 'Build type, weapp/swan/alipay/tt/h5/quickapp/rn/qq/jd',\n      '-o, --output [outputPath]': 'output config to outputPath'\n    },\n    synopsisList: [\n      'taro inspect --type weapp',\n      'taro inspect --type weapp --output inspect.config.js',\n      'taro inspect --type weapp plugins',\n      'taro inspect --type weapp module.rules.0'\n    ],\n    async fn ({ _, options }) {\n		// 省略，拆分到下方讲述\n	}\n  })\n}\n\n// 省略代码\n\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"32-fn-函数",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#32-fn-函数",children:"#"}),"3.2 fn 函数"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"    async fn ({ _, options }) {\n      const { fs, chalk } = ctx.helper\n      const platform = options.type || options.t\n\n	  // 省略若干代码\n\n      const isProduction = process.env.NODE_ENV === 'production'\n      const outputPath = options.output || options.o\n      const mode = outputPath ? 'output' : 'console'\n      const extractPath = _[1]\n\n      await ctx.applyPlugins({\n        name: platform,\n        opts: {\n          config: {\n            ...config,\n            isWatch: !isProduction,\n            mode: isProduction ? 'production' : 'development',\n            async modifyWebpackChain (chain, webpack, data) {\n              await ctx.applyPlugins({\n                name: hooks.MODIFY_WEBPACK_CHAIN,\n                initialVal: chain,\n                opts: {\n                  chain,\n                  webpack,\n                  data\n                }\n              })\n            },\n            onWebpackChainReady (chain) {\n              const webpackConfig = chain.toConfig()\n              const { toString } = chain.constructor\n              const config = extractConfig(webpackConfig, extractPath)\n              const res = toString(config)\n\n              if (mode === 'console') {\n                const highlight = require('cli-highlight').default\n                console.info(highlight(res, { language: 'js' }))\n              } else if (mode === 'output' && outputPath) {\n                fs.writeFileSync(outputPath, res)\n              }\n\n              process.exit(0)\n            }\n          }\n        }\n      })\n    }\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ctx.applyPlugins"})," 触发平台插件 ",(0,s.jsx)(n.code,{children:"weapp"}),"，传入 config ，传入两个钩子函数 ",(0,s.jsx)(n.code,{children:"modifyWebpackChain"}),"、",(0,s.jsx)(n.code,{children:"onWebpackChainReady"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["在 ",(0,s.jsx)(n.code,{children:"taro"})," 源码中，搜索 ",(0,s.jsx)(n.code,{children:"onWebpackChainReady"}),"，可以搜索到调用的地方。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function onWebpackChainReady(chain){\n	const webpackConfig = chain.toConfig()\n	const { toString } = chain.constructor\n	const config = extractConfig(webpackConfig, extractPath)\n	const res = toString(config)\n	// 根据传入的模式参数，输出到控制台或者写入文件\n}\n\n// 调用\nonWebpackChainReady(chain)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["其中 ",(0,s.jsx)(n.code,{children:"chain"})," 是 ",(0,s.jsx)(n.code,{children:"webpack-chain"})," 的实例对象。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const Chain = require('webpack-chain');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["根据上述用法，可以推断 ",(0,s.jsx)(n.code,{children:"webpack-chain"})," 简版代码，有 ",(0,s.jsx)(n.code,{children:"class Chain"})," 类，",(0,s.jsx)(n.code,{children:"toString"})," 静态方法和 ",(0,s.jsx)(n.code,{children:"toConfig"})," 实例对象方法。可以简单实现 Chain 类如下所示。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"class Chain{\n	constructor(){}\n    static toString(){\n       console.log('string');\n		return JSON.stringify({});\n    }\n    toConfig(){\n        console.log('toConfig');\n		return {};\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["感兴趣的小伙伴可以查看其源码 ",(0,s.jsx)(n.a,{href:"https://github.com/neutrinojs/webpack-chain/blob/main/src/Config.js#L47",rel:"noopener noreferrer",target:"_blank",children:"webpack-chain"})]}),"\n",(0,s.jsxs)(n.h2,{id:"4-webpack-配置",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-webpack-配置",children:"#"}),"4. webpack 配置"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/configuration/plugins/#plugins",rel:"noopener noreferrer",target:"_blank",children:"webpack 中文文档"}),"、",(0,s.jsx)(n.a,{href:"https://webpack.js.org/configuration/plugins/#plugins",rel:"noopener noreferrer",target:"_blank",children:"webpack 英文文档"})]}),"\n",(0,s.jsxs)(n.p,{children:["按 ",(0,s.jsxs)(n.a,{href:"https://webpack.docschina.org/configuration/",rel:"noopener noreferrer",target:"_blank",children:[(0,s.jsx)(n.code,{children:"webpack"})," 文档配置"]}),"顺序，整理 ",(0,s.jsx)(n.code,{children:"taro"})," 的 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置对象属性的顺序如下。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  entry: {\n    app: [\n      '/Users/ruochuan/git-source/github/taro4-debug/src/app.ts'\n    ]\n  },\n  mode: 'production',\n  output: {},\n\n  module: {\n  },\n\n  resolve: {},\n  resolveLoader: {},\n\n  optimization: {},\n  plugins: [],\n  devtool: false,\n  target: [\n    'web',\n    'es5'\n  ],\n  watchOptions: {\n    aggregateTimeout: 200\n  },\n  performance: {\n    maxEntrypointSize: 2000000\n  },\n}\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"接下来，我们逐一解释这些配置。"}),"\n",(0,s.jsxs)(n.h3,{id:"41-entry-入口",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-entry-入口",children:"#"}),"4.1 entry 入口"]}),"\n",(0,s.jsx)(n.p,{children:"入口对象是用于 webpack 查找开始构建 bundle 的地方。上下文是入口文件所处的目录的绝对路径的字符串。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  // 入口文件\n  entry: {\n    app: [\n      '/Users/ruochuan/git-source/github/taro4-debug/src/app.ts'\n    ]\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["打包后的入口 ",(0,s.jsx)(n.code,{children:"app.js"}),"，如图所示："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"入口打包",src:d})}),"\n",(0,s.jsxs)(n.h3,{id:"42-mode-模式",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#42-mode-模式",children:"#"}),"4.2 mode 模式"]}),"\n",(0,s.jsxs)(n.p,{children:["提供 ",(0,s.jsx)(n.code,{children:"mode"})," 配置选项，告知 ",(0,s.jsx)(n.code,{children:"webpack"})," 使用相应模式的内置优化。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string = 'production': 'none' | 'development' | 'production'"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  mode: 'production',\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"43-output-输出",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#43-output-输出",children:"#"}),"4.3 output 输出"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"output"})," 位于对象最顶级键(",(0,s.jsx)(n.code,{children:"key"}),")，包括了一组选项，指示 ",(0,s.jsx)(n.code,{children:"webpack"})," 如何去输出、以及在哪里输出你的「",(0,s.jsx)(n.code,{children:"bundle"}),"、",(0,s.jsx)(n.code,{children:"asset"})," 和其他你所打包或使用 ",(0,s.jsx)(n.code,{children:"webpack"})," 载入的任何内容」。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  output: {\n    chunkLoadingGlobal: 'webpackJsonp',\n    path: '/Users/ruochuan/git-source/github/taro4-debug/dist',\n    publicPath: '/',\n    filename: '[name].js',\n    chunkFilename: '[name].js',\n    globalObject: 'wx',\n    enabledLibraryTypes: [],\n    devtoolModuleFilenameTemplate: function () { /* omitted long function */ }\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"44-module-模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#44-module-模块",children:"#"}),"4.4 module 模块"]}),"\n",(0,s.jsx)(n.p,{children:"这些选项决定了如何处理项目中的不同类型的模块。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  // 代码有删减\n  module: {\n    rules: [\n      /* config.module.rule('sass') */\n      {\n        test: /\\.sass$/,\n        oneOf: [\n          /* config.module.rule('sass').oneOf('0') */\n		  //  省略\n        ]\n      },\n      /* config.module.rule('scss') */\n      {\n        test: /\\.scss$/,\n      },\n      /* config.module.rule('less') */\n      {\n        test: /\\.less$/,\n      },\n      /* config.module.rule('stylus') */\n      {\n        test: /\\.styl(us)?$/,\n      },\n      /* config.module.rule('normalCss') */\n      {\n        test: /\\.(css|qss|jxss|wxss|acss|ttss)(\\?.*)?$/,\n      },\n	  // 还有其他配置，拆分到下文\n    ]\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["针对 ",(0,s.jsx)(n.code,{children:".sass"}),"、",(0,s.jsx)(n.code,{children:".scss"}),"、",(0,s.jsx)(n.code,{children:".less"}),"、",(0,s.jsx)(n.code,{children:".stylus"})," 文件采用对应的 ",(0,s.jsx)(n.code,{children:"loader"})," 的处理。"]}),"\n",(0,s.jsxs)(n.p,{children:["和 ",(0,s.jsx)(n.code,{children:"normalCss"})," （",(0,s.jsx)(n.code,{children:"css|qss|jxss|wxss|acss|ttss"}),"）各平台的小程序自身的 ",(0,s.jsx)(n.code,{children:"css"})," 文件的处理。"]}),"\n",(0,s.jsxs)(n.h4,{id:"441-configmodulerulescript",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#441-configmodulerulescript",children:"#"}),"4.4.1 config.module.rule('script')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.module.rule('script') */\n{\n	test: /\\.m?[tj]sx?$/i,\n	include: [\n		'/Users/ruochuan/git-source/github/taro4-debug/src',\n		filename => /(?<=node_modules[\\\\/]).*taro/.test(filename)\n	],\n	use: [\n		/* config.module.rule('script').use('babelLoader') */\n		{\n			loader: '/Users/ruochuan/git-source/github/taro4-debug/node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.0_webpack@5.91.0_@swc+core@1.3.96_/node_modules/babel-loader/lib/index.js',\n			options: {\n				compact: false\n			}\n		}\n	]\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["针对 js 的采用 ",(0,s.jsx)(n.code,{children:"babel-loader"})," 处理。"]}),"\n",(0,s.jsxs)(n.h4,{id:"442-configmoduleruletemplate",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#442-configmoduleruletemplate",children:"#"}),"4.4.2 config.module.rule('template')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.module.rule('template') */\n{\n	test: /\\.(wxml|axml|ttml|qml|swan|jxml)(\\?.*)?$/,\n	type: 'asset/resource',\n	generator: {\n		filename: function () { /* omitted long function */ }\n	},\n	use: [\n		/* config.module.rule('template').use('0') */\n		{\n			loader: '/Users/ruochuan/git-source/github/taro4-debug/node_modules/.pnpm/@tarojs+webpack5-runner@4.0.7_@babel+core@7.26.0_@swc+core@1.3.96_@tarojs+runtime@4.0.7_less@_emqo6xqihzcps7l7vcv6fz65aa/node_modules/@tarojs/webpack5-runner/dist/loaders/miniTemplateLoader.js',\n			options: {\n				buildAdapter: 'weapp'\n			}\n		}\n	]\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["针对各个平台的小程序模板，采用自定义的 ",(0,s.jsx)(n.code,{children:"miniTemplateLoader"})," 处理。"]}),"\n",(0,s.jsxs)(n.p,{children:["对应的源码路径是 ",(0,s.jsx)(n.code,{children:"@tarojs/webpack5-runner/dist/loaders/miniTemplateLoader.js"})]}),"\n",(0,s.jsxs)(n.h4,{id:"443-configmodulerulexscript",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#443-configmodulerulexscript",children:"#"}),"4.4.3 config.module.rule('xscript')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.module.rule('xscript') */\n{\n	test: /\\.wxs$/,\n	type: 'asset/resource',\n	generator: {\n		filename: function () { /* omitted long function */ }\n	},\n	use: [\n		/* config.module.rule('xscript').use('0') */\n		{\n			loader: '/Users/ruochuan/git-source/github/taro4-debug/node_modules/.pnpm/@tarojs+webpack5-runner@4.0.7_@babel+core@7.26.0_@swc+core@1.3.96_@tarojs+runtime@4.0.7_less@_emqo6xqihzcps7l7vcv6fz65aa/node_modules/@tarojs/webpack5-runner/dist/loaders/miniXScriptLoader.js'\n		}\n	]\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["针对 ",(0,s.jsx)(n.code,{children:"wxs"})," 文件，采用自定义的 ",(0,s.jsx)(n.code,{children:"miniXScriptLoader"})," 处理。"]}),"\n",(0,s.jsxs)(n.p,{children:["对应的源码路径是 ",(0,s.jsx)(n.code,{children:"@tarojs/webpack5-runner/dist/loaders/miniXScriptLoader.js"}),"。"]}),"\n",(0,s.jsxs)(n.h4,{id:"444-configmodulerulemedia",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#444-configmodulerulemedia",children:"#"}),"4.4.4 config.module.rule('media')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.module.rule('media') */\n{\n	test: /\\.(mp4|webm|ogg|mp3|m4a|wav|flac|aac)(\\?.*)?$/,\n	type: 'asset',\n	parser: {\n		dataUrlCondition: {\n			maxSize: 10240\n		}\n	},\n	generator: {\n		emit: undefined,\n		outputPath: undefined,\n		publicPath: undefined,\n		filename: function () { /* omitted long function */ }\n	}\n},\n"})}),"\n",(0,s.jsxs)(n.p,{children:["对于视频文件，采用 资源 ",(0,s.jsx)(n.code,{children:"type: 'asset'"})," 处理。"]}),"\n",(0,s.jsxs)(n.h4,{id:"445-configmodulerulefont",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#445-configmodulerulefont",children:"#"}),"4.4.5 config.module.rule('font')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.module.rule('font') */\n{\n	test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n	type: 'asset',\n	// 省略\n},\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"446-configmoduleruleimage",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#446-configmoduleruleimage",children:"#"}),"4.4.6 config.module.rule('image')"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"\n/* config.module.rule('image') */\n{\n	test: /\\.(png|jpe?g|gif|bpm|svg|webp)(\\?.*)?$/,\n	type: 'asset',\n	// 省略\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"45-resolve-解析",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#45-resolve-解析",children:"#"}),"4.5 resolve 解析"]}),"\n",(0,s.jsxs)(n.p,{children:["这些选项能设置模块如何被解析。",(0,s.jsx)(n.code,{children:"webpack"})," 提供合理的默认值，但是还是可能会修改一些解析的细节。关于 resolver 具体如何工作的更多解释说明，请查看",(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/concepts/module-resolution",rel:"noopener noreferrer",target:"_blank",children:"模块解析"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  resolve: {\n    symlinks: true,\n    fallback: {\n      fs: false,\n      path: false\n    },\n    alias: {\n      'regenerator-runtime': '/Users/ruochuan/git-source/github/taro4-debug/node_modules/.pnpm/regenerator-runtime@0.11.1/node_modules/regenerator-runtime/runtime-module.js',\n      '@tarojs/runtime': '/Users/ruochuan/git-source/github/taro4-debug/node_modules/@tarojs/runtime/dist/index.js',\n      '@tarojs/shared': '/Users/ruochuan/git-source/github/taro4-debug/node_modules/@tarojs/shared/dist/index.js',\n      '@tarojs/components$': '@tarojs/plugin-platform-weapp/dist/components-react',\n      'react-dom$': '@tarojs/react',\n      'react-dom/client$': '@tarojs/react'\n    },\n    extensions: ['.js', '.jsx', '.ts', '.tsx', '.mjs', '.vue'],\n    mainFields: ['browser', 'module', 'jsnext:main', 'main'],\n    plugins: [\n      /* config.resolve.plugin('MultiPlatformPlugin') */\n      new MultiPlatformPlugin(\n        'described-resolve',\n        'resolve',\n        {\n          chain: {\n			// 省略\n		  }\n        }\n      ),\n      /* config.resolve.plugin('tsconfig-paths') */\n      new TsconfigPathsPlugin()\n    ]\n  },\n  resolveLoader: {\n    modules: [\n      'node_modules'\n    ]\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"symlinks"})}),"\n",(0,s.jsx)(n.p,{children:"是否将符号链接(symlink)解析到它们的符号链接位置(symlink location)。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"alias"})}),"\n",(0,s.jsxs)(n.p,{children:["创建 ",(0,s.jsx)(n.code,{children:"import"})," 或 ",(0,s.jsx)(n.code,{children:"require"})," 的别名，来确保模块引入变得更简单。",(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/configuration/resolve/#resolvealias",rel:"noopener noreferrer",target:"_blank",children:"resolvealias"})]}),"\n",(0,s.jsxs)(n.p,{children:["平时引入的是组件 ",(0,s.jsx)(n.code,{children:"@tarojs/components$"})," 最终对应平台的 ",(0,s.jsx)(n.code,{children:"@tarojs/plugin-platform-weapp/dist/components-react"}),"\n",(0,s.jsx)(n.code,{children:"react-dom$"})," 对应 ",(0,s.jsx)(n.code,{children:"@tarojs/react"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"extensions"})}),"\n",(0,s.jsx)(n.p,{children:"尝试按顺序解析这些后缀名。如果有多个文件有相同的名字，但后缀名不同，webpack 会解析列在数组首位的后缀的文件 并跳过其余的后缀。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"mainFields"})}),"\n",(0,s.jsxs)(n.p,{children:["当从 ",(0,s.jsx)(n.code,{children:"npm"})," 包中导入模块时（例如，",(0,s.jsx)(n.code,{children:"import * as D3 from 'd3'"}),"），此选项将决定在 package.json 中使用哪个字段导入模块。根据 webpack 配置中指定的 ",(0,s.jsx)(n.code,{children:"target"})," 不同，默认值也会有所不同。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"plugins"})}),"\n",(0,s.jsx)(n.p,{children:"应该使用的额外的解析插件列表。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"MultiPlatformPlugin"})}),"\n",(0,s.jsxs)(n.p,{children:["此 ",(0,s.jsx)(n.code,{children:"enhance-resolve"})," 插件用于根据当前编译的平台，解析多端文件的后缀。"]}),"\n",(0,s.jsxs)(n.p,{children:["有些场景，单纯的根据平台变量 ",(0,s.jsx)(n.code,{children:"process.env.TARO_ENV"})," 在一个文件里写判断，相对麻烦。这时就可以直接拆分写多个文件。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"src/index.[js|ts|jsx|tsx]"})}),"\n",(0,s.jsxs)(n.p,{children:["比如 微信小程序端 ",(0,s.jsx)(n.code,{children:"src/index.weapp.[js|ts|jsx|tsx]"}),"\nH5 端 ",(0,s.jsx)(n.code,{children:"src/index.h5.[js|ts|jsx|tsx]"}),"，这样就会根据平台直接读取对应文件。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"TsconfigPathsPlugin"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/tsconfig-paths-webpack-plugin",rel:"noopener noreferrer",target:"_blank",children:"tsconfig-paths-webpack-plugin"}),"\n是一个 webpack 插件，它通过解析 TypeScript 导入路径来帮助提高 TypeScript 构建的性能。"]}),"\n",(0,s.jsx)(n.p,{children:"当您导入 TypeScript 模块时，webpack 需要将导入路径解析为相应的 TypeScript 文件。默认情况下，webpack 通过在“node_modules”目录中搜索 TypeScript 文件来执行此操作。但是，这可能效率低下，尤其是当您的项目有很多依赖项时。"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"tsconfig-paths-webpack-plugin"})," 提供了一种更高效的方法来解析 TypeScript 导入路径。它通过读取项目的 ",(0,s.jsx)(n.code,{children:"tsconfig.json"})," 文件并生成一组规则来实现此目的，webpack 可以使用这些规则来解析导入路径。这意味着即使您的项目有很多依赖项，webpack 也可以快速轻松地解析导入路径。"]}),"\n",(0,s.jsxs)(n.h3,{id:"46-optimization-优化",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#46-optimization-优化",children:"#"}),"4.6 optimization 优化"]}),"\n",(0,s.jsx)(n.p,{children:"从 webpack 4 开始，会根据你选择的 mode 来执行不同的优化， 不过所有的优化还是可以手动配置和重写。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  optimization: {\n    sideEffects: true,\n    minimize: true,\n    usedExports: true,\n    runtimeChunk: {\n      name: 'runtime'\n    },\n    splitChunks: {\n		// 省略，拆开到下方\n	},\n    minimizer: [\n		// 省略，拆开到下方\n	]\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"461-optimizationsplitchunks",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#461-optimizationsplitchunks",children:"#"}),"4.6.1 optimization.splitChunks"]}),"\n",(0,s.jsxs)(n.p,{children:["对于动态导入模块，默认使用 webpack v4+ 提供的全新的通用分块策略(common chunk strategy)。请在 ",(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/plugins/split-chunks-plugin/",rel:"noopener noreferrer",target:"_blank",children:"SplitChunksPlugin"})," 页面中查看配置其行为的可用选项。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  optimization: {\n	splitChunks: {\n      chunks: 'all',\n      maxInitialRequests: Infinity,\n      minSize: 0,\n      cacheGroups: {\n        'default': false,\n        defaultVendors: false,\n        common: {\n          name: 'common',\n          minChunks: 2,\n          priority: 1\n        },\n        vendors: {\n          name: 'vendors',\n          minChunks: 2,\n          test: function () { /* omitted long function */ },\n          priority: 10\n        },\n        taro: {\n          name: 'taro',\n          test: module => helper_1.REG_TARO_SCOPED_PACKAGE.test(module.context),\n          priority: 100\n        }\n      }\n    },\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"splitChunks"})," 切割分成 ",(0,s.jsx)(n.code,{children:"vendors、taro、common"})," 文件（模块）。也就是开头入口文件 ",(0,s.jsx)(n.code,{children:"app.js"})," 中，另外引入的文件。"]}),"\n",(0,s.jsxs)(n.h4,{id:"462-optimizationminimizer",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#462-optimizationminimizer",children:"#"}),"4.6.2 optimization.minimizer"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/configuration/optimization/#optimizationminimizer",rel:"noopener noreferrer",target:"_blank",children:"optimization.minimizer"})," 允许你通过提供一个或多个定制过的 ",(0,s.jsx)(n.code,{children:"TerserPlugin"})," 实例，覆盖默认压缩工具(",(0,s.jsx)(n.code,{children:"minimizer"}),")。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  optimization: {\n    minimizer: [\n      /* config.optimization.minimizer('terserPlugin') */\n      new TerserPlugin(\n        {\n          parallel: true,\n          terserOptions: {\n			// 省略...\n		  }\n        }\n      ),\n      /* config.optimization.minimizer('cssoWebpackPlugin') */\n      new CssMinimizerPlugin(\n        {\n          test: /\\.(css|scss|sass|less|styl|stylus|wxss|acss|ttss|jxss|qss)(\\?.*)?$/,\n          parallel: true,\n          minify: function () { /* omitted long function */ },\n          minimizerOptions: {\n            preset: [\n				// 省略...\n			]\n          }\n        }\n      )\n    ]\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["压缩代码插件 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/terser-webpack-plugin",rel:"noopener noreferrer",target:"_blank",children:"terser-webpack-plugin"}),"\n压缩 css 插件 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/css-minimizer-webpack-plugin",rel:"noopener noreferrer",target:"_blank",children:"css-minimizer-webpack-plugin"})]}),"\n",(0,s.jsxs)(n.h3,{id:"47-plugins-插件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#47-plugins-插件",children:"#"}),"4.7 plugins 插件"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"plugins"})," 选项用于以各种方式自定义 ",(0,s.jsx)(n.code,{children:"webpack"})," 构建过程。",(0,s.jsx)(n.code,{children:"webpack"})," 附带了各种内置插件，可以通过 ",(0,s.jsx)(n.code,{children:"webpack.[plugin-name]"})," 访问这些插件。请查看 插件页面 获取插件列表和对应文档，但请注意这只是其中一部分，社区中还有许多插件。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  plugins: [\n    /* config.plugin('webpackbar') */\n    new TaroWebpackBarPlugin(\n      {\n        reporters: [\n          'basic',\n          'fancy',\n          {\n            done: function () { /* omitted long function */ }\n          }\n        ],\n        basic: false,\n        fancy: true\n      }\n    ),\n	// 省略，拆开放到下文\n  ],\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"TaroWebpackBarPlugin"})," 继承自 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/webpackbar",rel:"noopener noreferrer",target:"_blank",children:"WebpackBar"}),"（优雅的进度条），避免因持久化缓存 IdleFileCachePlugin 再度触发 progress 事件，导致 webpackbar 在 100% 后又再渲染的问题。"]}),"\n",(0,s.jsxs)(n.h4,{id:"471-provideplugin-自动加载模块",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#471-provideplugin-自动加载模块",children:"#"}),"4.7.1 ProvidePlugin 自动加载模块"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"webpack.ProvidePlugin"})," 自动加载模块，而不必到处 ",(0,s.jsx)(n.code,{children:"import"})," 加载 ",(0,s.jsx)(n.code,{children:"require"})," 它们。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/plugins/provide-plugin/#root",rel:"noopener noreferrer",target:"_blank",children:"provide-plugin"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"new webpack.ProvidePlugin({\n  identifier: 'module1',\n  // ...\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"比如 jQuery。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"new webpack.ProvidePlugin({\n  $: 'jquery',\n  jQuery: 'jquery',\n});\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"new webpack.ProvidePlugin({\n  identifier: ['module1', 'property1'],\n  // ...\n});\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// in a module\n$('#item'); // <= works\njQuery('#item'); // <= also works\n// $ is automatically set to the exports of module \"jquery\"\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.plugin('providerPlugin') */\nnew ProvidePlugin({\n	window: ['@tarojs/runtime', 'window'],\n	document: ['@tarojs/runtime', 'document'],\n	navigator: ['@tarojs/runtime', 'navigator'],\n	requestAnimationFrame: ['@tarojs/runtime', 'requestAnimationFrame'],\n	cancelAnimationFrame: ['@tarojs/runtime', 'cancelAnimationFrame'],\n	Element: ['@tarojs/runtime', 'TaroElement'],\n	SVGElement: ['@tarojs/runtime', 'SVGElement'],\n	MutationObserver: ['@tarojs/runtime','MutationObserver' ],\n	history: ['@tarojs/runtime', 'history'],\n	location: ['@tarojs/runtime','location'],\n	URLSearchParams: ['@tarojs/runtime', 'URLSearchParams'],\n	URL: ['@tarojs/runtime', 'URL']\n}),\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这样我们在 ",(0,s.jsx)(n.code,{children:"Taro"})," 项目中的任意地方写 ",(0,s.jsx)(n.code,{children:"window、document、navigator"})," 时。实际引用的是 ",(0,s.jsx)(n.code,{children:"@tarojs/runtime"})," 运行时中模拟实现的。"]}),"\n",(0,s.jsxs)(n.h4,{id:"472-defineplugin",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#472-defineplugin",children:"#"}),"4.7.2 DefinePlugin"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/plugins/define-plugin/",rel:"noopener noreferrer",target:"_blank",children:"DefinePlugin"})," 允许在 编译时 将你代码中的变量替换为其他值或表达式。这在需要根据开发模式与生产模式进行不同的操作时，非常有用。例如，如果想在开发构建中进行日志记录，而不在生产构建中进行，就可以定义一个全局常量去判断是否记录日志。这就是 DefinePlugin 的发光之处，设置好它，就可以忘掉开发环境和生产环境的构建规则。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.plugin('definePlugin') */\nnew DefinePlugin({\n	'process.env.FRAMEWORK': '\"react\"',\n	'process.env.TARO_ENV': '\"weapp\"',\n	'process.env.TARO_PLATFORM': '\"mini\"',\n	'process.env.TARO_VERSION': '\"4.0.7\"',\n	'process.env.SUPPORT_TARO_POLYFILL': '\"disabled\"',\n	ENABLE_INNER_HTML: true,\n	ENABLE_ADJACENT_HTML: false,\n	ENABLE_SIZE_APIS: false,\n	ENABLE_TEMPLATE_CONTENT: false,\n	ENABLE_CLONE_NODE: false,\n	ENABLE_CONTAINS: false,\n	ENABLE_MUTATION_OBSERVER: false\n}),\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"473-minicssextractplugin-提取-css-到单独文件中",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#473-minicssextractplugin-提取-css-到单独文件中",children:"#"}),"4.7.3 MiniCssExtractPlugin 提取 css 到单独文件中"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/mini-css-extract-plugin",rel:"noopener noreferrer",target:"_blank",children:"mini-css-extract-plugin"})," 此插件将 CSS 提取到单独的文件中。它为每个包含 CSS 的 JS 文件创建一个 CSS 文件。它支持 CSS 和 SourceMaps 的按需加载。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.plugin('miniCssExtractPlugin') */\nnew MiniCssExtractPlugin({\n	filename: '[name].wxss',\n	chunkFilename: '[name].wxss'\n}),\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"474-minisplitchunksplugin",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#474-minisplitchunksplugin",children:"#"}),"4.7.4 MiniSplitChunksPlugin"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import SplitChunksPlugin from 'webpack/lib/optimize/SplitChunksPlugin'\n"})}),"\n",(0,s.jsxs)(n.p,{children:["继承 ",(0,s.jsx)(n.code,{children:"SplitChunksPlugin"})," 的插件，用于将分包公共依赖提取到单独的文件中"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/* config.plugin('miniSplitChunksPlugin') */\nnew MiniSplitChunksPlugin({\n	exclude: undefined,\n	fileType: {\n		templ: '.wxml',\n		style: '.wxss',\n		config: '.json',\n		script: '.js',\n		xs: '.wxs'\n	},\n	combination: {\n		// 省略...\n	}\n}),\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"475-tarominiplugin-taro-插件",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#475-tarominiplugin-taro-插件",children:"#"}),"4.7.5 TaroMiniPlugin taro 插件"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"/* config.plugin('miniPlugin') */\nnew TaroMiniPlugin({\n	commonChunks: [\n		'runtime',\n		'vendors',\n		'taro',\n		'common'\n	],\n	constantsReplaceList: {\n		'process.env.FRAMEWORK': '\"react\"',\n		// 省略若干代码\n	},\n	pxTransformConfig: {\n		platform: 'weapp',\n		designWidth: 750,\n		deviceRatio: {\n			'375': 2,\n			'640': 1.17,\n			'750': 1,\n			'828': 0.905\n		}\n	},\n	hot: false,\n	combination: {\n		// 省略...\n	},\n	loaderMeta: {\n		// 省略...\n	}\n})\n"})}),"\n",(0,s.jsx)(n.p,{children:"对应的源码路径是"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// packages/taro-webpack5-runner/src/plugins/MiniPlugin.ts\n\nexport default class TaroMiniPlugin {\n	// ...\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"48-devtool",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#48-devtool",children:"#"}),"4.8 devtool"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export default {\n  devtool: false,\n  target: [\n    'web',\n    'es5'\n  ],\n  watchOptions: {\n    aggregateTimeout: 200\n  },\n  performance: {\n    maxEntrypointSize: 2000000\n  },\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"devtool"})," 此选项控制是否生成，以及如何生成 source map。"]}),"\n",(0,s.jsx)(n.p,{children:"使用 SourceMapDevToolPlugin 进行更细粒度的配置。查看 source-map-loader 来处理已有的 source map。"}),"\n",(0,s.jsxs)(n.h3,{id:"49-target-构建目标",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#49-target-构建目标",children:"#"}),"4.9 target 构建目标"]}),"\n",(0,s.jsx)(n.p,{children:"构建目标(Targets)\nwebpack 能够为多种环境或 target 构建编译。想要理解什么是 target 的详细信息， 请阅读 target 概念页面。"}),"\n",(0,s.jsxs)(n.h3,{id:"410-watchoptions-监测选项",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#410-watchoptions-监测选项",children:"#"}),"4.10 watchOptions 监测选项"]}),"\n",(0,s.jsx)(n.p,{children:"Webpack 可以监听文件变化，当它们修改后会重新编译。这个页面介绍了如何启用这个功能，以及当 watch 无法正常运行的时候你可以做的一些调整。"}),"\n",(0,s.jsxs)(n.h3,{id:"411-performance-性能",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#411-performance-性能",children:"#"}),"4.11 performance 性能"]}),"\n",(0,s.jsx)(n.p,{children:"这些选项可以控制 webpack 如何通知「资源(asset)和入口起点超过指定文件限制」。 此功能受到 webpack 性能评估的启发。"}),"\n",(0,s.jsxs)(n.h2,{id:"5-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,s.jsx)(n.p,{children:"行文至此，我们来总结下本文内容。"}),"\n",(0,s.jsxs)(n.p,{children:["通过 ",(0,s.jsx)(n.code,{children:"npx @tarojs/cli@latest init taro4-debug"})," 初始化项目。"]}),"\n",(0,s.jsxs)(n.p,{children:["通过 ",(0,s.jsx)(n.code,{children:"cd taro4-debug && npx taro -h"})," 得知 ",(0,s.jsx)(n.code,{children:"inspect"})," 命令，可以指定平台和路径，输出项目中的 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npx taro inspect -t weapp -o webpack.config.js\n"})}),"\n",(0,s.jsxs)(n.p,{children:["根据文档，分析了 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置，包括 ",(0,s.jsx)(n.code,{children:"entry、mode、output、 module、 resolve、optimization、plugins"})," 等配置。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"{\n	entry: {\n		app: [\n			'/Users/ruochuan/git-source/github/taro4-debug/src/app.ts'\n		]\n	}\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["打包后入口文件生成 ",(0,s.jsx)(n.code,{children:"app.js"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"module 配置 rules 针对各种文件使用相应的 loader 解析文件。比如图片、字体文件、视频文件，less、sass、js 等。\n针对小程序特定的文件类型，写了特定的 loader 进行处理。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"tempate => miniTemplateLoader => 源码路径 packages/taro-webpack5-runner/src/loaders/miniTemplateLoader.ts"}),"\n",(0,s.jsx)(n.li,{children:"wxs => miniXScriptLoader => 源码路径 packages/taro-webpack5-runner/src/loaders/miniXScriptLoader.ts"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"resolve"})," 解析中的 ",(0,s.jsx)(n.code,{children:"alias"})," 配置了 ",(0,s.jsx)(n.code,{children:"regenerator-runtime、@tarojs/runtime、@tarojs/shared、@tarojs/components$、react-dom$、react-dom/client$"})]}),"\n",(0,s.jsxs)(n.p,{children:["optimization 优化中的 ",(0,s.jsx)(n.code,{children:"splitChunks"})," 分割 ",(0,s.jsx)(n.code,{children:"common、taro、vendors"})," 模块，minimizer 配置了压缩代码插件 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/terser-webpack-plugin",rel:"noopener noreferrer",target:"_blank",children:"terser-webpack-plugin"}),"、压缩 css 插件 ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/css-minimizer-webpack-plugin",rel:"noopener noreferrer",target:"_blank",children:"css-minimizer-webpack-plugin"})]}),"\n",(0,s.jsx)(n.p,{children:"plugins 插件配置中，配置了 webpack.ProvidePlugin、DefinePlugin、MiniCssExtractPlugin 提取 css 到单独文件中、MiniSplitChunksPlugin、TaroMiniPlugin 插件。"}),"\n",(0,s.jsxs)(n.p,{children:["后续有时间再单独写文章，分析是如何组织成 ",(0,s.jsx)(n.code,{children:"webpack"})," 配置的。"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"如果看完有收获，欢迎点赞、评论、分享、收藏支持。你的支持和肯定，是我写作的动力。也欢迎提建议和交流讨论"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["作者：常以",(0,s.jsx)(n.strong,{children:"若川"}),"为名混迹于江湖。所知甚少，唯善学。",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川的博客"}),"，",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/blog",rel:"noopener noreferrer",target:"_blank",children:"github blog"}),"，可以点个 ",(0,s.jsx)(n.code,{children:"star"})," 鼓励下持续创作。"]}),"\n",(0,s.jsxs)(n.p,{children:["最后可以持续关注我",(0,s.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"@若川"}),"，欢迎关注我的",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MacNfeTPODNMLLFdzrULow",rel:"noopener noreferrer",target:"_blank",children:"公众号：若川视野"}),"。从 2021 年 8 月起，我持续组织了好几年的",(0,s.jsx)(n.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习 200 行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(n.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(n.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(n.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（6k+人）第一的专栏，写有几十篇源码文章。"]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(p,e)})):p(e)}let u=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["taro%2Fwebpack5%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-webpack-打包构建",text:"2. webpack 打包构建",depth:2},{id:"3-输出打包编译-taro-的-webpack-配置",text:"3. 输出打包编译 taro 的 webpack 配置",depth:2},{id:"31-inspect-插件",text:"3.1 inspect 插件",depth:3},{id:"32-fn-函数",text:"3.2 fn 函数",depth:3},{id:"4-webpack-配置",text:"4. webpack 配置",depth:2},{id:"41-entry-入口",text:"4.1 entry 入口",depth:3},{id:"42-mode-模式",text:"4.2 mode 模式",depth:3},{id:"43-output-输出",text:"4.3 output 输出",depth:3},{id:"44-module-模块",text:"4.4 module 模块",depth:3},{id:"441-configmodulerulescript",text:"4.4.1 config.module.rule('script')",depth:4},{id:"442-configmoduleruletemplate",text:"4.4.2 config.module.rule('template')",depth:4},{id:"443-configmodulerulexscript",text:"4.4.3 config.module.rule('xscript')",depth:4},{id:"444-configmodulerulemedia",text:"4.4.4 config.module.rule('media')",depth:4},{id:"445-configmodulerulefont",text:"4.4.5 config.module.rule('font')",depth:4},{id:"446-configmoduleruleimage",text:"4.4.6 config.module.rule('image')",depth:4},{id:"45-resolve-解析",text:"4.5 resolve 解析",depth:3},{id:"46-optimization-优化",text:"4.6 optimization 优化",depth:3},{id:"461-optimizationsplitchunks",text:"4.6.1 optimization.splitChunks",depth:4},{id:"462-optimizationminimizer",text:"4.6.2 optimization.minimizer",depth:4},{id:"47-plugins-插件",text:"4.7 plugins 插件",depth:3},{id:"471-provideplugin-自动加载模块",text:"4.7.1 ProvidePlugin 自动加载模块",depth:4},{id:"472-defineplugin",text:"4.7.2 DefinePlugin",depth:4},{id:"473-minicssextractplugin-提取-css-到单独文件中",text:"4.7.3 MiniCssExtractPlugin 提取 css 到单独文件中",depth:4},{id:"474-minisplitchunksplugin",text:"4.7.4 MiniSplitChunksPlugin",depth:4},{id:"475-tarominiplugin-taro-插件",text:"4.7.5 TaroMiniPlugin taro 插件",depth:4},{id:"48-devtool",text:"4.8 devtool",depth:3},{id:"49-target-构建目标",text:"4.9 target 构建目标",depth:3},{id:"410-watchoptions-监测选项",text:"4.10 watchOptions 监测选项",depth:3},{id:"411-performance-性能",text:"4.11 performance 性能",depth:3},{id:"5-总结",text:"5. 总结",depth:2}],title:"Taro 源码揭秘：8. Taro 是如何使用 webpack 打包构建小程序的？",headingTitle:"Taro 源码揭秘：8. Taro 是如何使用 webpack 打包构建小程序的？",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(e,n,r){r.d(n,{Z:()=>o});var s=r(52676),i=r(75271),a=r(92815);r(18544);let c={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function t(e,n,r){let s=Object.keys(c).includes(n)?n:r;return c[s](e)}let o=e=>{let{defaultLocale:n="en-US"}=e,r=(0,a.Vi)().page.readingTimeData,c=(0,a.Jr)(),o=(0,a.e7)(),[l,d]=(0,i.useState)(t(r,c,n));return(0,i.useEffect)(()=>{d(t(r,c,n))},[c,r]),(0,s.jsx)("span",{"data-dark":String(o),className:"rp-reading-time",children:l})}}}]);