"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["8098"],{59504:function(n,e,r){r.r(e),r.d(e,{default:()=>p});var s=r(52676),h=r(40453),i=r(20713);let t=r.p+"static/image/highlight-dev.5360699f.png",l=r.p+"static/image/highlight-demo.675ce14c.png",c=r.p+"static/image/api.b02cfb38.png",a=r.p+"static/image/debugger.25547a72.png",d=r.p+"static/image/render-dom-demo.642c08cc.png";function o(n){let e=Object.assign({h1:"h1",a:"a",h2:"h2",p:"p",code:"code",strong:"strong",ul:"ul",li:"li",pre:"pre",h3:"h3",img:"img"},(0,h.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"分析-vant4-组件库源码写一个常用的-highlight-高亮文本的组件",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#分析-vant4-组件库源码写一个常用的-highlight-高亮文本的组件",children:"#"}),"分析 vant4 组件库源码，写一个常用的 highlight 高亮文本的组件"]}),"\n",(0,s.jsx)(i.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(e.h2,{id:"1-前言",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(e.p,{children:["大家好，我是",(0,s.jsx)(e.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，欢迎 ",(0,s.jsx)(e.code,{children:"follow"})," ",(0,s.jsx)(e.a,{href:"https://github.com/ruochuan12",rel:"noopener noreferrer",target:"_blank",children:"我的 github"}),"。我倾力持续组织了3年多",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(e.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(e.code,{children:"ruochuan02"})," 参与"]}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(e.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（5.7k+人）第一的专栏，写有20余篇源码文章。"]}),"\n",(0,s.jsx)(e.p,{children:"我们开发业务时经常会使用到组件库，一般来说，很多时候我们不需要关心内部实现。但是如果希望学习和深究里面的原理，这时我们可以分析自己使用的组件库实现。有哪些优雅实现、最佳实践、前沿技术等都可以值得我们借鉴。"}),"\n",(0,s.jsxs)(e.p,{children:["相比于原生 ",(0,s.jsx)(e.code,{children:"JS"})," 等源码。我们或许更应该学习，正在使用的组件库的源码，因为有助于帮助我们写业务和写自己的组件。"]}),"\n",(0,s.jsxs)(e.p,{children:["如果是 ",(0,s.jsx)(e.code,{children:"Vue"})," 技术栈，开发移动端的项目，大多会选用 ",(0,s.jsx)(e.code,{children:"vant"})," 组件库，目前（2024-05-02） ",(0,s.jsx)(e.code,{children:"star"})," 多达 ",(0,s.jsx)(e.code,{children:"22.7k"}),"，",(0,s.jsx)(e.a,{href:"https://vant-ui.github.io/vant/#/zh-CN/changelog",rel:"noopener noreferrer",target:"_blank",children:"已经正式发布 4.9.0"}),"。我们可以挑选 ",(0,s.jsx)(e.code,{children:"vant"})," 组件库学习，我会写一个",(0,s.jsx)(e.a,{href:"https://juejin.cn/column/7140264842954276871",rel:"noopener noreferrer",target:"_blank",children:"vant 组件库源码系列专栏"}),"，欢迎大家关注。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"vant 组件库源码分析系列："})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["1.",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7158239404484460574",rel:"noopener noreferrer",target:"_blank",children:"vant 4 即将正式发布，支持暗黑主题，那么是如何实现的呢"})]}),"\n",(0,s.jsxs)(e.li,{children:["2.",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7160465286036979748",rel:"noopener noreferrer",target:"_blank",children:"跟着 vant 4 源码学习如何用 vue3+ts 开发一个 loading 组件，仅88行代码"})]}),"\n",(0,s.jsxs)(e.li,{children:["3.",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7165661072785932296",rel:"noopener noreferrer",target:"_blank",children:"分析 vant 4 源码，如何用 vue3 + ts 开发一个瀑布流滚动加载的列表组件？"})]}),"\n",(0,s.jsxs)(e.li,{children:["4.",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7169003604303413278",rel:"noopener noreferrer",target:"_blank",children:"分析 vant 4 源码，学会用 vue3 + ts 开发毫秒级渲染的倒计时组件，真是妙啊"})]}),"\n",(0,s.jsxs)(e.li,{children:["5.",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7171227417246171149",rel:"noopener noreferrer",target:"_blank",children:"vant 4.0 正式发布了，分析其源码学会用 vue3 写一个图片懒加载组件！"})]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["这次我们来学习 ",(0,s.jsx)(e.code,{children:"highlight"})," 高亮文本组件，",(0,s.jsxs)(e.a,{href:"https://vant-ui.github.io/vant/#/zh-CN/highlight",rel:"noopener noreferrer",target:"_blank",children:["可以点此查看 ",(0,s.jsx)(e.code,{children:"highlight"})," 文档体验"]}),"。"]}),"\n",(0,s.jsx)(e.p,{children:"学完本文，你将学到："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"1. 如何学习组件库的源码\n2. 如何将使用了 rsbuild 的最新版本的 vant-cli 配置开启 sourceMap 进行调试源码\n3. 高亮文本组件的原理和具体实现\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"2-准备工作",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#2-准备工作",children:"#"}),"2. 准备工作"]}),"\n",(0,s.jsxs)(e.p,{children:["看一个开源项目，第一步应该是先看 ",(0,s.jsx)(e.a,{href:"https://github.com/youzan/vant",rel:"noopener noreferrer",target:"_blank",children:"README.md"})," 再看贡献文档 ",(0,s.jsx)(e.a,{href:"https://github.com/youzan/vant/blob/main/.github/CONTRIBUTING.md",rel:"noopener noreferrer",target:"_blank",children:"github/CONTRIBUTING.md"}),"。"]}),"\n",(0,s.jsxs)(e.h3,{id:"21-克隆源码--跑起来",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#21-克隆源码--跑起来",children:"#"}),"2.1 克隆源码 && 跑起来"]}),"\n",(0,s.jsxs)(e.p,{children:["You will need ",(0,s.jsx)(e.a,{href:"https://nodejs.org",rel:"noopener noreferrer",target:"_blank",children:"Node.js >= 18"})," and ",(0,s.jsx)(e.a,{href:"https://pnpm.io",rel:"noopener noreferrer",target:"_blank",children:"pnpm"}),"."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# 推荐克隆我的项目\ngit clone https://github.com/ruochuan12/vant-analysis\ncd vant-analysis/vant-v4.x\n\n# 或者克隆官方仓库\ngit clone git@github.com:youzan/vant.git\ncd vant\n\n# 启用 pnpm 包管理器\ncorepack enable\n\n# 安装依赖，如果没安装 pnpm，可以用 npm i pnpm -g 安装，或者查看官网通过其他方式安装\npnpm i\n\n# 启动服务\npnpm dev\n"})}),"\n",(0,s.jsxs)(e.p,{children:["执行 ",(0,s.jsx)(e.code,{children:"pnpm dev"})," 后，这时我们打开高亮文本组件 ",(0,s.jsx)(e.code,{children:"http://localhost:8080/#/zh-CN/highlight"}),"。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"pnpm dev",src:t})}),"\n",(0,s.jsxs)(e.h2,{id:"3-pnpm-run-dev--vant-cli-dev",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#3-pnpm-run-dev--vant-cli-dev",children:"#"}),"3. pnpm run dev => vant-cli dev"]}),"\n",(0,s.jsxs)(e.p,{children:["我们从 ",(0,s.jsx)(e.code,{children:"package.json"})," 脚本查看 ",(0,s.jsx)(e.code,{children:"dev"})," 命令。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'// vant-v4.x/package.json\n{\n  "private": true,\n  "scripts": {\n    "prepare": "husky install",\n    "dev": "pnpm --dir ./packages/vant dev",\n  },\n  "engines": {\n    "pnpm": ">= 9.0.0"\n  },\n  "packageManager": "pnpm@9.0.6",\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["限制了 ",(0,s.jsx)(e.code,{children:"pnpm"})," 版本大于 ",(0,s.jsx)(e.code,{children:"9.0.0"}),"，如果运行报版本错误，可以升级（比如：",(0,s.jsx)(e.code,{children:"npm i -g pnpm"}),"） ",(0,s.jsx)(e.code,{children:"pnpm"})," 版本到 ",(0,s.jsx)(e.code,{children:"9.x"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["我们继续跟着 ",(0,s.jsx)(e.code,{children:"vant/package.json"})," 脚本查看 ",(0,s.jsx)(e.code,{children:"dev"})," 命令。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'// vant-v4.x/packages/vant/package.json\n{\n  "name": "vant",\n  "version": "4.9.0",\n    "scripts": {\n        "dev": "vant-cli dev",\n    }\n}\n'})}),"\n",(0,s.jsxs)(e.p,{children:["我们继续跟着 ",(0,s.jsx)(e.code,{children:"vant-cli/package.json"})," 脚本查看 ",(0,s.jsx)(e.code,{children:"bin"})," 命令。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'// vant-v4.x/packages/vant-cli/package.json\n{\n  "name": "@vant/cli",\n  "version": "7.0.2",\n  "type": "module",\n  "bin": {\n    "vant-cli": "./bin.js"\n  },\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// vant-v4.x/packages/vant-cli/bin.js\n#!/usr/bin/env node\nimport './lib/cli.js';\n"})}),"\n",(0,s.jsxs)(e.p,{children:["从 ",(0,s.jsx)(e.code,{children:"package.json"})," 中的 ",(0,s.jsx)(e.code,{children:"bin"})," 属性可以看出，",(0,s.jsx)(e.code,{children:"vant-cli"})," 最终入口文件是",(0,s.jsx)(e.code,{children:"lib/cli.js"}),"。"]}),"\n",(0,s.jsxs)(e.h3,{id:"31-libclijs",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#31-libclijs",children:"#"}),"3.1 lib/cli.js"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// vant-v4.x/packages/vant-cli/lib/cli.js\nimport { Command } from 'commander';\nimport { cliVersion } from './index.js';\nconst program = new Command();\nprogram.version(`@vant/cli ${cliVersion}`);\nprogram\n    .command('dev')\n    .description('Run dev server')\n    .action(async () => {\n    const { dev } = await import('./commands/dev.js');\n    return dev();\n});\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// vant-v4.x/packages/vant-cli/lib/commands/dev.js\nimport { setNodeEnv } from '../common/index.js';\nimport { compileSite } from '../compiler/compile-site.js';\nexport async function dev() {\n    setNodeEnv('development');\n    await compileSite();\n}\n\n"})}),"\n",(0,s.jsxs)(e.p,{children:["我们可以找到对应的源文件是：",(0,s.jsx)(e.code,{children:"vant-v4.x/packages/vant-cli/src/compiler/compile-site.ts"})]}),"\n",(0,s.jsxs)(e.p,{children:["我们可以从 ",(0,s.jsx)(e.a,{href:"https://github.com/youzan/vant/blob/main/packages/vant-cli/changelog.md",rel:"noopener noreferrer",target:"_blank",children:"vant-cli changelog"})," 得知，最新 ",(0,s.jsx)(e.code,{children:"7.x"})," 版本，采用了 ",(0,s.jsx)(e.code,{children:"rsbuild"}),"，作为打包构建工具，弃用了原有的 ",(0,s.jsx)(e.code,{children:"vite"}),"。"]}),"\n",(0,s.jsxs)(e.p,{children:["这时我们查阅下 ",(0,s.jsx)(e.code,{children:"rsbuild"})," 文档，找到配置 ",(0,s.jsx)(e.code,{children:"sourceMap"})," 的方法。\n",(0,s.jsx)(e.a,{href:"https://rsbuild.dev/zh/config/output/source-map",rel:"noopener noreferrer",target:"_blank",children:"rsbuild output.sourceMap"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// 类型\ntype SourceMap = {\n  js?: RspackConfig['devtool'];\n  css?: boolean;\n};\n// 默认值\nconst defaultSourceMap = {\n  js: isDev ? 'cheap-module-source-map' : false,\n  css: false,\n};\n"})}),"\n",(0,s.jsxs)(e.p,{children:["可以搜索 ",(0,s.jsx)(e.code,{children:"vant-v4.x/packages/vant-cli"})," 项目中的搜索 ",(0,s.jsx)(e.code,{children:"sourceMap"})," 知道配置开启 ",(0,s.jsx)(e.code,{children:"sourceMap"}),"。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// vant-v4.x/packages/vant-cli/lib/compiler/compile-site.js\nconst rsbuildConfig = {\n  // 省略若干代码 ...\n  output: {\n      assetPrefix,\n      // make compilation faster\n      sourceMap: {\n          // 代码里是js false，关闭，可以关闭，启用默认值\n          // js: false,\n          css: false,\n      },\n  }\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"往期讲述了很多工具函数和脚手架相关的等，所以在此不再赘述。"}),"\n",(0,s.jsxs)(e.h3,{id:"32-利用-demo-调试源码",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#32-利用-demo-调试源码",children:"#"}),"3.2 利用 demo 调试源码"]}),"\n",(0,s.jsxs)(e.p,{children:['带着"高亮文本是如何实现的"问题我们直接找到 ',(0,s.jsx)(e.code,{children:"highlight demo"})," 文件：",(0,s.jsx)(e.code,{children:"vant/packages/vant/src/highlight/demo/index.vue"}),"。为什么是这个文件，我在之前文章",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7160465286036979748#heading-3",rel:"noopener noreferrer",target:"_blank",children:"跟着 vant4 源码学习如何用 vue3+ts 开发一个 loading 组件，仅88行代码"}),"分析了其原理，感兴趣的小伙伴点击查看。这里就不赘述了。"]}),"\n",(0,s.jsxs)(e.p,{children:["文档上的 ",(0,s.jsx)(e.code,{children:"demo"})," 图如下："]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"文档上的demo",src:l})}),"\n",(0,s.jsx)(e.p,{children:"对应的是以下代码："}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"// vant-v4.x/packages/vant/src/highlight/demo/index.vue\n<script setup lang=\"ts\">\nimport VanHighlight from '..';\nimport { useTranslate } from '../../../docs/site';\n\nconst t = useTranslate({\n  'zh-CN': {\n    text1: '慢慢来，不要急，生活给你出了难题，可也终有一天会给出答案。',\n    keywords1: '难题',\n    keywords2: ['难题', '终有一天', '答案'],\n    keywords3: '生活',\n    multipleKeywords: '多字符匹配',\n    highlightClass: '设置高亮标签类名',\n  },\n  'en-US': {\n    text1:\n      'Take your time and be patient. Life itself will eventually answer all those questions it once raised for you.',\n    keywords1: 'questions',\n    keywords2: ['time', 'life', 'answer'],\n    keywords3: 'life',\n    multipleKeywords: 'Multiple Keywords',\n    highlightClass: 'Highlight Class Name',\n  },\n});\n<\/script>\n\n<template>\n  <demo-block :title=\"t('basicUsage')\">\n    <van-highlight :keywords=\"t('keywords1')\" :source-string=\"t('text1')\" />\n  </demo-block>\n\n  <demo-block :title=\"t('multipleKeywords')\">\n    <van-highlight :keywords=\"t('keywords2')\" :source-string=\"t('text1')\" />\n  </demo-block>\n\n  <demo-block :title=\"t('highlightClass')\">\n    <van-highlight\n      :keywords=\"t('keywords3')\"\n      :source-string=\"t('text1')\"\n      highlight-class=\"custom-class\"\n    />\n  </demo-block>\n</template>\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"4-高亮",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#4-高亮",children:"#"}),"4. 高亮"]}),"\n",(0,s.jsxs)(e.p,{children:["我们可以看到入口文件 ",(0,s.jsx)(e.code,{children:"src/highlight/index.ts"}),"。"]}),"\n",(0,s.jsxs)(e.h3,{id:"41-入口文件-srchighlightindexts",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#41-入口文件-srchighlightindexts",children:"#"}),"4.1 入口文件 src/highlight/index.ts"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ts",children:"// vant-v4.x/packages/vant/src/highlight/index.ts\nimport { withInstall } from '../utils';\nimport _Highlight from './Highlight';\n\nexport const Highlight = withInstall(_Highlight);\nexport default Highlight;\n\nexport { highlightProps } from './Highlight';\n\nexport type { HighlightProps } from './Highlight';\nexport type { HighlightThemeVars } from './types';\n\ndeclare module 'vue' {\n  export interface GlobalComponents {\n    vanHighlight: typeof Highlight;\n  }\n}\n"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"withInstall"})," 函数在之前文章",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7160465286036979748#heading-10",rel:"noopener noreferrer",target:"_blank",children:"5.1 withInstall 给组件对象添加 install 方法"})," 也有分析，这里就不赘述了。"]}),"\n",(0,s.jsxs)(e.p,{children:["我们可以继续看主文件 ",(0,s.jsx)(e.code,{children:"src/highlight/Highlight.tsx"}),"。"]}),"\n",(0,s.jsxs)(e.h3,{id:"42-主文件-srchighlighthighlighttsx",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#42-主文件-srchighlighthighlighttsx",children:"#"}),"4.2 主文件 src/highlight/Highlight.tsx"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-tsx",children:"// vant-v4.x/packages/vant/src/highlight/Highlight.tsx\nimport {\n  defineComponent,\n  computed,\n  type ExtractPropTypes,\n  type PropType,\n} from 'vue';\n\nimport {\n  createNamespace,\n  makeRequiredProp,\n  makeStringProp,\n  truthProp,\n} from '../utils';\n\nconst [name, bem] = createNamespace('highlight');\n\n\nexport const highlightProps = {\n  autoEscape: truthProp,\n  caseSensitive: Boolean,\n  highlightClass: String,\n  highlightTag: makeStringProp<keyof HTMLElementTagNameMap>('span'),\n  keywords: makeRequiredProp<PropType<string | string[]>>([String, Array]),\n  sourceString: makeStringProp(''),\n  tag: makeStringProp<keyof HTMLElementTagNameMap>('div'),\n  unhighlightClass: String,\n  unhighlightTag: makeStringProp<keyof HTMLElementTagNameMap>('span'),\n};\n\nexport type HighlightProps = ExtractPropTypes<typeof highlightProps>;\n"})}),"\n",(0,s.jsxs)(e.p,{children:["上面代码主要是 ",(0,s.jsx)(e.code,{children:"Props"})," 定义："]}),"\n",(0,s.jsxs)(e.p,{children:["定义了一系列 ",(0,s.jsx)(e.code,{children:"props"}),"，包括控制高亮的各种配置项，如是否自动转义、是否区分大小写、高亮样式类名等。可直接参见文档中的",(0,s.jsx)(e.code,{children:"API"}),"属性。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"api",src:c})}),"\n",(0,s.jsxs)(e.p,{children:["我们可以在这些文件，任意位置加上 ",(0,s.jsx)(e.code,{children:"debugger"})," 调试源码。比如在 ",(0,s.jsx)(e.code,{children:"renderContent"})," 函数 ",(0,s.jsx)(e.code,{children:"debugger"})," 调试。如下图所示："]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"debugger",src:a})}),"\n",(0,s.jsxs)(e.p,{children:["如果不知道怎么调试，可以看我之前的文章",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7030584939020042254",rel:"noopener noreferrer",target:"_blank",children:"新手向：前端程序员必学基本技能——调试JS代码"})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-tsx",children:'// vant-v4.x/packages/vant/src/highlight/Highlight.tsx\nexport default defineComponent({\n  name,\n\n  props: highlightProps,\n\n  setup(props) {\n    const highlightChunks = computed(() => {\n      // 省略这里的代码，后文讲述...\n    });\n\n    const renderContent = () => {\n      const {\n        // 慢慢来，不要急，生活给你出了难题，可也终有一天会给出答案。\n        sourceString,\n        // 高亮和非高亮样式名和标签名\n        highlightClass,\n        unhighlightClass,\n        highlightTag,\n        unhighlightTag,\n      } = props;\n\n      return highlightChunks.value.map((chunk) => {\n        /**\n         * highlightChunks.value 调试查看数值\n          [\n            {\n                "start": 0,\n                "end": 14,\n                "highlight": false\n            },\n            {\n                "start": 14,\n                "end": 16,\n                "highlight": true\n            },\n            {\n                "start": 16,\n                "end": 29,\n                "highlight": false\n            }\n        ]\n         *\n        */\n        const { start, end, highlight } = chunk;\n        // 取出文本\n        const text = sourceString.slice(start, end);\n\n        debugger;\n\n        if (highlight) {\n          return (\n            <highlightTag class={[bem(\'tag\'), highlightClass]}>\n              {text}\n            </highlightTag>\n          );\n        }\n\n        return <unhighlightTag class={unhighlightClass}>{text}</unhighlightTag>;\n      });\n    };\n\n    return () => {\n      const { tag } = props;\n\n      return <tag class={bem()}>{renderContent()}</tag>;\n    };\n  },\n});\n\n'})}),"\n",(0,s.jsxs)(e.p,{children:["这段代码不多，就是把高亮的文本组成一个新的标签，可以支持自定义标签和自定义",(0,s.jsx)(e.code,{children:"class"}),"，渲染结果如下图所示："]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.img,{alt:"render-dom-demo",src:d})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsxs)(e.strong,{children:[(0,s.jsx)(e.code,{children:"setup"})," 函数："]})}),"\n",(0,s.jsxs)(e.p,{children:["在 ",(0,s.jsx)(e.code,{children:"setup"})," 函数中，通过 ",(0,s.jsx)(e.code,{children:"computed"})," 创建了一个名为 ",(0,s.jsx)(e.code,{children:"highlightChunks"})," 的 ",(0,s.jsx)(e.code,{children:"computed"})," 属性，该属性根据传入的关键词在原始字符串中生成并合并高亮块。"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"highlightChunks"})," 的计算过程包括将关键词转为正则表达式，匹配原始字符串中的位置，并生成含有高亮样式标记的块。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsxs)(e.strong,{children:[(0,s.jsx)(e.code,{children:"renderContent"})," 函数："]})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.code,{children:"renderContent"})," 函数根据 ",(0,s.jsx)(e.code,{children:"highlightChunks"})," 的结果在原始字符串中提取每个块并生成相应的高亮或非高亮段落。"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"返回函数："})}),"\n",(0,s.jsxs)(e.p,{children:["返回一个渲染函数，在渲染时根据 ",(0,s.jsx)(e.code,{children:"props"})," 中的设置，生成相应的高亮标签或非高亮标签，并以适当的方式组织和呈现高亮内容。"]}),"\n",(0,s.jsx)(e.p,{children:"实现原理概述："}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"提取关键词："})}),"\n",(0,s.jsx)(e.p,{children:"首先，根据传入的关键词（可以是字符串或字符串数组），将其转换为数组形式。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"生成高亮块："})}),"\n",(0,s.jsx)(e.p,{children:"遍历关键词数组，根据是否需要转义和是否区分大小写，生成正则表达式进行匹配，找出原始字符串中的关键词位置，并记录下每个关键词的起始和结束位置以及是否需要高亮。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"合并相邻块："})}),"\n",(0,s.jsx)(e.p,{children:"将相邻的高亮块合并为一个块，以减少多余的高亮标记。"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"生成最终内容："})}),"\n",(0,s.jsx)(e.p,{children:"根据高亮块的信息，在原始字符串中按要求插入高亮标签或非高亮标签，形成最终的高亮内容。"}),"\n",(0,s.jsxs)(e.p,{children:["通过以上这些步骤，",(0,s.jsx)(e.code,{children:"highlight"})," 组件实现了在给定字符串中根据关键词进行高亮展示的功能。"]}),"\n",(0,s.jsx)(e.p,{children:"整体思路是根据关键词通过正则匹配生成高亮块，然后在渲染时根据这些块的信息插入合适的标签和自定义样式名实现高亮效果。"}),"\n",(0,s.jsxs)(e.h3,{id:"43-highlightchunks-函数",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#43-highlightchunks-函数",children:"#"}),"4.3 highlightChunks 函数"]}),"\n",(0,s.jsxs)(e.p,{children:["我们简单分析下 ",(0,s.jsx)(e.code,{children:"setup"})," 中的 ",(0,s.jsx)(e.code,{children:"highlightChunks"})," 函数。不用细看，可以在自己动手调试源码时再细看。"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-tsx",children:"// vant-v4.x/packages/vant/src/highlight/Highlight.tsx\nconst highlightChunks = computed(() => {\n  const { autoEscape, caseSensitive, keywords, sourceString } = props;\n  // 是否区分大小写\n  const flags = caseSensitive ? 'g' : 'gi';\n  // 转数组\n  const _keywords = Array.isArray(keywords) ? keywords : [keywords];\n\n  // 生成分组\n  // generate chunks\n  let chunks = _keywords\n    .filter((keyword) => keyword)\n    .reduce<Array<{ start: number; end: number; highlight: boolean }>>(\n      (chunks, keyword) => {\n        // 是否自动转义\n        if (autoEscape) {\n          keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        }\n\n        // 用正则匹配\n        const regex = new RegExp(keyword, flags);\n\n        // 遍历关键词匹配值，最后生成 [{start, end, highlight: false}] 开始和结束值，高亮与否的数组\n\n        let match;\n        while ((match = regex.exec(sourceString))) {\n          const start = match.index;\n          const end = regex.lastIndex;\n\n          if (start >= end) {\n            regex.lastIndex++;\n            continue;\n          }\n\n          chunks.push({\n            start,\n            end,\n            highlight: true,\n          });\n        }\n\n        return chunks;\n      },\n      [],\n    );\n\n  // 合并分组\n  // merge chunks\n  chunks = chunks\n    .sort((a, b) => a.start - b.start)\n    .reduce<typeof chunks>((chunks, currentChunk) => {\n      const prevChunk = chunks[chunks.length - 1];\n\n      if (!prevChunk || currentChunk.start > prevChunk.end) {\n        const unhighlightStart = prevChunk ? prevChunk.end : 0;\n        const unhighlightEnd = currentChunk.start;\n\n        if (unhighlightStart !== unhighlightEnd) {\n          chunks.push({\n            start: unhighlightStart,\n            end: unhighlightEnd,\n            highlight: false,\n          });\n        }\n\n        chunks.push(currentChunk);\n      } else {\n        prevChunk.end = Math.max(prevChunk.end, currentChunk.end);\n      }\n\n      return chunks;\n    }, []);\n\n  const lastChunk = chunks[chunks.length - 1];\n\n  // 没有关键词时，没匹配到 chunks 的时候\n  if (!lastChunk) {\n    chunks.push({\n      start: 0,\n      end: sourceString.length,\n      highlight: false,\n    });\n  }\n\n  if (lastChunk && lastChunk.end < sourceString.length) {\n    chunks.push({\n      start: lastChunk.end,\n      end: sourceString.length,\n      highlight: false,\n    });\n  }\n\n  return chunks;\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"5-总结",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#5-总结",children:"#"}),"5. 总结"]}),"\n",(0,s.jsxs)(e.p,{children:["本文主要讲述了，如何阅读组件库的源码，如何将使用了 ",(0,s.jsx)(e.code,{children:"rsbuild"})," 的最新版本的 ",(0,s.jsx)(e.code,{children:"vant-cli"})," 配置开启 ",(0,s.jsx)(e.code,{children:"sourceMap"})," 进行调试源码。"]}),"\n",(0,s.jsx)(e.p,{children:"学习了高亮文本组件的原理和具体实现。实现原理是根据关键词通过正则匹配生成高亮块，然后在渲染时根据这些块的信息插入合适的标签和自定义样式名实现高亮效果。"}),"\n",(0,s.jsx)(e.p,{children:"组件代码虽不多，但实现相对比较优雅。"}),"\n",(0,s.jsxs)(e.p,{children:["学会写一个组件就能学会多个组件。建议自己多打断点调试源码，哪里不懂调试哪里。常看我的源码文章的读者都知道，我经常推荐要自己多动手调试源码，这样印象更为深刻。避免出现看懂了，但动手实践就不知道如何操作了的情况。",(0,s.jsx)(e.strong,{children:"纸上得来终觉浅，绝知此事要躬行"}),"。"]}),"\n",(0,s.jsxs)(e.h2,{id:"6-加源码共读交流群",children:[(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#6-加源码共读交流群",children:"#"}),"6. 加源码共读交流群"]}),"\n",(0,s.jsxs)(e.p,{children:["作者：常以",(0,s.jsx)(e.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"为名混迹于江湖。所知甚少，唯善学。"]}),"\n",(0,s.jsxs)(e.p,{children:["最后可以持续关注我",(0,s.jsx)(e.a,{href:"https://juejin.cn/user/1415826704971918",rel:"noopener noreferrer",target:"_blank",children:"@若川"}),"，欢迎 ",(0,s.jsx)(e.code,{children:"follow"})," ",(0,s.jsx)(e.a,{href:"https://github.com/ruochuan12",rel:"noopener noreferrer",target:"_blank",children:"我的 github"}),"。另外，想学源码，极力推荐关注我写的专栏",(0,s.jsx)(e.a,{href:"https://juejin.cn/column/6960551178908205093",rel:"noopener noreferrer",target:"_blank",children:"《学习源码整体架构系列》"}),"，目前是掘金关注人数（5.7k+人）第一的专栏，写有20余篇源码文章。"]}),"\n",(0,s.jsxs)(e.p,{children:["我倾力持续组织了3年多",(0,s.jsx)(e.a,{href:"https://juejin.cn/post/7079706017579139102",rel:"noopener noreferrer",target:"_blank",children:"每周大家一起学习200行左右的源码共读活动"}),"，感兴趣的可以",(0,s.jsxs)(e.a,{href:"https://juejin.cn/pin/7217386885793595453",rel:"noopener noreferrer",target:"_blank",children:["点此扫码加我微信 ",(0,s.jsx)(e.code,{children:"ruochuan02"})," 参与"]}),"。"]})]})}function g(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,h.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(o,n)})):o(n)}let p=g;g.__RSPRESS_PAGE_META={},g.__RSPRESS_PAGE_META["vant%2Fhighlight%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-准备工作",text:"2. 准备工作",depth:2},{id:"21-克隆源码--跑起来",text:"2.1 克隆源码 && 跑起来",depth:3},{id:"3-pnpm-run-dev--vant-cli-dev",text:"3. pnpm run dev => vant-cli dev",depth:2},{id:"31-libclijs",text:"3.1 lib/cli.js",depth:3},{id:"32-利用-demo-调试源码",text:"3.2 利用 demo 调试源码",depth:3},{id:"4-高亮",text:"4. 高亮",depth:2},{id:"41-入口文件-srchighlightindexts",text:"4.1 入口文件 src/highlight/index.ts",depth:3},{id:"42-主文件-srchighlighthighlighttsx",text:"4.2 主文件 src/highlight/Highlight.tsx",depth:3},{id:"43-highlightchunks-函数",text:"4.3 highlightChunks 函数",depth:3},{id:"5-总结",text:"5. 总结",depth:2},{id:"6-加源码共读交流群",text:"6. 加源码共读交流群",depth:2}],title:"分析 vant4 组件库源码，写一个常用的 highlight 高亮文本的组件",headingTitle:"分析 vant4 组件库源码，写一个常用的 highlight 高亮文本的组件",frontmatter:{highlight:"darcula",theme:"smartblue"}}},20713:function(n,e,r){r.d(e,{Z:()=>c});var s=r(52676),h=r(75271),i=r(92815);r(18544);let t={"zh-CN":n=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${n.minutes>=1?`${Math.ceil(n.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":n=>`Estimated reading time: ${n.minutes>=1?`${Math.ceil(n.minutes)} minutes`:"less than 1 minute"}`};function l(n,e,r){let s=Object.keys(t).includes(e)?e:r;return t[s](n)}let c=n=>{let{defaultLocale:e="en-US"}=n,r=(0,i.Vi)().page.readingTimeData,t=(0,i.Jr)(),c=(0,i.e7)(),[a,d]=(0,h.useState)(l(r,t,e));return(0,h.useEffect)(()=>{d(l(r,t,e))},[t,r]),(0,s.jsx)("span",{"data-dark":String(c),className:"rp-reading-time",children:a})}}}]);