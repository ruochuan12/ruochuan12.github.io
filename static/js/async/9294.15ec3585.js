"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["9294"],{44969:function(e,n,r){r.r(n),r.d(n,{default:()=>u});var s=r(52676),o=r(40453),c=r(20713);let d=r.p+"static/image/contents.15edbcda.png",i=r.p+"static/image/models.d88152ef.png",a=r.p+"static/image/middleware.246d4a8c.png",l=r.p+"static/image/middleware.3d360c9b.gif",t=r.p+"static/image/koa-instance.a592f44a.jpeg",h=r.p+"static/image/koa-instance-debug.fff470f7.jpeg",x=r.p+"static/image/koa-instance-xmind.b014009a.png";function j(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",code:"code",strong:"strong",img:"img",pre:"pre",ul:"ul",li:"li",h3:"h3",ol:"ol"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"学习-koa-源码的整体架构浅析koa洋葱模型原理和co原理",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#学习-koa-源码的整体架构浅析koa洋葱模型原理和co原理",children:"#"}),"学习 koa 源码的整体架构，浅析koa洋葱模型原理和co原理"]}),"\n",(0,s.jsx)(c.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["你好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，微信搜索",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/c3hFML3XN9KCUetDOZd-DQ",rel:"noopener noreferrer",target:"_blank",children:"「若川视野」"}),"关注我，专注前端技术分享。欢迎加我微信",(0,s.jsx)(n.code,{children:"ruochuan12"}),"，加群交流学习。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["这是",(0,s.jsx)(n.code,{children:"学习源码整体架构系列"}),"第七篇。整体架构这词语好像有点大，姑且就算是源码整体结构吧，主要就是学习是代码整体结构，不深究其他不是主线的具体函数的实现。本篇文章学习的是实际仓库的代码。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库地址"}),"：",(0,s.jsx)(n.code,{children:"git clone https://github.com/ruochuan12/koa-analysis.git"})]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"要是有人说到怎么读源码，正在读文章的你能推荐我的源码系列文章，那真是太好了"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"学习源码整体架构系列"}),"文章如下："]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["1.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5d39d2cbf265da1bc23fbd42",rel:"noopener noreferrer",target:"_blank",children:"学习 jQuery 源码整体架构，打造属于自己的 js 类库"}),"\n2.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5d4bf94de51d453bb13b65dc",rel:"noopener noreferrer",target:"_blank",children:"学习 underscore 源码整体架构，打造属于自己的函数式编程类库"}),"\n3.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5d767e1d6fb9a06b032025ea",rel:"noopener noreferrer",target:"_blank",children:"学习 lodash 源码整体架构，打造属于自己的函数式编程类库"}),"\n4.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5dba5a39e51d452a2378348a",rel:"noopener noreferrer",target:"_blank",children:"学习 sentry 源码整体架构，打造属于自己的前端异常监控SDK"}),"\n5.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5dd4e61a6fb9a05a5c010af0",rel:"noopener noreferrer",target:"_blank",children:"学习 vuex 源码整体架构，打造属于自己的状态管理库"}),"\n6.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5df349b5518825123751ba66",rel:"noopener noreferrer",target:"_blank",children:"学习 axios 源码整体架构，打造属于自己的请求库"}),"\n7.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5e69925cf265da571e262fe6",rel:"noopener noreferrer",target:"_blank",children:"学习 koa 源码的整体架构，浅析koa洋葱模型原理和co原理"}),"\n8.",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5ee63b7d51882542fc6265ad",rel:"noopener noreferrer",target:"_blank",children:"学习 redux 源码整体架构，深入理解 redux 及其中间件原理"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["感兴趣的读者可以点击阅读。","\n其他源码计划中的有：",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/express-analysis",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"express"})}),"、",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/vue-router-analysis",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"vue-rotuer"})}),"、",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/react-redux-analysis",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"react-redux"})})," 等源码，不知何时能写完（哭泣），欢迎持续关注我（若川）。"]}),"\n",(0,s.jsxs)(n.p,{children:["源码类文章，一般阅读量不高。已经有能力看懂的，自己就看了。不想看，不敢看的就不会去看源码。","\n所以我的文章，尽量写得让想看源码又不知道怎么看的读者能看懂。"]}),"\n",(0,s.jsxs)(n.p,{children:["如果你简历上一不小心写了熟悉",(0,s.jsx)(n.code,{children:"koa"}),"，面试官大概率会问："]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["1、",(0,s.jsx)(n.code,{children:"koa"}),"洋葱模型怎么实现的。","\n2、如果中间件中的",(0,s.jsx)(n.code,{children:"next()"}),"方法报错了怎么办。","\n3、",(0,s.jsx)(n.code,{children:"co"}),"的原理是怎样的。","\n等等问题"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"导读"}),"\n文章通过例子调试",(0,s.jsx)(n.code,{children:"koa"}),"，梳理",(0,s.jsx)(n.code,{children:"koa"}),"的主流程，来理解",(0,s.jsx)(n.code,{children:"koa-compose"}),"洋葱模型原理和",(0,s.jsx)(n.code,{children:"co"}),"库的原理，相信看完一定会有所收获。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"本文目录",src:d})}),"\n",(0,s.jsxs)(n.p,{children:["本文学习的",(0,s.jsx)(n.code,{children:"koa"}),"版本是",(0,s.jsx)(n.code,{children:"v2.11.0"}),"。克隆的官方仓库的",(0,s.jsx)(n.code,{children:"master"}),"分支。\n截至目前（2020年3月11日），最新一次",(0,s.jsx)(n.code,{children:"commit"}),"是",(0,s.jsx)(n.code,{children:"2020-01-04 07:41 Olle Jonsson"})," ",(0,s.jsx)(n.code,{children:"eda27608"}),"，",(0,s.jsx)(n.code,{children:"build: Drop unused Travis sudo: false directive (#1416)"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["本文仓库在这里",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis",rel:"noopener noreferrer",target:"_blank",children:"若川的 koa-analysis github 仓库 https://github.com/ruochuan12/koa-analysis"}),"。求个",(0,s.jsx)(n.code,{children:"star"}),"呀。"]}),"\n",(0,s.jsxs)(n.h2,{id:"2-本文阅读最佳方式",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-本文阅读最佳方式",children:"#"}),"2. 本文阅读最佳方式"]}),"\n",(0,s.jsxs)(n.p,{children:["先",(0,s.jsx)(n.code,{children:"star"}),"一下我的仓库，再把它",(0,s.jsx)(n.code,{children:"git clone https://github.com/ruochuan12/koa-analysis.git"}),"克隆下来。不用管你是否用过",(0,s.jsx)(n.code,{children:"nodejs"}),"。会一点点",(0,s.jsx)(n.code,{children:"promise、generator、async、await"}),"等知识即可看懂。如果一点点也不会，可以边看阮一峰老师的",(0,s.jsx)(n.a,{href:"https://es6.ruanyifeng.com/#docs/generator",rel:"noopener noreferrer",target:"_blank",children:"《ES6标准入门》"}),"相关章节。",(0,s.jsxs)(n.strong,{children:["跟着文章节奏调试和示例代码调试，动手调试（用",(0,s.jsx)(n.code,{children:"vscode"}),"或者",(0,s.jsx)(n.code,{children:"chrome"}),"）印象更加深刻"]}),"。文章长段代码不用细看，可以调试时再细看。看这类源码文章百遍，可能不如自己多调试几遍。也欢迎加我微信交流",(0,s.jsx)(n.code,{children:"ruochuan12"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 克隆我的这个仓库\ngit clone https://github.com/ruochuan12/koa-analysis.git\n# chrome 调试：\n# 全局安装 http-server\nnpm i -g http-server\nhs koa/examples/\n# 可以指定端口 -p 3001\n# hs -p 3001 koa/examples/\n# 浏览器中打开\n# 然后在浏览器中打开localhost:8080，开心的把代码调试起来\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这里把这个",(0,s.jsx)(n.code,{children:"examples"}),"文件夹做个简单介绍。"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"middleware"}),"文件夹是用来",(0,s.jsx)(n.code,{children:"vscode"}),"调试整体流程的。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"simpleKoa"})," 文件夹是",(0,s.jsx)(n.code,{children:"koa"}),"简化版，为了调试",(0,s.jsx)(n.code,{children:"koa-compose"}),"洋葱模型如何串联起来各个中间件的。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"koa-convert"}),"文件夹是用来调试",(0,s.jsx)(n.code,{children:"koa-convert"}),"和",(0,s.jsx)(n.code,{children:"co"}),"源码的。"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"co-generator"}),"文件夹是模拟实现",(0,s.jsx)(n.code,{children:"co"}),"的示例代码。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-vscode-调试-koa-源码方法",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-vscode-调试-koa-源码方法",children:"#"}),"3. vscode 调试 koa 源码方法"]}),"\n",(0,s.jsxs)(n.p,{children:["之前，我在知乎回答了一个问题",(0,s.jsx)(n.a,{href:"https://www.zhihu.com/question/350289336/answer/910970733",rel:"noopener noreferrer",target:"_blank",children:"一年内的前端看不懂前端框架源码怎么办？"}),"\n推荐了一些资料，阅读量还不错，大家有兴趣可以看看。主要有四点："]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["1.借助调试","\n2.搜索查阅相关高赞文章","\n3.把不懂的地方记录下来，查阅相关文档","\n4.总结"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["看源码，调试很重要，所以我详细写下 ",(0,s.jsx)(n.code,{children:"koa"})," 源码调试方法，帮助一些可能不知道如何调试的读者。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 我已经克隆到我的koa-analysis仓库了\ngit clone https://github.com/koajs/koa.git\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// package.json\n{\n  "name": "koa",\n  "version": "2.11.0",\n  "description": "Koa web app framework",\n  "main": "lib/application.js",\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["克隆源码后，看",(0,s.jsx)(n.code,{children:"package.json"}),"找到",(0,s.jsx)(n.code,{children:"main"}),"，就知道入口文件是",(0,s.jsx)(n.code,{children:"lib/application.js"}),"了。"]}),"\n",(0,s.jsxs)(n.p,{children:["大概看完项目结构后发现没有",(0,s.jsx)(n.code,{children:"examples"}),"文件夹（一般项目都会有这个文件夹，告知用户如何使用该项目），这时仔细看",(0,s.jsx)(n.code,{children:"README.md"}),"。\n如果看英文",(0,s.jsx)(n.code,{children:"README.md"}),"有些吃力，会发现在",(0,s.jsx)(n.code,{children:"Community"}),"标题下有一个",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN",rel:"noopener noreferrer",target:"_blank",children:"中文文档 v2.x"}),"。同时也有一个",(0,s.jsxs)(n.a,{href:"https://github.com/koajs/examples",rel:"noopener noreferrer",target:"_blank",children:[(0,s.jsx)(n.code,{children:"examples"}),"仓库"]}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 我已经克隆下来到我的仓库了\ngit clone https://github.com/koajs/examples.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这时再开心的把",(0,s.jsx)(n.code,{children:"examples"}),"克隆到自己电脑。可以安装好依赖，逐个研究学习下这里的例子，然后可能就一不小心掌握了",(0,s.jsx)(n.code,{children:"koa"}),"的基本用法。当然，我这里不详细写这一块了，我是自己手写一些例子来调试。"]}),"\n",(0,s.jsxs)(n.p,{children:["继续看文档会发现",(0,s.jsx)(n.strong,{children:"使用指南"}),"讲述",(0,s.jsx)(n.code,{children:"编写中间件"}),"。"]}),"\n",(0,s.jsxs)(n.h3,{id:"31-使用文档中的中间件koa-compose例子来调试",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#31-使用文档中的中间件koa-compose例子来调试",children:"#"}),"3.1 使用文档中的中间件",(0,s.jsx)(n.code,{children:"koa-compose"}),"例子来调试"]}),"\n",(0,s.jsxs)(n.p,{children:["学习 ",(0,s.jsx)(n.code,{children:"koa-compose"})," 前，先看两张图。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"洋葱模型示意图",src:i})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"洋葱模型中间件示意图",src:a})}),"\n",(0,s.jsxs)(n.p,{children:["在",(0,s.jsx)(n.code,{children:"koa"}),"中，请求响应都放在中间件的第一个参数",(0,s.jsx)(n.code,{children:"context"}),"对象中了。"]}),"\n",(0,s.jsxs)(n.p,{children:["再引用",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/guide.md#debugging-koa",rel:"noopener noreferrer",target:"_blank",children:"Koa中文文档"}),"中的一段："]}),"\n",(0,s.jsxs)(n.p,{children:["如果您是前端开发人员，您可以将 ",(0,s.jsx)(n.code,{children:"next()"}),"; 之前的任意代码视为“捕获”阶段，这个简易的 ",(0,s.jsx)(n.code,{children:"gif"})," 说明了 ",(0,s.jsx)(n.code,{children:"async"})," 函数如何使我们能够恰当地利用堆栈流来实现请求和响应流："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"中间件gif图",src:l})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"创建一个跟踪响应时间的日期"}),"\n",(0,s.jsx)(n.li,{children:"等待下一个中间件的控制"}),"\n",(0,s.jsx)(n.li,{children:"创建另一个日期跟踪持续时间"}),"\n",(0,s.jsx)(n.li,{children:"等待下一个中间件的控制"}),"\n",(0,s.jsx)(n.li,{children:"将响应主体设置为“Hello World”"}),"\n",(0,s.jsx)(n.li,{children:"计算持续时间"}),"\n",(0,s.jsx)(n.li,{children:"输出日志行"}),"\n",(0,s.jsx)(n.li,{children:"计算响应时间"}),"\n",(0,s.jsxs)(n.li,{children:["设置 ",(0,s.jsx)(n.code,{children:"X-Response-Time"})," 头字段"]}),"\n",(0,s.jsx)(n.li,{children:"交给 Koa 处理响应"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["读者们看完这个gif图，也可以思考下如何实现的。根据表现，可以猜测是",(0,s.jsx)(n.code,{children:"next"}),"是一个函数，而且返回的可能是一个",(0,s.jsx)(n.code,{children:"promise"}),"，被",(0,s.jsx)(n.code,{children:"await"}),"调用。"]}),"\n",(0,s.jsxs)(n.p,{children:["看到这个",(0,s.jsx)(n.code,{children:"gif"}),"图，我把之前写的",(0,s.jsx)(n.code,{children:"examples/koa-compose"}),"的调试方法",(0,s.jsx)(n.strong,{children:"含泪删除"}),"了。默默写上",(0,s.jsx)(n.code,{children:"gif"}),"图上的这些代码，想着这个读者们更容易读懂。\n我把这段代码写在这里 ",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis/blob/master/koa/examples/middleware/app.js",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"koa/examples/middleware/app.js"})}),"便于调试。"]}),"\n",(0,s.jsxs)(n.p,{children:["在项目路径下配置新建",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis/blob/master/.vscode/launch.json",rel:"noopener noreferrer",target:"_blank",children:".vscode/launch.json"}),"文件，",(0,s.jsx)(n.code,{children:"program"}),"配置为自己写的",(0,s.jsx)(n.code,{children:"koa/examples/middleware/app.js"}),"文件。"]}),"\n","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "type": "node",\n            "request": "launch",\n            "name": "启动程序",\n            "skipFiles": [\n                "<node_internals>/**"\n            ],\n            "program": "${workspaceFolder}/koa/examples/middleware/app.js"\n        }\n    ]\n}\n'})}),"\n","\n",(0,s.jsxs)(n.p,{children:["按",(0,s.jsx)(n.code,{children:"F5键"}),"开始调试，调试时先走主流程，必要的地方打上断点，不用一开始就关心细枝末节。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"断点调试要领："}),"\n",(0,s.jsx)(n.strong,{children:"赋值语句可以一步跳过，看返回值即可，后续详细再看。"}),"\n",(0,s.jsx)(n.strong,{children:"函数执行需要断点跟着看，也可以结合注释和上下文倒推这个函数做了什么。"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["上述比较啰嗦的写了一堆调试方法。主要是想着",(0,s.jsx)(n.code,{children:"授人予鱼不如授人予渔"}),"，这样换成其他源码也会调试了。"]}),"\n",(0,s.jsxs)(n.p,{children:["简单说下",(0,s.jsx)(n.code,{children:"chrome"}),"调试",(0,s.jsx)(n.code,{children:"nodejs"}),"，",(0,s.jsx)(n.code,{children:"chrome"}),"浏览器打开",(0,s.jsx)(n.code,{children:"chrome://inspect"}),"，点击配置**configure...**配置",(0,s.jsx)(n.code,{children:"127.0.0.1:端口号"}),"(端口号在",(0,s.jsx)(n.code,{children:"Vscode"})," 调试控制台显示了)。","\n更多可以查看",(0,s.jsx)(n.a,{href:"https://nodejs.org/en/docs/inspector",rel:"noopener noreferrer",target:"_blank",children:"English Debugging Guide"}),"\n",(0,s.jsx)(n.a,{href:"https://nodejs.org/zh-cn/docs/guides/debugging-getting-started/",rel:"noopener noreferrer",target:"_blank",children:"中文调试指南"}),"\n喜欢看视频的读者也可以看慕课网这个视频",(0,s.jsx)(n.a,{href:"https://www.imooc.com/learn/1093",rel:"noopener noreferrer",target:"_blank",children:"node.js调试入门"}),"，讲得还是比较详细的。","\n不过我感觉在",(0,s.jsx)(n.code,{children:"chrome"}),"调试",(0,s.jsx)(n.code,{children:"nodejs"}),"项目体验不是很好（可能是我方式不对），所以我大部分具体的代码时都放在",(0,s.jsx)(n.code,{children:"html"}),"文件",(0,s.jsx)(n.code,{children:"script"}),"形式，在",(0,s.jsx)(n.code,{children:"chrome"}),"调试了。"]}),"\n",(0,s.jsxs)(n.h2,{id:"4-先看看new-koa-结果app是什么",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-先看看new-koa-结果app是什么",children:"#"}),"4. 先看看",(0,s.jsx)(n.code,{children:"new Koa()"})," 结果",(0,s.jsx)(n.code,{children:"app"}),"是什么"]}),"\n",(0,s.jsxs)(n.p,{children:["看源码我习惯性看",(0,s.jsx)(n.strong,{children:"它的实例对象结构"}),"，一般所有属性和方法都放在实例对象上了，而且会通过原型链查找形式查找最顶端的属性和方法。"]}),"\n",(0,s.jsxs)(n.p,{children:["用",(0,s.jsx)(n.code,{children:"koa/examples/middleware/app.js"}),"文件调试时，先看下执行",(0,s.jsx)(n.code,{children:"new Koa()"}),"之后，",(0,s.jsx)(n.code,{children:"app"}),"是什么，有个初步印象。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 文件 koa/examples/middleware/app.js\nconst Koa = require('../../lib/application');\n\n// const Koa = require('koa');\n// 这里打个断点\nconst app = new Koa();\n// x-response-time\n\n// 这里打个断点\napp.use(async (ctx, next) => {\n\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["在调试控制台",(0,s.jsx)(n.code,{children:"ctrl + 反引号键（一般在"}),"Tab",(0,s.jsx)(n.code,{children:"上方的按键）唤起"}),"，输入",(0,s.jsx)(n.code,{children:"app"}),"，按",(0,s.jsx)(n.code,{children:"enter"}),"键打印",(0,s.jsx)(n.code,{children:"app"}),"。会有一张这样的图。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"koa 实例对象调试图",src:t})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"VScode"}),"也有一个代码调试神器插件",(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=hediet.debug-visualizer",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"Debug Visualizer"})}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["安装好后插件后，按",(0,s.jsx)(n.code,{children:"ctrl + shift + p"}),"，输入",(0,s.jsx)(n.code,{children:"Open a new Debug Visualizer View"}),"，来使用，输入",(0,s.jsx)(n.code,{children:"app"}),"，显示是这样的。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"koa 实例对象可视化简版",src:h})}),"\n",(0,s.jsx)(n.p,{children:"不过目前体验来看，相对还比较鸡肋，只能显示一级，而且只能显示对象，相信以后会更好。更多玩法可以查看它的文档。"}),"\n",(0,s.jsxs)(n.p,{children:["我把koa实例对象比较完整的用",(0,s.jsx)(n.code,{children:"xmind"}),"画出来了，大概看看就好，有个初步印象。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"koa 实例对象",src:x})}),"\n",(0,s.jsxs)(n.p,{children:["接着，我们可以看下",(0,s.jsx)(n.code,{children:"app 实例、context、request、request"}),"的官方文档。"]}),"\n",(0,s.jsxs)(n.h3,{id:"41-app-实例contextrequestrequest-官方api文档",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#41-app-实例contextrequestrequest-官方api文档",children:"#"}),"4.1 app 实例、context、request、request 官方API文档"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/api/index.md",rel:"noopener noreferrer",target:"_blank",children:"index API"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/api/context.md",rel:"noopener noreferrer",target:"_blank",children:"context API"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/api/request.md",rel:"noopener noreferrer",target:"_blank",children:"request API"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/api/response.md",rel:"noopener noreferrer",target:"_blank",children:"response API"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"可以真正使用的时候再去仔细看文档。"}),"\n",(0,s.jsxs)(n.h2,{id:"5-koa-主流程梳理简化",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-koa-主流程梳理简化",children:"#"}),"5. koa 主流程梳理简化"]}),"\n",(0,s.jsxs)(n.p,{children:["通过",(0,s.jsx)(n.code,{children:"F5启动调试（直接跳到下一个断点处）"}),"、",(0,s.jsx)(n.code,{children:"F10单步跳过"}),"、",(0,s.jsx)(n.code,{children:"F11单步调试"}),"等，配合重要的地方断点，调试完整体代码，其实比较容易整理出如下主流程的代码。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"class Emitter{\n  // node 内置模块\n  constructor(){\n  }\n}\nclass Koa extends Emitter{\n  constructor(options){\n    super();\n    options = options || {};\n    this.middleware = [];\n    this.context = {\n      method: 'GET',\n      url: '/url',\n      body: undefined,\n      set: function(key, val){\n        console.log('context.set', key, val);\n      },\n    };\n  }\n  use(fn){\n    this.middleware.push(fn);\n    return this;\n  }\n  listen(){\n    const  fnMiddleware = compose(this.middleware);\n    const ctx = this.context;\n    const handleResponse = () => respond(ctx);\n    const onerror = function(){\n      console.log('onerror');\n    };\n    fnMiddleware(ctx).then(handleResponse).catch(onerror);\n  }\n}\nfunction respond(ctx){\n  console.log('handleResponse');\n  console.log('response.end', ctx.body);\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["重点就在",(0,s.jsx)(n.code,{children:"listen"}),"函数里的",(0,s.jsx)(n.code,{children:"compose"}),"这个函数，接下来我们就详细来",(0,s.jsx)(n.strong,{children:"欣赏"}),"下这个函数。"]}),"\n",(0,s.jsxs)(n.h2,{id:"6-koa-compose-源码洋葱模型实现",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-koa-compose-源码洋葱模型实现",children:"#"}),"6. koa-compose 源码（洋葱模型实现）"]}),"\n",(0,s.jsxs)(n.p,{children:["通过",(0,s.jsx)(n.code,{children:"app.use()"})," 添加了若干函数，但是要把它们串起来执行呀。像上文的",(0,s.jsx)(n.code,{children:"gif"}),"图一样。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"compose"}),"函数，传入一个数组，返回一个函数。对入参是不是数组和校验数组每一项是不是函数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function compose (middleware) {\n  if (!Array.isArray(middleware)) throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn !== 'function') throw new TypeError('Middleware must be composed of functions!')\n  }\n\n //  传入对象 context 返回Promise\n  return function (context, next) {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n    function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["把简化的代码和",(0,s.jsx)(n.code,{children:"koa-compose"}),"代码写在了一个文件中。",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis/blob/master/koa/examples/simpleKoa/koa-compose.js",rel:"noopener noreferrer",target:"_blank",children:"koa/examples/simpleKoa/koa-compose.js"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"hs koa/examples/\n# 然后可以打开localhost:8080/simpleKoa，开心的把代码调试起来\n"})}),"\n",(0,s.jsxs)(n.p,{children:["不过这样好像还是有点麻烦，我还把这些代码放在",(0,s.jsxs)(n.a,{href:"https://codepen.io/lxchuan12/pen/wvarPEb",rel:"noopener noreferrer",target:"_blank",children:[(0,s.jsx)(n.code,{children:"codepen"})," https://codepen.io/lxchuan12/pen/wvarPEb"]}),"中，",(0,s.jsx)(n.strong,{children:"直接可以在线调试啦"}),"。是不是觉得很贴心^_^，自己多调试几遍便于消化理解。"]}),"\n",(0,s.jsxs)(n.p,{children:["你会发现",(0,s.jsx)(n.code,{children:"compose"}),"就是类似这样的结构（移除一些判断）。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 这样就可能更好理解了。\n// simpleKoaCompose\nconst [fn1, fn2, fn3] = this.middleware;\nconst fnMiddleware = function(context){\n    return Promise.resolve(\n      fn1(context, function next(){\n        return Promise.resolve(\n          fn2(context, function next(){\n              return Promise.resolve(\n                  fn3(context, function next(){\n                    return Promise.resolve();\n                  })\n              )\n          })\n        )\n    })\n  );\n};\nfnMiddleware(ctx).then(handleResponse).catch(onerror);\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["也就是说",(0,s.jsx)(n.code,{children:"koa-compose"}),"返回的是一个",(0,s.jsx)(n.code,{children:"Promise"}),"，",(0,s.jsx)(n.code,{children:"Promise"}),"中取出第一个函数（",(0,s.jsx)(n.code,{children:"app.use"}),"添加的中间件），传入",(0,s.jsx)(n.code,{children:"context"}),"和第一个",(0,s.jsx)(n.code,{children:"next"}),"函数来执行。","\n第一个",(0,s.jsx)(n.code,{children:"next"}),"函数里也是返回的是一个",(0,s.jsx)(n.code,{children:"Promise"}),"，",(0,s.jsx)(n.code,{children:"Promise"}),"中取出第二个函数（",(0,s.jsx)(n.code,{children:"app.use"}),"添加的中间件），传入",(0,s.jsx)(n.code,{children:"context"}),"和第二个",(0,s.jsx)(n.code,{children:"next"}),"函数来执行。","\n第二个",(0,s.jsx)(n.code,{children:"next"}),"函数里也是返回的是一个",(0,s.jsx)(n.code,{children:"Promise"}),"，",(0,s.jsx)(n.code,{children:"Promise"}),"中取出第三个函数（",(0,s.jsx)(n.code,{children:"app.use"}),"添加的中间件），传入",(0,s.jsx)(n.code,{children:"context"}),"和第三个",(0,s.jsx)(n.code,{children:"next"}),"函数来执行。","\n第三个...","\n以此类推。最后一个中间件中有调用",(0,s.jsx)(n.code,{children:"next"}),"函数，则返回",(0,s.jsx)(n.code,{children:"Promise.resolve"}),"。如果没有，则不执行",(0,s.jsx)(n.code,{children:"next"}),"函数。\n这样就把所有中间件串联起来了。这也就是我们常说的洋葱模型。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"不得不说非常惊艳，“玩还是大神会玩”"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["这种把函数存储下来的方式，在很多源码中都有看到。比如",(0,s.jsx)(n.code,{children:"lodash"}),"源码的惰性求值，",(0,s.jsx)(n.code,{children:"vuex"}),"也是把",(0,s.jsx)(n.code,{children:"action"}),"等函数存储下，最后才去调用。"]}),"\n",(0,s.jsxs)(n.p,{children:["搞懂了",(0,s.jsx)(n.code,{children:"koa-compose"})," 洋葱模型实现的代码，其他代码就不在话下了。"]}),"\n",(0,s.jsxs)(n.h2,{id:"7-错误处理",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-错误处理",children:"#"}),"7. 错误处理"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/error-handling.md",rel:"noopener noreferrer",target:"_blank",children:"中文文档 错误处理"})}),"\n",(0,s.jsx)(n.p,{children:"仔细看文档，文档中写了三种捕获错误的方式。"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ctx.onerror"})," 中间件中的错误捕获"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app.on('error', (err) => {})"})," 最外层实例事件监听形式\n也可以看看例子",(0,s.jsx)(n.a,{href:"https://github.com/koajs/examples/blob/master/errors/app.js",rel:"noopener noreferrer",target:"_blank",children:"koajs/examples/errors/app.js 文件"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app.onerror = (err) => {}"})," 重写",(0,s.jsx)(n.code,{children:"onerror"}),"自定义形式\n也可以看",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis/blob/master/koa/test/context/onerror.js",rel:"noopener noreferrer",target:"_blank",children:"测试用例 onerror"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// application.js 文件\nclass Application extends Emitter {\n  // 代码有简化组合\n  listen(){\n    const  fnMiddleware = compose(this.middleware);\n    if (!this.listenerCount('error')) this.on('error', this.onerror);\n    const onerror = err => ctx.onerror(err);\n    fnMiddleware(ctx).then(handleResponse).catch(onerror);\n  }\n  onerror(err) {\n    // 代码省略\n    // ...\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"ctx.onerror"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"lib/context.js"}),"文件中，有一个函数",(0,s.jsx)(n.code,{children:"onerror"}),"，而且有这么一行代码",(0,s.jsx)(n.code,{children:"this.app.emit('error', err, this)"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  onerror(){\n    // delegate\n    // app 是在new Koa() 实例\n    this.app.emit('error', err, this);\n  }\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"app.use(async (ctx, next) => {\n  try {\n    await next();\n  } catch (err) {\n    err.status = err.statusCode || err.status || 500;\n    throw err;\n  }\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"try catch"})," 错误或被",(0,s.jsx)(n.code,{children:"fnMiddleware(ctx).then(handleResponse).catch(onerror);"}),"，这里的",(0,s.jsx)(n.code,{children:"onerror"}),"是",(0,s.jsx)(n.code,{children:"ctx.onerror"}),"\n而",(0,s.jsx)(n.code,{children:"ctx.onerror"}),"函数中又调用了",(0,s.jsx)(n.code,{children:"this.app.emit('error', err, this)"}),"，所以在最外围",(0,s.jsx)(n.code,{children:"app.on('error'，err => {})"}),"可以捕获中间件链中的错误。\n因为",(0,s.jsx)(n.code,{children:"koa"}),"继承自",(0,s.jsx)(n.code,{children:"events模块"}),"，所以有'emit'和",(0,s.jsx)(n.code,{children:"on"}),"等方法）"]}),"\n",(0,s.jsxs)(n.h2,{id:"8-koa2-和-koa1-的简单对比",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#8-koa2-和-koa1-的简单对比",children:"#"}),"8. koa2 和 koa1 的简单对比"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/migration.md",rel:"noopener noreferrer",target:"_blank",children:"中文文档中描述了 koa2 和 koa1 的区别"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"koa1"}),"中主要是",(0,s.jsx)(n.code,{children:"generator"}),"函数。",(0,s.jsx)(n.code,{children:"koa2"}),"中会自动转换",(0,s.jsx)(n.code,{children:"generator"}),"函数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Koa 将转换\napp.use(function *(next) {\n  const start = Date.now();\n  yield next;\n  const ms = Date.now() - start;\n  console.log(`${this.method} ${this.url} - ${ms}ms`);\n});\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"81-koa-convert-源码",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#81-koa-convert-源码",children:"#"}),"8.1 koa-convert 源码"]}),"\n",(0,s.jsxs)(n.p,{children:["在",(0,s.jsx)(n.code,{children:"vscode/launch.json"}),"文件，找到这个",(0,s.jsx)(n.code,{children:"program"}),"字段，修改为",(0,s.jsx)(n.code,{children:'"program": "${workspaceFolder}/koa/examples/koa-convert/app.js"'}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["通过",(0,s.jsx)(n.code,{children:"F5启动调试（直接跳到下一个断点处）"}),"、",(0,s.jsx)(n.code,{children:"F10单步跳过"}),"、",(0,s.jsx)(n.code,{children:"F11单步调试"}),"调试走一遍流程。重要地方断点调试。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"app.use"}),"时有一层判断，是否是",(0,s.jsx)(n.code,{children:"generator"}),"函数，如果是则用",(0,s.jsx)(n.code,{children:"koa-convert"}),"暴露的方法",(0,s.jsx)(n.code,{children:"convert"}),"来转换重新赋值，再存入",(0,s.jsx)(n.code,{children:"middleware"}),"，后续再使用。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"class Koa extends Emitter{\n  use(fn) {\n    if (typeof fn !== 'function') throw new TypeError('middleware must be a function!');\n    if (isGeneratorFunction(fn)) {\n      deprecate('Support for generators will be removed in v3. ' +\n                'See the documentation for examples of how to convert old middleware ' +\n                'https://github.com/koajs/koa/blob/master/docs/migration.md');\n      fn = convert(fn);\n    }\n    debug('use %s', fn._name || fn.name || '-');\n    this.middleware.push(fn);\n    return this;\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"koa-convert"}),"源码挺多，核心代码其实是这样的。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function convert(){\n return function (ctx, next) {\n    return co.call(ctx, mw.call(ctx, createGenerator(next)))\n  }\n  function * createGenerator (next) {\n    return yield next()\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["最后还是通过",(0,s.jsx)(n.code,{children:"co"}),"来转换的。所以接下来看",(0,s.jsx)(n.code,{children:"co"}),"的源码。"]}),"\n",(0,s.jsxs)(n.h3,{id:"82-co-源码",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#82-co-源码",children:"#"}),"8.2 co 源码"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/tj/co",rel:"noopener noreferrer",target:"_blank",children:"tj大神写的co 仓库"})}),"\n",(0,s.jsxs)(n.p,{children:["本小节的示例代码都在这个文件夹",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis/tree/master/koa/examples/co-generator",rel:"noopener noreferrer",target:"_blank",children:(0,s.jsx)(n.code,{children:"koa/examples/co-generator"})}),"中，",(0,s.jsx)(n.code,{children:"hs koa/example"}),"，可以自行打开",(0,s.jsx)(n.code,{children:"https://localhost:8080/co-generator"}),"调试查看。"]}),"\n",(0,s.jsxs)(n.p,{children:["看",(0,s.jsx)(n.code,{children:"co"}),"源码前，先看几段简单代码。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 写一个请求简版请求\nfunction request(ms= 1000) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({name: '若川'});\n    }, ms);\n  });\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 获取generator的值\nfunction* generatorFunc(){\n  const res = yield request();\n  console.log(res, 'generatorFunc-res');\n}\ngeneratorFunc(); // 报告，我不会输出你想要的结果的\n"})}),"\n",(0,s.jsxs)(n.p,{children:["简单来说",(0,s.jsx)(n.code,{children:"co"}),"，就是把",(0,s.jsx)(n.code,{children:"generator"}),"自动执行，再返回一个",(0,s.jsx)(n.code,{children:"promise"}),"。\n",(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"generator"}),"函数这玩意它不自动执行呀，还要一步步调用",(0,s.jsx)(n.code,{children:"next()"}),"，也就是叫它走一步才走一步"]}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["所以有了",(0,s.jsx)(n.code,{children:"async、await"}),"函数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// await 函数 自动执行\nasync function asyncFunc(){\n    const res = await request();\n    console.log(res, 'asyncFunc-res await 函数 自动执行');\n}\nasyncFunc(); // 输出结果\n"})}),"\n",(0,s.jsxs)(n.p,{children:["也就是说",(0,s.jsx)(n.code,{children:"co"}),"需要做的事情，是让",(0,s.jsx)(n.code,{children:"generator"}),"向",(0,s.jsx)(n.code,{children:"async、await"}),"函数一样自动执行。"]}),"\n",(0,s.jsxs)(n.h3,{id:"83-模拟实现简版-co第一版",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#83-模拟实现简版-co第一版",children:"#"}),"8.3 模拟实现简版 co（第一版）"]}),"\n",(0,s.jsxs)(n.p,{children:["这时，我们来模拟实现第一版的",(0,s.jsx)(n.code,{children:"co"}),"。根据",(0,s.jsx)(n.code,{children:"generator"}),"的特性，其实容易写出如下代码。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 获取generator的值\nfunction* generatorFunc(){\n  const res = yield request();\n  console.log(res, 'generatorFunc-res');\n}\n\nfunction coSimple(gen){\n  gen = gen();\n  console.log(gen, 'gen');\n\n  const ret = gen.next();\n  const promise = ret.value;\n  promise.then(res => {\n    gen.next(res);\n  });\n}\ncoSimple(generatorFunc);\n// 输出了想要的结果\n// {name: \"若川\"}\"generatorFunc-res\"\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"84-模拟实现简版-co第二版",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#84-模拟实现简版-co第二版",children:"#"}),"8.4 模拟实现简版 co（第二版）"]}),"\n",(0,s.jsxs)(n.p,{children:["但是实际上，不会上面那么简单的。有可能是多个",(0,s.jsx)(n.code,{children:"yield"}),"和传参数的情况。\n传参可以通过这如下两行代码来解决。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const args = Array.prototype.slice.call(arguments, 1);\ngen = gen.apply(ctx, args);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["两个",(0,s.jsx)(n.code,{children:"yield"}),"，我大不了重新调用一下",(0,s.jsx)(n.code,{children:"promise.then"}),"，搞定。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 多个yeild，传参情况\nfunction* generatorFunc(suffix = ''){\n  const res = yield request();\n  console.log(res, 'generatorFunc-res' + suffix);\n\n  const res2 = yield request();\n  console.log(res2, 'generatorFunc-res-2' + suffix);\n}\n\nfunction coSimple(gen){\n  const ctx = this;\n  const args = Array.prototype.slice.call(arguments, 1);\n  gen = gen.apply(ctx, args);\n  console.log(gen, 'gen');\n\n  const ret = gen.next();\n  const promise = ret.value;\n  promise.then(res => {\n    const ret = gen.next(res);\n    const promise = ret.value;\n      promise.then(res => {\n        gen.next(res);\n      });\n  });\n}\n\ncoSimple(generatorFunc, ' 哎呀，我真的是后缀');\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"85-模拟实现简版-co第三版",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#85-模拟实现简版-co第三版",children:"#"}),"8.5 模拟实现简版 co（第三版）"]}),"\n",(0,s.jsxs)(n.p,{children:["问题是肯定不止两次，无限次的",(0,s.jsx)(n.code,{children:"yield"}),"的呢，这时肯定要把重复的封装起来。而且返回是",(0,s.jsx)(n.code,{children:"promise"}),"，这就实现了如下版本的代码。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function* generatorFunc(suffix = ''){\n  const res = yield request();\n  console.log(res, 'generatorFunc-res' + suffix);\n\n  const res2 = yield request();\n  console.log(res2, 'generatorFunc-res-2' + suffix);\n\n  const res3 = yield request();\n  console.log(res3, 'generatorFunc-res-3' + suffix);\n\n  const res4 = yield request();\n  console.log(res4, 'generatorFunc-res-4' + suffix);\n}\n\nfunction coSimple(gen){\n  const ctx = this;\n  const args = Array.prototype.slice.call(arguments, 1);\n  gen = gen.apply(ctx, args);\n  console.log(gen, 'gen');\n\n  return new Promise((resolve, reject) => {\n\n    onFulfilled();\n\n    function onFulfilled(res){\n      const ret = gen.next(res);\n      next(ret);\n    }\n\n    function next(ret) {\n      const promise = ret.value;\n      promise && promise.then(onFulfilled);\n    }\n\n  });\n}\n\ncoSimple(generatorFunc, ' 哎呀，我真的是后缀');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["但第三版的模拟实现简版",(0,s.jsx)(n.code,{children:"co"}),"中，还没有考虑报错和一些参数合法的情况。"]}),"\n",(0,s.jsxs)(n.h3,{id:"86-最终来看下co源码",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#86-最终来看下co源码",children:"#"}),"8.6 最终来看下",(0,s.jsx)(n.code,{children:"co"}),"源码"]}),"\n",(0,s.jsxs)(n.p,{children:["这时来看看",(0,s.jsx)(n.code,{children:"co"}),"的源码，报错和错误的情况，错误时调用",(0,s.jsx)(n.code,{children:"reject"}),"，是不是就好理解了一些呢。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"function co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    // 把参数传递给gen函数并执行\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    // 如果不是函数 直接返回\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    // 反复执行调用自己\n    function next(ret) {\n      // 检查当前是否为 Generator 函数的最后一步，如果是就返回\n      if (ret.done) return resolve(ret.value);\n      // 确保返回值是promise对象。\n      var value = toPromise.call(ctx, ret.value);\n      // 使用 then 方法，为返回值加上回调函数，然后通过 onFulfilled 函数再次调用 next 函数。\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      // 在参数不符合要求的情况下（参数非 Thunk 函数和 Promise 对象），将 Promise 对象的状态改为 rejected，从而终止执行。\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"9-koa-和-express-简单对比",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#9-koa-和-express-简单对比",children:"#"}),"9. koa 和 express 简单对比"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN/blob/master/koa-vs-express.md",rel:"noopener noreferrer",target:"_blank",children:"中文文档 koa 和 express 对比"})}),"\n",(0,s.jsxs)(n.p,{children:["文档里写的挺全面的。简单来说",(0,s.jsx)(n.code,{children:"koa2"}),"语法更先进，更容易深度定制（",(0,s.jsx)(n.code,{children:"egg.js"}),"、",(0,s.jsx)(n.code,{children:"think.js"}),"、底层框架都是",(0,s.jsx)(n.code,{children:"koa"}),"）。"]}),"\n",(0,s.jsxs)(n.h2,{id:"10-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#10-总结",children:"#"}),"10. 总结"]}),"\n",(0,s.jsxs)(n.p,{children:["文章通过",(0,s.jsx)(n.code,{children:"授人予鱼不如授人予鱼"}),"的方式，告知如何调试源码，看完了",(0,s.jsx)(n.code,{children:"koa-compose"}),"洋葱模型实现，",(0,s.jsx)(n.code,{children:"koa-convert"}),"和",(0,s.jsx)(n.code,{children:"co"}),"等源码。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"koa-compose"}),"是将",(0,s.jsx)(n.code,{children:"app.use"}),"添加到",(0,s.jsx)(n.code,{children:"middleware"}),"数组中的中间件（函数），通过使用",(0,s.jsx)(n.code,{children:"Promise"}),"串联起来，",(0,s.jsx)(n.code,{children:"next()"}),"返回的是一个",(0,s.jsx)(n.code,{children:"promise"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"koa-convert"})," 判断",(0,s.jsx)(n.code,{children:"app.use"}),"传入的函数是否是",(0,s.jsx)(n.code,{children:"generator"}),"函数，如果是则用",(0,s.jsx)(n.code,{children:"koa-convert"}),"来转换，最终还是调用的",(0,s.jsx)(n.code,{children:"co"}),"来转换。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"co"}),"源码实现原理：其实就是通过不断的调用",(0,s.jsx)(n.code,{children:"generator"}),"函数的",(0,s.jsx)(n.code,{children:"next()"}),"函数，来达到自动执行",(0,s.jsx)(n.code,{children:"generator"}),"函数的效果（类似",(0,s.jsx)(n.code,{children:"async、await函数的自动自行"}),"）。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"koa"}),"框架总结：主要就是四个核心概念，洋葱模型（把中间件串联起来），",(0,s.jsx)(n.code,{children:"http"}),"请求上下文（",(0,s.jsx)(n.code,{children:"context"}),"）、",(0,s.jsx)(n.code,{children:"http"}),"请求对象、",(0,s.jsx)(n.code,{children:"http"}),"响应对象。"]}),"\n",(0,s.jsxs)(n.p,{children:["本文仓库在这里",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/koa-analysis",rel:"noopener noreferrer",target:"_blank",children:"若川的 koa-analysis github 仓库 https://github.com/ruochuan12/koa-analysis"}),"。求个",(0,s.jsx)(n.code,{children:"star"}),"呀。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/ruochuan12/koa-analysis.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["再强烈建议下按照",(0,s.jsx)(n.strong,{children:"本文阅读最佳方式"}),"，克隆代码下来，",(0,s.jsx)(n.strong,{children:"动手调试代码学习更加深刻"}),"。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["如果读者发现有不妥或可改善之处，再或者哪里没写明白的地方，欢迎评论指出，也欢迎加我微信交流",(0,s.jsx)(n.code,{children:"ruochuan12"}),"。另外觉得写得不错，对您有些许帮助，可以点赞、评论、转发分享，也是对笔者的一种支持，万分感谢。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"101-解答下开头的提问",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#101-解答下开头的提问",children:"#"}),"10.1 解答下开头的提问"]}),"\n",(0,s.jsx)(n.p,{children:"仅供参考"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["1、",(0,s.jsx)(n.code,{children:"koa"}),"洋葱模型怎么实现的。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["可以参考上文整理的简版",(0,s.jsx)(n.code,{children:"koa-compose"}),"作答。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// 这样就可能更好理解了。\n// simpleKoaCompose\nconst [fn1, fn2, fn3] = this.middleware;\nconst fnMiddleware = function(context){\n    return Promise.resolve(\n      fn1(context, function next(){\n        return Promise.resolve(\n          fn2(context, function next(){\n              return Promise.resolve(\n                  fn3(context, function next(){\n                    return Promise.resolve();\n                  })\n              )\n          })\n        )\n    })\n  );\n};\nfnMiddleware(ctx).then(handleResponse).catch(onerror);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["答：app.use() 把中间件函数存储在",(0,s.jsx)(n.code,{children:"middleware"}),"数组中，最终会调用",(0,s.jsx)(n.code,{children:"koa-compose"}),"导出的函数",(0,s.jsx)(n.code,{children:"compose"}),"返回一个",(0,s.jsx)(n.code,{children:"promise"}),"，中间函数的第一个参数",(0,s.jsx)(n.code,{children:"ctx"}),"是包含响应和请求的一个对象，会不断传递给下一个中间件。",(0,s.jsx)(n.code,{children:"next"}),"是一个函数，返回的是一个",(0,s.jsx)(n.code,{children:"promise"}),"。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["2、如果中间件中的",(0,s.jsx)(n.code,{children:"next()"}),"方法报错了怎么办。"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"可参考上文整理的错误处理作答。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"ctx.onerror = function {\n  this.app.emit('error', err, this);\n};\n  listen(){\n    const  fnMiddleware = compose(this.middleware);\n    if (!this.listenerCount('error')) this.on('error', this.onerror);\n    const onerror = err => ctx.onerror(err);\n    fnMiddleware(ctx).then(handleResponse).catch(onerror);\n  }\n  onerror(err) {\n    // 代码省略\n    // ...\n  }\n"})}),"\n",(0,s.jsxs)(n.p,{children:["答：中间件链错误会由",(0,s.jsx)(n.code,{children:"ctx.onerror"}),"捕获，该函数中会调用",(0,s.jsx)(n.code,{children:"this.app.emit('error', err, this)"}),"（因为",(0,s.jsx)(n.code,{children:"koa"}),"继承自",(0,s.jsx)(n.code,{children:"events模块"}),"，所以有'emit'和",(0,s.jsx)(n.code,{children:"on"}),"等方法），可以使用",(0,s.jsx)(n.code,{children:"app.on('error', (err) => {})"}),"，或者",(0,s.jsx)(n.code,{children:"app.onerror = (err) => {}"}),"进行捕获。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["3、",(0,s.jsx)(n.code,{children:"co"}),"的原理是怎样的。","\n答：",(0,s.jsx)(n.code,{children:"co"}),"的原理是通过不断调用",(0,s.jsx)(n.code,{children:"generator"}),"函数的",(0,s.jsx)(n.code,{children:"next"}),"方法来达到自动执行",(0,s.jsx)(n.code,{children:"generator"}),"函数的，类似",(0,s.jsx)(n.code,{children:"async、await"}),"函数自动执行。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["答完，面试官可能觉得小伙子还是蛮懂",(0,s.jsx)(n.code,{children:"koa"}),"的啊。当然也可能继续追问，直到答不出..."]}),"\n",(0,s.jsxs)(n.h3,{id:"102-还能做些什么-",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#102-还能做些什么-",children:"#"}),"10.2 还能做些什么 ？"]}),"\n",(0,s.jsxs)(n.p,{children:["学完了整体流程，",(0,s.jsx)(n.code,{children:"koa-compose"}),"、",(0,s.jsx)(n.code,{children:"koa-convert"}),"和",(0,s.jsx)(n.code,{children:"co"}),"的源码。"]}),"\n",(0,s.jsxs)(n.p,{children:["还能仔细看看看",(0,s.jsx)(n.code,{children:"http"}),"请求上下文（",(0,s.jsx)(n.code,{children:"context"}),"）、",(0,s.jsx)(n.code,{children:"http"}),"请求对象、",(0,s.jsx)(n.code,{children:"http"}),"响应对象的具体实现。"]}),"\n",(0,s.jsxs)(n.p,{children:["还能根据我文章说的调试方式调试",(0,s.jsx)(n.a,{href:"https://github.com/koajs",rel:"noopener noreferrer",target:"_blank",children:"koa 组织"}),"中的各种中间件，比如",(0,s.jsx)(n.code,{children:"koa-bodyparser"}),", ",(0,s.jsx)(n.code,{children:"koa-router"}),"，",(0,s.jsx)(n.code,{children:"koa-jwt"}),"，",(0,s.jsx)(n.code,{children:"koa-session"}),"、",(0,s.jsx)(n.code,{children:"koa-cors"}),"等等。"]}),"\n",(0,s.jsxs)(n.p,{children:["还能把",(0,s.jsxs)(n.a,{href:"https://github.com/koajs/examples",rel:"noopener noreferrer",target:"_blank",children:[(0,s.jsx)(n.code,{children:"examples"}),"仓库"]}),"克隆下来，我的这个仓库已经克隆了，挨个调试学习下源码。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"web"}),"框架有很多，比如",(0,s.jsx)(n.code,{children:"Express.js"}),"，",(0,s.jsx)(n.code,{children:"Koa.js"}),"、",(0,s.jsx)(n.code,{children:"Egg.js"}),"、",(0,s.jsx)(n.code,{children:"Nest.js"}),"、",(0,s.jsx)(n.code,{children:"Next.js"}),"、",(0,s.jsx)(n.code,{children:"Fastify.js"}),"、",(0,s.jsx)(n.code,{children:"Hapi.js"}),"、",(0,s.jsx)(n.code,{children:"Restify.js"}),"、",(0,s.jsx)(n.code,{children:"Loopback.io"}),"、",(0,s.jsx)(n.code,{children:"Sails.js"}),"、",(0,s.jsx)(n.code,{children:"Midway.js"}),"等等。"]}),"\n",(0,s.jsx)(n.p,{children:"还能把这些框架的优势劣势、设计思想等学习下。"}),"\n",(0,s.jsxs)(n.p,{children:["还能继续学习",(0,s.jsx)(n.code,{children:"HTTP"}),"协议、",(0,s.jsx)(n.code,{children:"TCP/IP"}),"协议网络相关，虽然不属于",(0,s.jsx)(n.code,{children:"koa"}),"的知识，但需深入学习掌握。"]}),"\n",(0,s.jsx)(n.p,{children:"学无止境~~~"}),"\n",(0,s.jsxs)(n.h2,{id:"11-推荐阅读",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-推荐阅读",children:"#"}),"11. 推荐阅读"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://koajs.com/",rel:"noopener noreferrer",target:"_blank",children:"koa 官网"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/koajs/koa",rel:"noopener noreferrer",target:"_blank",children:"koa 仓库"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/koajs",rel:"noopener noreferrer",target:"_blank",children:"koa 组织"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/demopark/koa-docs-Zh-CN",rel:"noopener noreferrer",target:"_blank",children:"koa2 中文文档"})," | ",(0,s.jsx)(n.a,{href:"https://github.com/tj/co",rel:"noopener noreferrer",target:"_blank",children:"co 仓库"}),"\n",(0,s.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/p/34797505",rel:"noopener noreferrer",target:"_blank",children:"知乎@姚大帅：可能是目前市面上比较有诚意的Koa2源码解读"}),"\n",(0,s.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/p/24559011",rel:"noopener noreferrer",target:"_blank",children:"知乎@零小白：十分钟带你看完 KOA 源码"}),"\n",(0,s.jsx)(n.a,{href:"https://developers.weixin.qq.com/community/develop/article/doc/0000e4c9290bc069f3380e7645b813",rel:"noopener noreferrer",target:"_blank",children:"微信开放社区@小丹の：可能是目前最全的koa源码解析指南"}),"\n",(0,s.jsx)(n.a,{href:"https://ivweb.io/article.html?_id=100334",rel:"noopener noreferrer",target:"_blank",children:"IVWEB官方账号: KOA2框架原理解析和实现"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/berwin/Blog/issues/9",rel:"noopener noreferrer",target:"_blank",children:"深入浅出vue.js 作者 berwin: 深入浅出 Koa2 原理"}),"\n",(0,s.jsx)(n.a,{href:"http://www.ruanyifeng.com/blog/2015/05/co.html",rel:"noopener noreferrer",target:"_blank",children:"阮一峰老师：co 函数库的含义和用法"})]}),"\n",(0,s.jsxs)(n.h2,{id:"另一个系列",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#另一个系列",children:"#"}),"另一个系列"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://juejin.im/post/5c433e216fb9a049c15f841b",rel:"noopener noreferrer",target:"_blank",children:"面试官问：JS的继承"}),"\n",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5c0c87b35188252e8966c78a",rel:"noopener noreferrer",target:"_blank",children:"面试官问：JS的this指向"}),"\n",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5bf6c79bf265da6142738b29",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的call和apply方法"}),"\n",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5bec4183f265da616b1044d7",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的bind方法"}),"\n",(0,s.jsx)(n.a,{href:"https://juejin.im/post/5bde7c926fb9a049f66b8b52",rel:"noopener noreferrer",target:"_blank",children:"面试官问：能否模拟实现JS的new操作符"})]}),"\n",(0,s.jsxs)(n.h2,{id:"关于",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#关于",children:"#"}),"关于"]}),"\n",(0,s.jsxs)(n.p,{children:["作者：常以",(0,s.jsx)(n.strong,{children:"若川"}),"为名混迹于江湖。前端路上 | PPT爱好者 | 所知甚少，唯善学。","\n",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川的博客"}),"，使用",(0,s.jsx)(n.code,{children:"vuepress"}),"重构了，阅读体验可能更好些","\n",(0,s.jsx)(n.a,{href:"https://juejin.cn/user/1415826704971918/posts",rel:"noopener noreferrer",target:"_blank",children:"掘金专栏"}),"，欢迎关注~","\n",(0,s.jsxs)(n.a,{href:"https://segmentfault.com/blog/lxchuan12",rel:"noopener noreferrer",target:"_blank",children:[(0,s.jsx)(n.code,{children:"segmentfault"}),"前端视野专栏"]}),"，欢迎关注~","\n",(0,s.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/lxchuan12",rel:"noopener noreferrer",target:"_blank",children:"知乎前端视野专栏"}),"，欢迎关注~","\n",(0,s.jsx)(n.a,{href:"https://www.yuque.com/lxchuan12/blog",rel:"noopener noreferrer",target:"_blank",children:"语雀前端视野专栏"}),"，新增语雀专栏，欢迎关注~","\n",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/blog",rel:"noopener noreferrer",target:"_blank",children:"github blog"}),"，相关源码和资源都放在这里，求个",(0,s.jsx)(n.code,{children:"star"}),"^_^~"]}),"\n",(0,s.jsxs)(n.h2,{id:"欢迎加微信交流-微信公众号",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#欢迎加微信交流-微信公众号",children:"#"}),"欢迎加微信交流 微信公众号"]}),"\n",(0,s.jsxs)(n.p,{children:["可能比较有趣的微信公众号，长按扫码关注（",(0,s.jsx)(n.strong,{children:"回复pdf获取前端优质书籍pdf"}),"）。欢迎加我微信",(0,s.jsx)(n.code,{children:"ruochuan12"}),"（注明来源，基本来者不拒），拉您进【前端视野交流群】，长期交流学习~"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/ruochuan12/blog/raw/master/docs/about/wechat-official-accounts-mini.jpg",alt:"若川视野"})})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(j,e)})):j(e)}let u=p;p.__RSPRESS_PAGE_META={},p.__RSPRESS_PAGE_META["koa%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"2-本文阅读最佳方式",text:"2. 本文阅读最佳方式",depth:2},{id:"3-vscode-调试-koa-源码方法",text:"3. vscode 调试 koa 源码方法",depth:2},{id:"31-使用文档中的中间件koa-compose例子来调试",text:"3.1 使用文档中的中间件`koa-compose`例子来调试",depth:3},{id:"4-先看看new-koa-结果app是什么",text:"4. 先看看`new Koa()` 结果`app`是什么",depth:2},{id:"41-app-实例contextrequestrequest-官方api文档",text:"4.1 app 实例、context、request、request 官方API文档",depth:3},{id:"5-koa-主流程梳理简化",text:"5. koa 主流程梳理简化",depth:2},{id:"6-koa-compose-源码洋葱模型实现",text:"6. koa-compose 源码（洋葱模型实现）",depth:2},{id:"7-错误处理",text:"7. 错误处理",depth:2},{id:"8-koa2-和-koa1-的简单对比",text:"8. koa2 和 koa1 的简单对比",depth:2},{id:"81-koa-convert-源码",text:"8.1 koa-convert 源码",depth:3},{id:"82-co-源码",text:"8.2 co 源码",depth:3},{id:"83-模拟实现简版-co第一版",text:"8.3 模拟实现简版 co（第一版）",depth:3},{id:"84-模拟实现简版-co第二版",text:"8.4 模拟实现简版 co（第二版）",depth:3},{id:"85-模拟实现简版-co第三版",text:"8.5 模拟实现简版 co（第三版）",depth:3},{id:"86-最终来看下co源码",text:"8.6 最终来看下`co`源码",depth:3},{id:"9-koa-和-express-简单对比",text:"9. koa 和 express 简单对比",depth:2},{id:"10-总结",text:"10. 总结",depth:2},{id:"101-解答下开头的提问",text:"10.1 解答下开头的提问",depth:3},{id:"102-还能做些什么-",text:"10.2 还能做些什么 ？",depth:3},{id:"11-推荐阅读",text:"11. 推荐阅读",depth:2},{id:"另一个系列",text:"另一个系列",depth:2},{id:"关于",text:"关于",depth:2},{id:"欢迎加微信交流-微信公众号",text:"欢迎加微信交流 微信公众号",depth:2}],title:"学习 koa 源码的整体架构，浅析koa洋葱模型原理和co原理",headingTitle:"学习 koa 源码的整体架构，浅析koa洋葱模型原理和co原理",frontmatter:{}}},20713:function(e,n,r){r.d(n,{Z:()=>a});var s=r(52676),o=r(75271),c=r(92815);r(18544);let d={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function i(e,n,r){let s=Object.keys(d).includes(n)?n:r;return d[s](e)}let a=e=>{let{defaultLocale:n="en-US"}=e,r=(0,c.Vi)().page.readingTimeData,d=(0,c.Jr)(),a=(0,c.e7)(),[l,t]=(0,o.useState)(i(r,d,n));return(0,o.useEffect)(()=>{t(i(r,d,n))},[d,r]),(0,s.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:l})}}}]);