"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([["7998"],{10751:function(e,n,r){r.r(n),r.d(n,{default:()=>u});var s=r(52676),c=r(40453),d=r(20713);let i=r.p+"static/image/open-src-app.vue.de4908e8.png",o=r.p+"static/image/open-in-editor-error.bfa6d8d5.png",l=r.p+"static/image/debug.e55fcc86.png",t=r.p+"static/image/search.5c56103b.png",a=r.p+"static/image/debug-launch.ff07d24e.png";function h(e){let n=Object.assign({h1:"h1",a:"a",h2:"h2",blockquote:"blockquote",p:"p",code:"code",strong:"strong",ol:"ol",li:"li",h3:"h3",img:"img",pre:"pre",h4:"h4"},(0,c.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"据说-99-的人不知道-vue-devtools-还能直接打开对应组件文件本文原理揭秘",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#据说-99-的人不知道-vue-devtools-还能直接打开对应组件文件本文原理揭秘",children:"#"}),"据说 99% 的人不知道 vue-devtools 还能直接打开对应组件文件？本文原理揭秘"]}),"\n",(0,s.jsx)(d.Z,{defaultLocale:"zh-CN"}),"\n",(0,s.jsxs)(n.h2,{id:"1-前言",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-前言",children:"#"}),"1. 前言"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["你好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，微信搜索",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/c3hFML3XN9KCUetDOZd-DQ",rel:"noopener noreferrer",target:"_blank",children:"「若川视野」"}),"关注我，专注前端技术分享，一个愿景是帮助5年内前端开阔视野走向前列的公众号。欢迎加我微信",(0,s.jsx)(n.code,{children:"ruochuan12"}),"，长期交流学习。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["这是",(0,s.jsx)(n.code,{children:"学习源码整体架构系列"})," 之 launch-editor 源码（第九篇）。学习源码整体架构系列文章(",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650746362&idx=1&sn=afe3a26cdbde1d423aae4fa99355f369&chksm=88662e76bf11a760a7f0a8565b9e8d52f5e4f056dc2682f213eec6475127d71f6f1d203d6c3a&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"有哪些必看的JS库"}),")：",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744496&idx=1&sn=0f149e9436cb77bf9fc1bfb47aedd334&chksm=8866253cbf11ac2a53b385153cd8e9a0c4018b6b566750cf0b5d61d17afa2e90b52d36db8054&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"jQuery"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744505&idx=1&sn=26801ad6c2a5eb9cf64e7556b6478d39&chksm=88662535bf11ac23eea3f76335f6777e2acbf4ee660b5616148e14ffbefc0e8520806db21056&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"underscore"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744514&idx=1&sn=776336d888d06bfe72cb4d5b07a4b90c&chksm=8866254ebf11ac5822fc078082603f77a4b4d9b487c9f4d7069acb12c727c46c75946fa9b0cd&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"lodash"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744551&idx=1&sn=4d79c2fa97d7c737aab70055c7ec7fa3&chksm=8866256bbf11ac7d9e2269f3638a705d5e5f45056d53ad2faf17b814e4c46ec6b0ba52571bde&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"sentry"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744584&idx=1&sn=b14f8a762f132adcf0f7e3e075ee2ded&chksm=88662484bf11ad922ed27d45873af838298949eea381545e82a511cabf0c6fc6876a8370c6fb&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"vuex"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744604&idx=1&sn=51d8d865c9848fd59f7763f5fb9ce789&chksm=88662490bf11ad86061ae76ff71a1177eeddab02c38d046eecd0e1ad25dc16f7591f91e9e3b2&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"axios"}),"、",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650744703&idx=1&sn=cfb9580241228993e4d376017234ff79&chksm=886624f3bf11ade5f5e37520f6b1291417bcea95f222906548b863f4b61d20e7508eb419eb85&token=192125900&lang=zh_CN&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"koa"}),"、",(0,s.jsx)(n.a,{href:"http://mp.weixin.qq.com/s?__biz=MzA5MjQwMzQyNw==&mid=2650745007&idx=1&sn=1fd6f3caeff6ab61b8d5f644a1dbb7df&chksm=88662b23bf11a23573509a01f941d463b0c61e890b2069427c78c26296197077da359c522fe8&scene=21#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"redux"}),"。整体架构这词语好像有点大，姑且就算是源码整体结构吧，主要就是学习是代码整体结构，不深究其他不是主线的具体函数的实现。本篇文章学习的是实际仓库的代码。下一篇应该是《",(0,s.jsx)(n.strong,{children:"学习 Vuex 4 源码整体架构，深入理解其原理及provide/inject原理"}),"》。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/open-in-editor.git",rel:"noopener noreferrer",target:"_blank",children:"本文仓库地址"}),"：",(0,s.jsx)(n.code,{children:"git clone https://github.com/ruochuan12/open-in-editor.git"}),"，本文最佳阅读方式，克隆仓库自己动手调试，容易吸收消化。"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"要是有人说到怎么读源码，正在读文章的你能推荐我的源码系列文章，那真是无以为报啊"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["我的文章尽量写得让想看源码又不知道怎么看的读者能看懂。我都是推荐使用",(0,s.jsx)(n.strong,{children:"搭建环境断点调试源码学习"}),"，",(0,s.jsx)(n.strong,{children:"哪里不会点哪里"}),"，",(0,s.jsx)(n.strong,{children:"边调试边看，而不是硬看"}),"。正所谓：",(0,s.jsx)(n.strong,{children:"授人与鱼不如授人予渔"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"阅读本文后你将学到："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"如何解决该功能报错问题"}),"\n",(0,s.jsx)(n.li,{children:"如何调试学习源码"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"launch-editor-middleware、launch-editor"})," 等实现原理"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"11-短时间找不到页面对应源文件的场景",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#11-短时间找不到页面对应源文件的场景",children:"#"}),"1.1 短时间找不到页面对应源文件的场景"]}),"\n",(0,s.jsx)(n.p,{children:"不知道你们有没有碰到这样的场景，打开你自己（或者你同事）开发的页面，却短时间难以找到对应的源文件。"}),"\n",(0,s.jsxs)(n.p,{children:["这时你可能会想要是能有",(0,s.jsx)(n.strong,{children:"点击页面按钮自动用编辑器打开对应文件"}),"的功能，那该多好啊。"]}),"\n",(0,s.jsxs)(n.p,{children:["而",(0,s.jsx)(n.code,{children:"vue-devtools"}),"提供了这样的功能，也许你不知道。我觉得很大一部分人都不知道，因为感觉很多人都不常用",(0,s.jsx)(n.code,{children:"vue-devtools"}),"。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"open-in-editor",src:i})}),"\n",(0,s.jsxs)(n.p,{children:["你也许会问，我不用",(0,s.jsx)(n.code,{children:"vue"}),"，我用",(0,s.jsx)(n.code,{children:"react"}),"有没有类似功能啊，有啊，请看",(0,s.jsx)(n.a,{href:"https://github.com/zthxxx/react-dev-inspector",rel:"noopener noreferrer",target:"_blank",children:"react-dev-inspector"}),"。你可能还会问，支持哪些编辑器呀，主流的 ",(0,s.jsx)(n.code,{children:"vscode、webstorm、atom、sublime"})," 等都支持，更多可以看",(0,s.jsx)(n.a,{href:"https://github.com/yyx990803/launch-editor#supported-editors",rel:"noopener noreferrer",target:"_blank",children:"这个列表 Supported editors"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["本文就是根据学习尤大写的 ",(0,s.jsx)(n.a,{href:"https://github.com/yyx990803/launch-editor",rel:"noopener noreferrer",target:"_blank",children:"launch-editor"})," 源码，本着",(0,s.jsx)(n.strong,{children:"知其然，知其所以然"}),"的宗旨，探究 ",(0,s.jsx)(n.code,{children:"vue-devtools"}),"「在编辑器中打开组件」功能实现原理。"]}),"\n",(0,s.jsxs)(n.h3,{id:"12-一句话简述其原理",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#12-一句话简述其原理",children:"#"}),"1.2 一句话简述其原理"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"code path/to/file\n"})}),"\n",(0,s.jsxs)(n.p,{children:["一句话简述原理：利用",(0,s.jsx)(n.code,{children:"nodejs"}),"中的",(0,s.jsx)(n.code,{children:"child_process"}),"，执行了类似",(0,s.jsx)(n.code,{children:"code path/to/file"}),"命令，于是对应编辑器就打开了相应的文件，而对应的编辑器则是通过在进程中执行",(0,s.jsx)(n.code,{children:"ps x"}),"（",(0,s.jsx)(n.code,{children:"Window"}),"则用",(0,s.jsx)(n.code,{children:"Get-Process"}),"）命令来查找的，当然也可以自己指定编辑器。"]}),"\n",(0,s.jsxs)(n.h3,{id:"13-打开编辑器无法打开组件的报错解决方法",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#13-打开编辑器无法打开组件的报错解决方法",children:"#"}),"1.3 打开编辑器无法打开组件的报错解决方法"]}),"\n",(0,s.jsx)(n.p,{children:"而你真正用这个功能时，你可能碰到报错，说不能打开这个文件。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'Could not open App.vue in the editor.\n\nTo specify an editor, specify the EDITOR env variable or add "editor" field to your Vue project config.\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"控制台不能打开编辑器的错误提示",src:o})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["这里说明下写这篇文章时用的是 ",(0,s.jsx)(n.code,{children:"Windows"})," 电脑，",(0,s.jsx)(n.code,{children:"VSCode"})," 编辑器，在",(0,s.jsx)(n.code,{children:"Ubuntu"}),"子系统下使用的终端工具。同时推荐我的文章",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/MHngeDABRV3z2HmN5DRrEw",rel:"noopener noreferrer",target:"_blank",children:"使用 ohmyzsh 打造 windows、ubuntu、mac 系统高效终端命令行工具"}),"，",(0,s.jsx)(n.strong,{children:"用过的都说好"}),"。"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"解决办法也简单，就是这句英文的意思"}),"。"]}),"\n",(0,s.jsxs)(n.h4,{id:"131-方法一先确保在终端能用命令打开你使用的编辑器文中以vscode为例",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#131-方法一先确保在终端能用命令打开你使用的编辑器文中以vscode为例",children:"#"}),"1.3.1 方法一：先确保在终端能用命令打开你使用的编辑器，文中以",(0,s.jsx)(n.code,{children:"VSCode"}),"为例"]}),"\n",(0,s.jsxs)(n.p,{children:["如果你的命令行本身就不能运行",(0,s.jsx)(n.code,{children:"code"}),"等命令打开编辑器，那肯定是报错的。这时需要把",(0,s.jsx)(n.code,{children:"VSCode"}),"注入到命令行终端中。\n注入方法也简单。我的交流群里有小伙伴提供了",(0,s.jsx)(n.code,{children:"mac"}),"电脑的截图。",(0,s.jsx)(n.strong,{children:"windows 用户安装VSCode后，终端默认支持 code 命令无需此操作"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"mac"})," 电脑在 ",(0,s.jsx)(n.code,{children:"VSCode"})," ",(0,s.jsx)(n.code,{children:"command + shift + p"}),"，",(0,s.jsx)(n.code,{children:"Windows"})," 则是 ",(0,s.jsx)(n.code,{children:"ctrl + shift + p"}),"。然后输入",(0,s.jsx)(n.code,{children:"shell"}),"，选择安装",(0,s.jsx)(n.code,{children:"code"}),"。如下图："]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/open-in-editor/images/path-install-code.png",children:"Install 'code' command in PATH"})}),"\n",(0,s.jsxs)(n.p,{children:["这样就能在终端中打开",(0,s.jsx)(n.code,{children:"VSCode"}),"的了。"]}),"\n",(0,s.jsx)(n.p,{children:"如果能在终端打开使用命令编辑器能打开，但实际上还是报错，那么大概率是没有识别到你的编辑器。\n那么可以通过方法二设置指定编辑器。"}),"\n",(0,s.jsxs)(n.h4,{id:"132-方法二具体说明编辑器在环境变量中说明指定编辑器",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#132-方法二具体说明编辑器在环境变量中说明指定编辑器",children:"#"}),"1.3.2 方法二：具体说明编辑器，在环境变量中说明指定编辑器"]}),"\n",(0,s.jsxs)(n.p,{children:["在",(0,s.jsx)(n.code,{children:"vue"}),"项目的根目录下，对应本文则是：",(0,s.jsx)(n.code,{children:"vue3-project"}),"，添加",(0,s.jsx)(n.code,{children:".env.development"}),"文件，其内容是",(0,s.jsx)(n.code,{children:"EDITOR=code"}),"。",(0,s.jsxs)(n.strong,{children:["这里重点说明下，我的 ",(0,s.jsx)(n.code,{children:"vue-cli"})," 版本是",(0,s.jsx)(n.code,{children:"4.5.12"}),"，好像在",(0,s.jsx)(n.code,{children:"vue-cli 3.5"}),"及以上版本才支持自定义",(0,s.jsx)(n.code,{children:"EDITOR"}),"这样的环境变量"]}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# .env.development\n# 当然，我的命令行终端已经有了code这个命令。\nEDITOR=code\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["不用指定编辑器的对应路径（",(0,s.jsx)(n.code,{children:"c/Users/lxchu/AppData/Local/Programs/Microsoft VS Code/bin/code"}),"），因为会报错。为什么会报错，因为我看了源码且试过。因为会被根据空格截断，变成",(0,s.jsx)(n.code,{children:"c/Users/lxchu/AppData/Local/Programs/Microsoft"}),"，当然就报错了。"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"也有可能你的编辑器路径有中文路径导致报错，可以在环境变量中添加你的编辑器路径。"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["如果你通过以上方法，还没解决报错问题。欢迎留言，或者加我微信 ",(0,s.jsx)(n.code,{children:"ruochuan12"})," 交流。毕竟电脑环境不一，很难保证所有人都能正常执行，但我们知道了其原理，就很容易解决问题"]}),"。"]}),"\n",(0,s.jsx)(n.p,{children:"接下来我们从源码角度探究「在编辑器中打开组件」功能的实现原理。"}),"\n",(0,s.jsxs)(n.h2,{id:"2-vue-devtools-open-component-in-editor-文档",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-vue-devtools-open-component-in-editor-文档",children:"#"}),"2. vue-devtools Open component in editor 文档"]}),"\n",(0,s.jsxs)(n.p,{children:["探究原理之前，先来看看",(0,s.jsx)(n.code,{children:"vue-devtools"}),"官方文档。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools#open-component-in-editor",rel:"noopener noreferrer",target:"_blank",children:"vuejs/vue-devtools"}),"\n文档"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Open component in editor"}),"\nTo enable this feature, follow ",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools/blob/dev/docs/open-in-editor.md",rel:"noopener noreferrer",target:"_blank",children:"this guide"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["这篇指南中写了在",(0,s.jsx)(n.code,{children:"Vue CLI 3"}),"中是",(0,s.jsx)(n.strong,{children:"开箱即用"}),"。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"Vue CLI 3 supports this feature out-of-the-box when running vue-cli-service serve.\n"})}),"\n",(0,s.jsxs)(n.p,{children:["也详细写了如何在",(0,s.jsx)(n.code,{children:"Webpack"}),"下使用。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"# 1. Import the package:\nvar openInEditor = require('launch-editor-middleware')\n# 2. In the devServer option, register the /__open-in-editor HTTP route:\ndevServer: {\n  before (app) {\n    app.use('/__open-in-editor', openInEditor())\n  }\n}\n# 3. The editor to launch is guessed. You can also specify the editor app with the editor option. See the supported editors list.\n# 用哪个编辑器打开会自动猜测。你也可以具体指明编辑器。这里显示更多的支持编辑器列表\nopenInEditor('code')\n# 4. You can now click on the name of the component in the Component inspector pane (if the devtools knows about its file source, a tooltip will appear).\n# 如果`vue-devtools`开发者工具有提示点击的组件的显示具体路径，那么你可以在编辑器打开。\n"})}),"\n",(0,s.jsxs)(n.p,{children:["同时也写了如何在",(0,s.jsx)(n.code,{children:"Node.js"}),"中使用等。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Node.js"}),"\nYou can use the ",(0,s.jsx)(n.a,{href:"https://github.com/yyx990803/launch-editor#usage",rel:"noopener noreferrer",target:"_blank",children:"launch-editor"})," package to setup an HTTP route with the ",(0,s.jsx)(n.code,{children:"/__open-in-editor"})," path. It will receive file as an URL variable."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["查看更多可以看",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools/blob/dev/docs/open-in-editor.md",rel:"noopener noreferrer",target:"_blank",children:"这篇指南"}),"。"]}),"\n",(0,s.jsxs)(n.h2,{id:"3-环境准备工作",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-环境准备工作",children:"#"}),"3. 环境准备工作"]}),"\n",(0,s.jsxs)(n.p,{children:["熟悉我的读者，都知道我都是",(0,s.jsx)(n.strong,{children:"推荐调试看源码"}),"的，正所谓：",(0,s.jsx)(n.strong,{children:"哪里不会点哪里"}),"。而且调试一般都写得很详细，是希望能帮助到一部分人知道如何看源码。于是我特意新建一个仓库",(0,s.jsx)(n.a,{href:"https://github.com/ruochuan12/open-in-editor",rel:"noopener noreferrer",target:"_blank",children:"open-in-editor"})," ",(0,s.jsx)(n.code,{children:"git clone https://github.com/ruochuan12/open-in-editor.git"}),"，便于大家克隆学习。"]}),"\n",(0,s.jsxs)(n.p,{children:["安装",(0,s.jsx)(n.code,{children:"vue-cli"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"npm install -g @vue/cli\n# OR\nyarn global add @vue/cli\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"node -V\n# v14.16.0\nvue -V\n# @vue/cli 4.5.12\nvue create vue3-project\n# 这里选择的是vue3、vue2也是一样的。\n# Please pick a preset: Default (Vue 3 Preview) ([Vue 3] babel, eslint)\nnpm install\n# OR\nyarn install\n"})}),"\n",(0,s.jsx)(n.p,{children:"这里同时说明下我的vscode版本。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"code -v\n1.55.2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["前文提到的",(0,s.jsx)(n.code,{children:"Vue CLI 3"}),"中",(0,s.jsx)(n.strong,{children:"开箱即用"}),"和",(0,s.jsx)(n.code,{children:"Webpack"}),"使用方法。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"vue3-project/package.json"}),"中有一个",(0,s.jsx)(n.code,{children:"debug"}),"按钮。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"debug示意图",src:l})}),"\n",(0,s.jsxs)(n.p,{children:["选择第一项，serve ",(0,s.jsx)(n.code,{children:"vue-cli-service serve"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["我们来搜索下",(0,s.jsx)(n.code,{children:"'launch-editor-middleware'"}),"这个中间件，一般来说搜索不到",(0,s.jsx)(n.code,{children:"node_modules"}),"下的文件，需要设置下。当然也有个简单做法。就是「排除的文件」右侧旁边有个设置图标「使用“排查设置”与“忽略文件”」，点击下。"]}),"\n",(0,s.jsxs)(n.p,{children:["其他的就不赘述了。可以看这篇知乎回答：",(0,s.jsx)(n.a,{href:"https://www.zhihu.com/question/309220217/answer/586510407",rel:"noopener noreferrer",target:"_blank",children:"vscode怎么设置可以搜索包含node_modules中的文件?"})]}),"\n",(0,s.jsxs)(n.p,{children:["这时就搜到了",(0,s.jsx)(n.code,{children:"vue3-project/node_modules/@vue/cli-service/lib/commands/serve.js"}),"中有使用这个中间件。"]}),"\n",(0,s.jsx)(n.p,{children:"如下图所示："}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"搜索node_modules下的文件 - launch-editor-middleware 中间件",src:t})}),"\n",(0,s.jsxs)(n.h2,{id:"4-vue-devtools-开箱即用具体源码实现",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-vue-devtools-开箱即用具体源码实现",children:"#"}),"4. vue-devtools 开箱即用具体源码实现"]}),"\n",(0,s.jsxs)(n.p,{children:["接着我们来看",(0,s.jsx)(n.code,{children:"Vue CLI 3"}),"中",(0,s.jsx)(n.strong,{children:"开箱即用"}),"具体源码实现。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/@vue/cli-service/lib/commands/serve.js\n// 46行\nconst launchEditorMiddleware = require('launch-editor-middleware')\n// 192行\nbefore (app, server) {\n    // launch editor support.\n    // this works with vue-devtools & @vue/cli-overlay\n    app.use('/__open-in-editor', launchEditorMiddleware(() => console.log(\n        `To specify an editor, specify the EDITOR env variable or ` +\n        `add \"editor\" field to your Vue project config.\\n`\n    )))\n    // 省略若干代码...\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["本文项目使用的是Vue3，如果无法访问谷歌应用商店，如果未安装 vue3 对应的 vue-devtools，",(0,s.jsx)(n.a,{href:"https://chrome.zzzmh.cn/info?token=ljjemllljcmogpfapbkkighbhhppjdbg",rel:"noopener noreferrer",target:"_blank",children:"可以点此下载安装Vue3对应版本的vue-devtools"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://chrome.zzzmh.cn/info?token=nhdogjmejiglipccpnnnanhbledajbpd",rel:"noopener noreferrer",target:"_blank",children:"若平时项目开发使用的是vue2，可以点此下载安装vue2版本的vue-devtools"})}),"\n",(0,s.jsxs)(n.p,{children:["点击",(0,s.jsx)(n.code,{children:"vue-devtools"}),"中的图中 ",(0,s.jsx)(n.code,{children:"open in editor"})," 按钮时，会有一个请求，",(0,s.jsx)(n.code,{children:"http://localhost:8080/__open-in-editor?file=src/App.vue"}),"，不出意外就会打开该组件啦。"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"open src/App.vue in editor",src:i})}),"\n",(0,s.jsxs)(n.p,{children:["接着我们在",(0,s.jsx)(n.code,{children:"launchEditorMiddleware"}),"的具体实现。"]}),"\n",(0,s.jsxs)(n.h2,{id:"5-launch-editor-middleware",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-launch-editor-middleware",children:"#"}),"5. launch-editor-middleware"]}),"\n",(0,s.jsx)(n.p,{children:"看源码时，先看调试截图。"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"debug-launch",src:a})}),"\n",(0,s.jsxs)(n.p,{children:["在",(0,s.jsx)(n.code,{children:"launch-editor-middleware"}),"中间件中作用在于最终是调用 ",(0,s.jsx)(n.code,{children:"launch-editor"})," 打开文件。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/launch-editor-middleware/index.js\nconst url = require('url')\nconst path = require('path')\nconst launch = require('launch-editor')\n\nmodule.exports = (specifiedEditor, srcRoot, onErrorCallback) => {\n  // specifiedEditor => 这里传递过来的则是 () => console.log() 函数\n  // 所以和 onErrorCallback 切换下，把它赋值给错误回调函数\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor\n    specifiedEditor = undefined\n  }\n\n  // 如果第二个参数是函数，同样把它赋值给错误回调函数\n  // 这里传递过来的是undefined\n  if (typeof srcRoot === 'function') {\n    onErrorCallback = srcRoot\n    srcRoot = undefined\n  }\n\n  // srcRoot 是传递过来的参数，或者当前node进程的目录\n  srcRoot = srcRoot || process.cwd()\n\n  // 最后返回一个函数， express 中间件\n  return function launchEditorMiddleware (req, res, next) {\n    // 省略 ...\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"上一段中，这种切换参数的写法，在很多源码中都很常见。为的是方便用户调用时传参。虽然是多个参数，但可以传一个或者两个"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["可以根据情况打上断点。比如这里我会在",(0,s.jsx)(n.code,{children:"launch(path.resolve(srcRoot, file), specifiedEditor, onErrorCallback)"}),"打断点。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'// vue3-project/node_modules/launch-editor-middleware/index.js\nmodule.exports = (specifiedEditor, srcRoot, onErrorCallback) => {\n  // 省略上半部分\n  return function launchEditorMiddleware (req, res, next) {\n    // 根据请求解析出file路径\n    const { file } = url.parse(req.url, true).query || {}\n    // 如果没有文件路径，则报错\n    if (!file) {\n      res.statusCode = 500\n      res.end(`launch-editor-middleware: required query param "file" is missing.`)\n    } else {\n      // 否则拼接路径，用launch打开。\n      launch(path.resolve(srcRoot, file), specifiedEditor, onErrorCallback)\n      res.end()\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"6-launch-editor",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#6-launch-editor",children:"#"}),"6. launch-editor"]}),"\n",(0,s.jsxs)(n.p,{children:["跟着断点来看，走到了",(0,s.jsx)(n.code,{children:"launchEditor"}),"函数。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/launch-editor/index.js\nfunction launchEditor (file, specifiedEditor, onErrorCallback) {\n  // 解析出文件路径和行号列号等信息\n  const parsed = parseFile(file)\n  let { fileName } = parsed\n  const { lineNumber, columnNumber } = parsed\n\n  // 判断文件是否存在，不存在，直接返回。\n  if (!fs.existsSync(fileName)) {\n    return\n  }\n  // 所以和 onErrorCallback 切换下，把它赋值给错误回调函数\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor\n    specifiedEditor = undefined\n  }\n  // 包裹一层函数\n  onErrorCallback = wrapErrorCallback(onErrorCallback)\n\n  // 猜测当前进程运行的是哪个编辑器\n  const [editor, ...args] = guessEditor(specifiedEditor)\n  if (!editor) {\n    onErrorCallback(fileName, null)\n    return\n  }\n  // 省略剩余部分，后文再讲述...\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"61-wraperrorcallback-包裹错误函数回调",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#61-wraperrorcallback-包裹错误函数回调",children:"#"}),"6.1 wrapErrorCallback 包裹错误函数回调"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"onErrorCallback = wrapErrorCallback(onErrorCallback)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这段的代码，就是传递错误回调函数，",(0,s.jsx)(n.code,{children:"wrapErrorCallback"})," 返回给一个新的函数，",(0,s.jsx)(n.code,{children:"wrapErrorCallback"})," 执行时，再去执行 onErrorCallback(cb)。"]}),"\n",(0,s.jsxs)(n.p,{children:["我相信读者朋友能看懂，我单独拿出来讲述，主要是因为",(0,s.jsx)(n.strong,{children:"这种包裹函数的形式在很多源码里都很常见"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:["这里也就是文章开头终端错误图",(0,s.jsx)(n.code,{children:"Could not open App.vue in the editor."}),"输出的代码位置。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/launch-editor/index.js\nfunction wrapErrorCallback (cb) {\n  return (fileName, errorMessage) => {\n    console.log()\n    console.log(\n      chalk.red('Could not open ' + path.basename(fileName) + ' in the editor.')\n    )\n    if (errorMessage) {\n      if (errorMessage[errorMessage.length - 1] !== '.') {\n        errorMessage += '.'\n      }\n      console.log(\n        chalk.red('The editor process exited with an error: ' + errorMessage)\n      )\n    }\n    console.log()\n    if (cb) cb(fileName, errorMessage)\n  }\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"62-guesseditor-猜测当前正在使用的编辑器",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#62-guesseditor-猜测当前正在使用的编辑器",children:"#"}),"6.2 guessEditor 猜测当前正在使用的编辑器"]}),"\n",(0,s.jsx)(n.p,{children:"这个函数主要做了如下四件事情："}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"如果具体指明了编辑器，则解析下返回。"}),"\n",(0,s.jsxs)(n.li,{children:["找出当前进程中哪一个编辑器正在运行。",(0,s.jsx)(n.code,{children:"macOS"})," 和 ",(0,s.jsx)(n.code,{children:"Linux"})," 用 ",(0,s.jsx)(n.code,{children:"ps x"})," 命令",(0,s.jsx)(n.code,{children:"windows"})," 则用 ",(0,s.jsx)(n.code,{children:"Get-Process"})," 命令"]}),"\n",(0,s.jsxs)(n.li,{children:["如果都没找到就用 ",(0,s.jsx)(n.code,{children:"process.env.VISUAL"}),"或者",(0,s.jsx)(n.code,{children:"process.env.EDITOR"}),"。这就是为啥开头错误提示可以使用环境变量指定编辑器的原因。"]}),"\n",(0,s.jsxs)(n.li,{children:["最后还是没有找到就返回",(0,s.jsx)(n.code,{children:"[null]"}),"，则会报错。"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const [editor, ...args] = guessEditor(specifiedEditor)\nif (!editor) {\n    onErrorCallback(fileName, null)\n    return\n}\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/launch-editor/guess.js\nconst shellQuote = require('shell-quote')\nconst childProcess = require('child_process')\n\nmodule.exports = function guessEditor (specifiedEditor) {\n  // 如果指定了编辑器，则解析一下，这里没有传入。如果自己指定了路径。\n  // 比如 c/Users/lxchu/AppData/Local/Programs/Microsoft VS Code/bin/code\n  //   会根据空格切割成 c/Users/lxchu/AppData/Local/Programs/Microsoft\n  if (specifiedEditor) {\n    return shellQuote.parse(specifiedEditor)\n  }\n  // We can find out which editor is currently running by:\n  // `ps x` on macOS and Linux\n  // `Get-Process` on Windows\n  try {\n    //  代码有删减\n    if (process.platform === 'darwin') {\n      const output = childProcess.execSync('ps x').toString()\n      // 省略\n    } else if (process.platform === 'win32') {\n      const output = childProcess\n        .execSync('powershell -Command \"Get-Process | Select-Object Path\"', {\n          stdio: ['pipe', 'pipe', 'ignore']\n        })\n        .toString()\n        // 省略\n    } else if (process.platform === 'linux') {\n      const output = childProcess\n        .execSync('ps x --no-heading -o comm --sort=comm')\n        .toString()\n    }\n  } catch (error) {\n    // Ignore...\n  }\n\n  // Last resort, use old skool env vars\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL]\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR]\n  }\n\n  return [null]\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["看完了 guessEditor 函数，我们接着来看 ",(0,s.jsx)(n.code,{children:"launch-editor"})," 剩余部分。"]}),"\n",(0,s.jsxs)(n.h3,{id:"63-launch-editor-剩余部分",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#63-launch-editor-剩余部分",children:"#"}),"6.3 launch-editor 剩余部分"]}),"\n",(0,s.jsx)(n.p,{children:"以下这段代码不用细看，调试的时候细看就行。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// vue3-project/node_modules/launch-editor/index.js\nfunction launchEditor(){\n  //  省略上部分...\n  if (\n    process.platform === 'linux' &&\n    fileName.startsWith('/mnt/') &&\n    /Microsoft/i.test(os.release())\n  ) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path.relative('', fileName)\n  }\n\n  if (lineNumber) {\n    const extraArgs = getArgumentsForPosition(editor, fileName, lineNumber, columnNumber)\n    args.push.apply(args, extraArgs)\n  } else {\n    args.push(fileName)\n  }\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL')\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = childProcess.spawn(\n      'cmd.exe',\n      ['/C', editor].concat(args),\n      { stdio: 'inherit' }\n    )\n  } else {\n    _childProcess = childProcess.spawn(editor, args, { stdio: 'inherit' })\n  }\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null\n\n    if (errorCode) {\n      onErrorCallback(fileName, '(code ' + errorCode + ')')\n    }\n  })\n\n  _childProcess.on('error', function (error) {\n    onErrorCallback(fileName, error.message)\n  })\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["这一大段中，主要的就是",(0,s.jsx)(n.strong,{children:"以下代码"}),"，用子进程模块。简单来说子进程模块有着执行命令的能力。"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const childProcess = require('child_process')\n\nif (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = childProcess.spawn(\n        'cmd.exe',\n        ['/C', editor].concat(args),\n        { stdio: 'inherit' }\n    )\n    } else {\n    _childProcess = childProcess.spawn(editor, args, { stdio: 'inherit' })\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["行文至此，就基本接近尾声了。原理其实就是利用",(0,s.jsx)(n.code,{children:"nodejs"}),"中的",(0,s.jsx)(n.code,{children:"child_process"}),"，执行了类似",(0,s.jsx)(n.code,{children:"code path/to/file"}),"命令。"]}),"\n",(0,s.jsxs)(n.h2,{id:"7-总结",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#7-总结",children:"#"}),"7. 总结"]}),"\n",(0,s.jsxs)(n.p,{children:["这里总结一下：首先文章开头通过提出「短时间找不到页面对应源文件的场景」，并针对容易碰到的报错情况给出了解决方案。\n其次，配置了环境跟着调试学习了",(0,s.jsx)(n.code,{children:"vue-devtools"}),"中使用的尤大写的 ",(0,s.jsx)(n.a,{href:"https://github.com/yyx990803/launch-editor",rel:"noopener noreferrer",target:"_blank",children:"yyx990803/launch-editor"}),"。"]}),"\n",(0,s.jsxs)(n.h3,{id:"71-一句话简述其原理",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#71-一句话简述其原理",children:"#"}),"7.1 一句话简述其原理"]}),"\n",(0,s.jsx)(n.p,{children:"我们回顾下开头的原理内容。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"code path/to/file\n"})}),"\n",(0,s.jsxs)(n.p,{children:["一句话简述原理：利用",(0,s.jsx)(n.code,{children:"nodejs"}),"中的",(0,s.jsx)(n.code,{children:"child_process"}),"，执行了类似",(0,s.jsx)(n.code,{children:"code path/to/file"}),"命令，于是对应编辑器就打开了相应的文件，而对应的编辑器则是通过在进程中执行",(0,s.jsx)(n.code,{children:"ps x"}),"（",(0,s.jsx)(n.code,{children:"Window"}),"则用",(0,s.jsx)(n.code,{children:"Get-Process"}),"）命令来查找的，当然也可以自己指定编辑器。"]}),"\n",(0,s.jsx)(n.p,{children:"最后还能做什么呢。"}),"\n",(0,s.jsxs)(n.p,{children:["可以再看看 ",(0,s.jsx)(n.a,{href:"https://github.com/umijs/launch-editor",rel:"noopener noreferrer",target:"_blank",children:"umijs/launch-editor"})," 和 ",(0,s.jsx)(n.a,{href:"https://github.com/facebook/create-react-app/blob/master/packages/react-dev-utils/launchEditor.js",rel:"noopener noreferrer",target:"_blank",children:"react-dev-utils/launchEditor.js"})," 。他们的代码几乎类似。"]}),"\n",(0,s.jsxs)(n.p,{children:["也可以利用",(0,s.jsx)(n.code,{children:"Node.js"}),"做一些提高开发效率等工作，同时可以学习",(0,s.jsx)(n.code,{children:"child_process"}),"等模块。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"也不要禁锢自己的思维，把前端禁锢在页面中，应该把视野拓宽"}),"。"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.code,{children:"Node.js"}),"是我们前端人探索操作文件、操作网络等的好工具"]}),"。"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["如果读者朋友发现有不妥或可改善之处，再或者哪里没写明白的地方，欢迎评论指出。另外觉得写得不错，对您有些许帮助，可以点赞、评论、转发分享，也是对我的一种支持，万分感谢。如果能关注我的前端公众号：",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/c3hFML3XN9KCUetDOZd-DQ",rel:"noopener noreferrer",target:"_blank",children:"「若川视野」"}),"，就更好啦。"]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"关于",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#关于",children:"#"}),"关于"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["你好，我是",(0,s.jsx)(n.a,{href:"https://ruochuan12.github.io",rel:"noopener noreferrer",target:"_blank",children:"若川"}),"，微信搜索",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/s/c3hFML3XN9KCUetDOZd-DQ",rel:"noopener noreferrer",target:"_blank",children:"「若川视野」"}),"关注我，专注前端技术分享，一个愿景是帮助5年内前端开阔视野走向前列的公众号。欢迎加我微信",(0,s.jsx)(n.code,{children:"ruochuan12"}),"，长期交流学习。\n主要有以下系列文章：",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MjQwMzQyNw==&action=getalbum&album_id=1342211915371675650#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"学习源码整体架构系列"}),"、",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MjQwMzQyNw==&action=getalbum&album_id=1668518390266724360#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"年度总结"}),"、",(0,s.jsx)(n.a,{href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzA5MjQwMzQyNw==&action=getalbum&album_id=1342989113611419648#wechat_redirect",rel:"noopener noreferrer",target:"_blank",children:"JS基础系列"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h2,{id:"参考链接",children:[(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"}),"参考链接"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/yyx990803/launch-editor",rel:"noopener noreferrer",target:"_blank",children:"yyx990803/launch-editor"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/umijs/launch-editor",rel:"noopener noreferrer",target:"_blank",children:"umijs/launch-editor"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools",rel:"noopener noreferrer",target:"_blank",children:"vuejs/vue-devtools"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools/blob/dev/docs/open-in-editor.md",rel:"noopener noreferrer",target:"_blank",children:"vue-devtools open-in-editor.md"}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/vuejs/vue-devtools/issues/821",rel:"noopener noreferrer",target:"_blank",children:'"Open in editor" button doesn\'t work in Win 10 with VSCode if installation path contains spaces'}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/facebook/create-react-app/blob/master/packages/react-dev-utils/launchEditor.js",rel:"noopener noreferrer",target:"_blank",children:"react-dev-utils/launchEditor.js"})]})]})}function p(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(h,e)})):h(e)}let u=p;p.__RSPRESS_PAGE_META={},p.__RSPRESS_PAGE_META["open-in-editor%2Findex.md"]={toc:[{id:"1-前言",text:"1. 前言",depth:2},{id:"11-短时间找不到页面对应源文件的场景",text:"1.1 短时间找不到页面对应源文件的场景",depth:3},{id:"12-一句话简述其原理",text:"1.2 一句话简述其原理",depth:3},{id:"13-打开编辑器无法打开组件的报错解决方法",text:"1.3 打开编辑器无法打开组件的报错解决方法",depth:3},{id:"131-方法一先确保在终端能用命令打开你使用的编辑器文中以vscode为例",text:"1.3.1 方法一：先确保在终端能用命令打开你使用的编辑器，文中以`VSCode`为例",depth:4},{id:"132-方法二具体说明编辑器在环境变量中说明指定编辑器",text:"1.3.2 方法二：具体说明编辑器，在环境变量中说明指定编辑器",depth:4},{id:"2-vue-devtools-open-component-in-editor-文档",text:"2. vue-devtools Open component in editor 文档",depth:2},{id:"3-环境准备工作",text:"3. 环境准备工作",depth:2},{id:"4-vue-devtools-开箱即用具体源码实现",text:"4. vue-devtools 开箱即用具体源码实现",depth:2},{id:"5-launch-editor-middleware",text:"5. launch-editor-middleware",depth:2},{id:"6-launch-editor",text:"6. launch-editor",depth:2},{id:"61-wraperrorcallback-包裹错误函数回调",text:"6.1 wrapErrorCallback 包裹错误函数回调",depth:3},{id:"62-guesseditor-猜测当前正在使用的编辑器",text:"6.2 guessEditor 猜测当前正在使用的编辑器",depth:3},{id:"63-launch-editor-剩余部分",text:"6.3 launch-editor 剩余部分",depth:3},{id:"7-总结",text:"7. 总结",depth:2},{id:"71-一句话简述其原理",text:"7.1 一句话简述其原理",depth:3},{id:"关于",text:"关于",depth:2},{id:"参考链接",text:"参考链接",depth:2}],title:"据说 99% 的人不知道 vue-devtools 还能直接打开对应组件文件？本文原理揭秘",headingTitle:"据说 99% 的人不知道 vue-devtools 还能直接打开对应组件文件？本文原理揭秘",frontmatter:{theme:"smartblue",highlight:"dracula"}}},20713:function(e,n,r){r.d(n,{Z:()=>l});var s=r(52676),c=r(75271),d=r(92815);r(18544);let i={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"小于 1 分钟"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function o(e,n,r){let s=Object.keys(i).includes(n)?n:r;return i[s](e)}let l=e=>{let{defaultLocale:n="en-US"}=e,r=(0,d.Vi)().page.readingTimeData,i=(0,d.Jr)(),l=(0,d.e7)(),[t,a]=(0,c.useState)(o(r,i,n));return(0,c.useEffect)(()=>{a(o(r,i,n))},[i,r]),(0,s.jsx)("span",{"data-dark":String(l),className:"rp-reading-time",children:t})}}}]);